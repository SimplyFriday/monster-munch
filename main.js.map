{"version":3,"sources":["webpack://excalibur-webpack/webpack/runtime/chunk loaded","webpack://excalibur-webpack/./src/actors/objects/appliance.ts","webpack://excalibur-webpack/./src/resources.ts","webpack://excalibur-webpack/./src/actors/objects/insideFloorWallSprites.ts","webpack://excalibur-webpack/./src/actors/objects/insideTileSprites.ts","webpack://excalibur-webpack/./src/actors/objects/itemIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/animationHelper.ts","webpack://excalibur-webpack/./src/actors/objects/item.ts","webpack://excalibur-webpack/./src/actors/objects/meal.ts","webpack://excalibur-webpack/./src/actors/characters/humanoid.ts","webpack://excalibur-webpack/./src/actors/characters/customer.ts","webpack://excalibur-webpack/./src/actors/objects/ingredient.ts","webpack://excalibur-webpack/./src/actors/objects/ingredientSpawner.ts","webpack://excalibur-webpack/./src/actors/objects/recipes.ts","webpack://excalibur-webpack/./src/actors/objects/pan.ts","webpack://excalibur-webpack/./src/actors/objects/levelBuildingHelper.ts","webpack://excalibur-webpack/./src/actors/objects/balloonIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/uiHelper.ts","webpack://excalibur-webpack/./src/actors/characters/player.ts","webpack://excalibur-webpack/./src/scenes/levels/levelBase.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTest.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTestRay.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/global","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/publicPath","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"names":["deferred","ApplianceType","levelLoop1","Resources","Bag","Texture","bag","ItemIconSheet","PlayerSprites","LevelLoop1","Sound","BalloonIconSheet","PanAttack","PanEmpty","PanFilled","PanCooking","PanDone","PanBurned","InsideTilesB","InsideFloorsWalls","Stove","stove","Trashcan","trashcan","Customer1","Actor","this","sheet","getSprite","SpriteSheet","image","rows","columns","spWidth","spHeight","iconSheet","getScaledAnimation","engine","spritesheet","startIndex","endIndex","scaleFactor","speed","a","getAnimationBetween","scaleX","LevelBuildingHelper","tileHeight","width","scaleY","height","scale","vec","getScaledSprite","sprite","isHeld","canBeTrashed","onPreUpdate","delta","body","collider","type","CollisionType","onInitialize","Item","spriteScale","baseSpeed","sprites","setZIndex","addDrawing","AnimationHelper","doFacing","vel","x","y","facing","setDrawing","getFacingTargetPos","tilePercent","xOffset","yOffset","tileWidth","pos","initialPosition","clone","walkToSeat","seatPos","finalFacing","actions","moveTo","asPromise","then","console","log","mealCheckPos","actionTimer","CustomerTimer","interval","fcn","routine","repeats","customer","scene","add","leaveHappy","kill","m","actors","filter","Meal","name","wantsMeal","contains","length","Humanoid","Timer","setupSpawner","ingredientName","ingredientSprite","_ingredientName","_ingredientSprite","spawnIngredient","on","e","otherActor","other","actor","Ingredient","newItemTimer","IngredientTimer","spawner","reset","createIngredientAtPosition","Recipes","MonsterPie","ingredients","resultName","resultSprite","ingredientsEqual","ingredientCheck","Array","isArray","arr1","concat","sort","arr2","i","ItemIconSprites","PieRed","cookTimeMultiplier","isAttacking","cookTime","isDone","isBurned","shape","Shape","push","Appliance","applianceType","ServingPlate","product","r","createMeal","Trash","Customer","attackAnimation","attack","flipHorizontal","createWallTile","display","xPos","yPos","createTile","createBackgroundTile","hasCollision","z","Color","color","createIngrediantSpawnerOnTile","spawnerSprite","IngredientSpawner","itemScale","createIngredientOnTile","xPosTile","yPosTile","position","createApplianceOnTile","asSprite","InsideTileSprites","Tray","Error","createPanOnTile","Pan","panAttackSprites","loop","eSpr","fSpr","dSpr","bSpr","cookingSheet","cAnim","createCustomer","balloonSheet","createUIIcon","texture","se","ScreenElement","iconWidth","iconHeight","scaleSprite","s","createUIToggleButton","spriteOn","spriteOff","addLevelUI","musicToggle","BalloonIconSprites","MusicBalloon","MusicBalloonOff","event","toggleMusic","muteMusic","hp1","Heart","hp2","hp3","hitboxScale","attacking","heldItem","doMovement","input","keyboard","wasPressed","Input","trySetDownItem","tryPickupItem","examine","val","prompt","goToScene","velX","velY","vecMag","Math","sqrt","abs","adjustedVelY","adjustedVelX","tPos","targets","item","alert","JSON","stringify","grid","UIHelper","player","Player","camera","strategy","lockToActor","musicTrack","play","addBackgroundTiles","addForegroundTiles","addAppliances","addPans","addItems","customerSeats","addSeats","stop","Scene","baseTile","InsideFloorWallSprites","BlueTilePattern","CounterFaceLeft","CounterFaceCenter","CounterFaceRight","Table_V_BottomLeg","wallColor","CounterVerticalFull","CounterCornerBottomLeft","CounterBottomCornerRight","CounterBottomCentral","Table_V_TopLarge","Apple","FlourBag","Mayo","Posion","Skull","seats","RedStool","c","LevelBase","StoolTopRed","StoolTopGrey","Table_H_TopLeft","Table_H_TopMid","Table_H_TopRight","Table_H_BottomLeftLeg","Table_H_BottomMidNoLeg","Table_H_BottomRightLeg","GreyStool","TrashCanTopEmpty","TrashCanBottom","TrashCanTopLid","game","displayMode","DisplayMode","start","LevelTest","Level1","LevelTestRay","loader","Loader","Object","values","suppressPlayButton","Engine","backgroundColor","document","oncontextmenu","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","g","globalThis","Function","window","o","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","replace","p","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"mappings":"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","file":"main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Actor } from \"excalibur\";\n\nexport class Appliance extends Actor {\n    public applianceType:ApplianceType;\n}\n\nexport enum ApplianceType {\n    Stove,\n    ServingPlate,\n    Trashcan\n}","import { Sound, SpriteSheet, Texture } from 'excalibur';\nimport bag from './images/bag.png';\nimport itemIcons from './images/item_icons.png';\nimport balloonIcons from './images/balloon_1.png';\nimport playerSprites from './images/player_sprites.png';\nimport panAttack from './images/pan_attack.png';\nimport panEmpty from './images/pan_empty.png';\nimport panFilled from './images/pan_filled.png';\nimport panCooking from './images/pan_cooking.png';\nimport panDone from './images/pan_done.png';\nimport panBurned from './images/pan_burned.png';\nimport insideTilesB from './images/tileB_inside4.png';\nimport insideFloorsWalls from './images/tileA5_inside.png';\nimport stove from './images/stove.png';\nimport trashcan from './images/trashcan.png';\nimport customer1 from './images/customer_1.png';\n\nconst levelLoop1 = require('./audio/level_loop1.wav');\n/**\n * Default global resource dictionary. This gets loaded immediately\n * and holds available assets for the game.\n */\n\nconst Resources = {\n    Bag: new Texture(bag),\n    ItemIconSheet: new Texture(itemIcons),\n    PlayerSprites: new Texture(playerSprites),\n    LevelLoop1: new Sound(levelLoop1),\n    BalloonIconSheet: new Texture(balloonIcons),\n    PanAttack: new Texture(panAttack),\n    PanEmpty: new Texture(panEmpty),\n    PanFilled: new Texture(panFilled),\n    PanCooking: new Texture(panCooking),\n    PanDone: new Texture(panDone),\n    PanBurned: new Texture(panBurned),\n    InsideTilesB: new Texture(insideTilesB),\n    InsideFloorsWalls: new Texture(insideFloorsWalls),\n    Stove: new Texture(stove),\n    Trashcan: new Texture(trashcan),\n    Customer1: new Texture(customer1)\n}\n\nexport { Resources }\n","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideFloorWallSprites {\n    private static sheet = new SpriteSheet({\n        image: Resources.InsideFloorsWalls,\n        rows: 16,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get BlueTilePattern () {\n        return this.sheet.getSprite(21);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideTileSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.InsideTilesB,\n        rows: 16,\n        columns: 16,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get CounterVerticalFull () {\n        return this.iconSheet.getSprite(16);\n    }\n\n    public static get CounterCornerBottomLeft () {\n        return this.iconSheet.getSprite(17);\n    }\n\n    public static get CounterBottomCentral () {\n        return this.iconSheet.getSprite(18);\n    }\n    \n    public static get CounterBottomCornerRight () {\n        return this.iconSheet.getSprite(19);\n    }\n \n    public static get CounterFaceLeft () {\n        return this.iconSheet.getSprite(49);\n    }\n\n    public static get CounterFaceCenter () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get CounterFaceRight () {\n        return this.iconSheet.getSprite(51);\n    }\n\n    public static get Table_V_TopSmall () {\n        return this.iconSheet.getSprite(88);\n    }\n\n    public static get Table_H_TopLeft () {\n        return this.iconSheet.getSprite(89);\n    }\n    \n    public static get Table_H_TopMid () {\n        return this.iconSheet.getSprite(90);\n    }\n\n    public static get Table_H_TopRight () {\n        return this.iconSheet.getSprite(91);\n    }\n\n    public static get Table_V_TopLarge () {\n        return this.iconSheet.getSprite(104);\n    }\n\n    public static get Table_H_BottomLeftLeg () {\n        return this.iconSheet.getSprite(105);\n    }\n\n    public static get Table_H_BottomMidNoLeg () {\n        return this.iconSheet.getSprite(106);\n    }\n\n    public static get Table_H_BottomRightLeg () {\n        return this.iconSheet.getSprite(107);\n    }\n\n    public static get Table_V_Mid () {\n        return this.iconSheet.getSprite(120);\n    }\n\n    public static get StoolTopRed () {\n        return this.iconSheet.getSprite(121);\n    }\n\n    public static get Table_V_BottomLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get Table_H_MidLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get StoolBottomRed() {\n        return this.iconSheet.getSprite(137);\n    }\n    public static get StoolTopGrey() {\n        return this.iconSheet.getSprite(153);\n    }\n    public static get StoolBottomGrey() {\n        return this.iconSheet.getSprite(169);\n    }\n\n    public static get RedStool () {\n        return this.iconSheet.getSprite(152);\n    }\n\n    public static get GreyStool () {\n        return this.iconSheet.getSprite(168);\n    }\n\n    public static get TrashCanTopLid () {\n        return this.iconSheet.getSprite(172);\n    }\n\n    public static get TrashCanTopEmpty () {\n        return this.iconSheet.getSprite(173);\n    }\n\n    public static get TrashCanTopTrash () {\n        return this.iconSheet.getSprite(174);\n    }\n\n    public static get TrashCanTopBag () {\n        return this.iconSheet.getSprite(175);\n    }\n\n    public static get TrashCanBottom () {\n        return this.iconSheet.getSprite(188);\n    }\n\n    public static get Tray () {\n        return this.iconSheet.getSprite(110);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class ItemIconSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.ItemIconSheet,\n        rows: 11,\n        columns: 16,\n        spWidth: 12,\n        spHeight: 12\n    });\n    \n    public static get Heart () {\n        return this.iconSheet.getSprite(1);\n    }\n\n    public static get Skull () {\n        return this.iconSheet.getSprite(6);\n    }\n\n    public static get FlourBag () {\n        return this.iconSheet.getSprite(9);\n    }\n\n    public static get RedGem () {\n        return this.iconSheet.getSprite(25);\n    }\n\n    public static get BlueGem () {\n        return this.iconSheet.getSprite(26);\n    }\n\n    public static get YellowGem () {\n        return this.iconSheet.getSprite(27);\n    }\n\n    public static get PurpleGem () {\n        return this.iconSheet.getSprite(28);\n    }\n\n    public static get GreenGem () {\n        return this.iconSheet.getSprite(29);\n    }\n\n    public static get WhiteGem () {\n        return this.iconSheet.getSprite(30);\n    }\n\n    public static get BlackGem () {\n        return this.iconSheet.getSprite(31);\n    }\n\n    public static get GreenLeaf () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get RedLeaf () {\n        return this.iconSheet.getSprite(33);\n    }\n\n    public static get RedPot () {\n        return this.iconSheet.getSprite(34);\n    }\n\n    public static get BluePot () {\n        return this.iconSheet.getSprite(35);\n    }\n\n    public static get YellowPot () {\n        return this.iconSheet.getSprite(36);\n    }\n    \n    public static get GreenPot () {\n        return this.iconSheet.getSprite(37);\n    }\n    \n    public static get Posion () {\n        return this.iconSheet.getSprite(39);\n    }\n    \n    public static get Apple () {\n        return this.iconSheet.getSprite(40);\n    }\n    \n    public static get Banana () {\n        return this.iconSheet.getSprite(42);\n    }\n\n    public static get Bread () {\n        return this.iconSheet.getSprite(44);\n    }\n    \n    public static get Cheese () {\n        return this.iconSheet.getSprite(45);\n    }\n    \n    public static get Drumstick () {\n        return this.iconSheet.getSprite(46);\n    }\n    \n    public static get Cookie () {\n        return this.iconSheet.getSprite(47);\n    }\n    \n    public static get Burger () {\n        return this.iconSheet.getSprite(48);\n    }\n    \n    public static get Fries () {\n        return this.iconSheet.getSprite(49);\n    }\n    \n    public static get Hotdog () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get PizzaPlain () {\n        return this.iconSheet.getSprite(52);\n    }\n    \n    public static get PizzaToppings () {\n        return this.iconSheet.getSprite(53);\n    }\n    \n    public static get Meat () {\n        return this.iconSheet.getSprite(54);\n    }\n    \n    public static get EggRaw () {\n        return this.iconSheet.getSprite(55);\n    }\n    \n    public static get EggCooked () {\n        return this.iconSheet.getSprite(56);\n    }\n\n    public static get Taco () {\n        return this.iconSheet.getSprite(57);\n    }\n    \n    public static get Burrito () {\n        return this.iconSheet.getSprite(58);\n    }\n\n    public static get Ketchup () {\n        return this.iconSheet.getSprite(61);\n    }\n\n    public static get Mayo () {\n        return this.iconSheet.getSprite(62);\n    }\n\n    public static get Relish () {\n        return this.iconSheet.getSprite(63);\n    }\n\n    public static get PieYellow () {\n        return this.iconSheet.getSprite(71);\n    }\n\n    public static get PieRed () {\n        return this.iconSheet.getSprite(72);\n    }\n    \n    public static get PiePurple () {\n        return this.iconSheet.getSprite(73);\n    }\n    \n    public static get Cake () {\n        return this.iconSheet.getSprite(74);\n    }\n\n    public static get IceCreamCone () {\n        return this.iconSheet.getSprite(75);\n    }\n\n    public static get FreezePopPink () {\n        return this.iconSheet.getSprite(76);\n    }\n\n    public static get FreezePopBlue () {\n        return this.iconSheet.getSprite(77);\n    }\n\n    public static get CandyRed () {\n        return this.iconSheet.getSprite(78);\n    }\n\n    public static get CandyYellow () {\n        return this.iconSheet.getSprite(79);\n    }\n\n    public static get Trash () {\n        return this.iconSheet.getSprite(109);\n    }\n    \n\n}","import { Engine, Sprite, SpriteSheet, vec, Animation } from \"excalibur\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport abstract class AnimationHelper {\n    public static getScaledAnimation (engine:Engine, spritesheet:SpriteSheet, startIndex:number, endIndex:number, scaleFactor:number = 1, speed:number = 100): Animation {\n        let a:Animation = spritesheet.getAnimationBetween(engine, startIndex, endIndex, speed);\n        \n        let scaleX = LevelBuildingHelper.tileHeight / a.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / a.height * scaleFactor;\n        a.scale = vec(scaleX, scaleY);\n\n        return a;\n    }\n\n    public static getScaledSprite (sprite:Sprite, scaleFactor:number = 1): Sprite {\n        let scaleX = LevelBuildingHelper.tileHeight / sprite.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / sprite.height * scaleFactor;\n        sprite.scale = vec(scaleX, scaleY);\n\n        return sprite;\n    }\n}","import { Actor, CollisionType, Engine } from \"excalibur\";\n\nexport abstract class Item extends Actor {\n    public isHeld: boolean = false;\n    public canBeTrashed:boolean = false;\n\n    public onPreUpdate(engine:Engine, delta:number) {\n        if (this.isHeld) {\n            this.body.collider.type = CollisionType.PreventCollision;\n        } else {\n            this.body.collider.type = CollisionType.Fixed;\n        }\n    }\n}\n","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Meal extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Actor, Engine, SpriteSheet, Texture, vec, Vector } from \"excalibur\";\nimport { AnimationHelper } from \"../objects/animationHelper\";\nimport { LevelBuildingHelper } from \"../objects/levelBuildingHelper\";\n\nexport abstract class Humanoid extends Actor {\n    protected sprites: Texture;\n    protected spriteScale:number = 0.9;\n    protected facing:string;\n    protected baseSpeed: number = 200;\n\n    public onInitialize (engine:Engine) {\n        let sprites = new SpriteSheet({\n            image: this.sprites,\n            rows: 4,\n            columns: 3,\n            spWidth: this.sprites.width / 3,\n            spHeight: this.sprites.height / 4\n        });\n\n        this.setZIndex(1000);\n\n        this.addDrawing(\"standDown\", AnimationHelper.getScaledSprite(sprites.getSprite(1), this.spriteScale));\n        this.addDrawing(\"standLeft\", AnimationHelper.getScaledSprite(sprites.getSprite(4), this.spriteScale));\n        this.addDrawing(\"standRight\", AnimationHelper.getScaledSprite(sprites.getSprite(7), this.spriteScale));\n        this.addDrawing(\"standUp\", AnimationHelper.getScaledSprite(sprites.getSprite(10), this.spriteScale));\n\n        this.addDrawing(\"walkDown\", AnimationHelper.getScaledAnimation(engine, sprites, 0, 3, this.spriteScale));\n        this.addDrawing(\"walkLeft\", AnimationHelper.getScaledAnimation(engine, sprites, 3, 6, this.spriteScale));\n        this.addDrawing(\"walkRight\", AnimationHelper.getScaledAnimation(engine, sprites, 6, 9, this.spriteScale));\n        this.addDrawing(\"walkUp\", AnimationHelper.getScaledAnimation(engine, sprites, 9, 11, this.spriteScale));\n    }\n\n    public onPreUpdate (engine:Engine, delta:number) {\n        /////////////////////////////////\n        /////////// Animation ///////////\n        /////////////////////////////////\n        this.doFacing();\n        \n        if (this.vel.x === 0 && this.vel.y === 0) {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"standLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"standRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"standUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"standDown\");\n                    break;\n            }\n        } else {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"walkLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"walkRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"walkUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"walkDown\");\n                    break;\n            }\n        }\n    }\n\n    protected doFacing() {\n        if (this.vel.y > 0) {\n            this.facing = \"d\"\n        } else if (this.vel.x < 0) {\n            this.facing = \"l\";\n        } else if (this.vel.x > 0) {\n            this.facing = \"r\";\n        } else if (this.vel.y < 0) {\n            this.facing = \"u\";\n        }\n    }\n\n    protected getFacingTargetPos(tilePercent: number): Vector {\n        let xOffset = 0, yOffset = 0;\n\n        switch (this.facing) {\n            case \"l\":\n                xOffset -= LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"r\":\n                xOffset += LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"u\":\n                yOffset -= LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n            case \"d\":\n                yOffset += LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n        }\n\n        return vec(this.pos.x + xOffset, this.pos.y + yOffset);\n    }\n}","import { ActionContext, Engine, Timer, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { Meal } from \"../objects/meal\";\nimport { Humanoid } from \"./humanoid\";\n\nexport class Customer extends Humanoid {\n    private speed: number = 200;\n    private actionTimer:CustomerTimer;\n    private mealCheckPos:Vector;\n    private initialPosition:Vector;\n\n    public wantsMeal: string;\n    public frustratedTime: number;\n    public attackTime: number;\n    \n    public onInitialize(engine: Engine) {\n        this.sprites = Resources.Customer1;\n        super.onInitialize(engine);\n\n        this.initialPosition = this.pos.clone();\n    }\n\n    public walkToSeat(seatPos: Vector, finalFacing:string) {\n        let p = this.actions.moveTo(seatPos.x, seatPos.y, this.speed).asPromise();\n        \n        p.then( () =>{\n            console.log(\"customer arrived at seat\")\n            this.facing = finalFacing;\n            this.mealCheckPos = this.getFacingTargetPos(0.5);\n\n            this.actionTimer = new CustomerTimer ({\n                interval:50,\n                fcn:this.routine,\n                 repeats:true\n            });\n    \n            this.actionTimer.customer = this;\n            this.scene.add(this.actionTimer);   \n        }) ;\n    }\n\n    public leaveHappy() {\n        let p = this.actions.moveTo(this.initialPosition.x, this.initialPosition.y, this.speed).asPromise();\n        \n        p.then( () =>{\n            this.kill();\n        }) ;\n    }\n\n    private routine () {\n        let a = this as unknown as CustomerTimer;\n\n        if (a) {\n            let m = a.customer.scene.actors.filter (x => x instanceof Meal &&\n                                                         x.name === a.customer.wantsMeal &&\n                                                         !x.isHeld &&\n                                                         x.contains(a.customer.mealCheckPos.x, a.customer.mealCheckPos.y))\n            if (m.length > 0) {\n                // TODO eat animation or something\n                m[0].kill();\n                a.customer.leaveHappy();\n            }\n        }\n    }\n}\n\nexport class CustomerTimer extends Timer {\n    public customer:Customer;\n}","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Ingredient extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Actor, Color, Engine, Sprite, Timer } from \"excalibur\";\nimport { Ingredient } from \"./ingredient\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport class IngredientSpawner extends Actor {\n    private newItemTimer:IngredientTimer;\n\n    private _ingredientName:string;\n    private _ingredientSprite:Sprite;\n\n    public setupSpawner(ingredientName:string, ingredientSprite:Sprite) {\n        this._ingredientName = ingredientName;\n        this._ingredientSprite = ingredientSprite;\n        \n        this.spawnIngredient();\n        \n        this.body.collider.on(\"collisionend\", (e) => {\n            let otherActor = e.other.body.actor;\n\n            if (otherActor instanceof Ingredient && otherActor.name === this._ingredientName) {\n                if (! this.newItemTimer) {\n                    this.newItemTimer = new IngredientTimer({\n                        interval: 5000, // ms\n                        repeats: false,\n                        fcn: this.spawnIngredient\n                    });\n                    this.newItemTimer.spawner = this;\n\n                    this.scene.add(this.newItemTimer);\n                }\n\n                this.newItemTimer.reset();\n            }\n        });\n    }\n\n    public spawnIngredient () {\n        if (this instanceof IngredientTimer) {\n            LevelBuildingHelper.createIngredientAtPosition(this.spawner.scene, \n                                                           this.spawner._ingredientSprite.clone(), \n                                                           this.spawner._ingredientName, \n                                                           this.spawner.pos.x, \n                                                           this.spawner.pos.y)\n        } else {\n            LevelBuildingHelper.createIngredientAtPosition(this.scene, \n                                                           this._ingredientSprite.clone(), \n                                                           this._ingredientName, \n                                                           this.pos.x, \n                                                           this.pos.y)\n        }\n    }\n}\n\nexport class IngredientTimer extends Timer {\n    public spawner:IngredientSpawner;\n}","import { Sprite } from \"excalibur\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport class Recipe {\n    public ingredients:string[];\n    public resultName:string;\n    public resultSprite:Sprite;\n\n    constructor (ingredients:string[], resultName:string, resultSprite:Sprite) {\n        this.ingredients = ingredients;\n        this.resultSprite = resultSprite;\n        this.resultName = resultName;\n    }\n\n    public ingredientsEqual(ingredientCheck:string[]) {\n        if (\n          !Array.isArray(this.ingredients)\n          || !Array.isArray(ingredientCheck)\n          || this.ingredients.length !== ingredientCheck.length\n          ) {\n            return false;\n          }\n        \n        // .concat() to not mutate arguments\n        const arr1 = this.ingredients.concat().sort();\n        const arr2 = ingredientCheck.concat().sort();\n        \n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n             }\n        }\n        \n        return true;\n    }\n}\n\nconst Recipes = {\n    MonsterPie: new Recipe ([\"poison\", \"flour\", \"apple\" ],\"monsterPie\",ItemIconSprites.PieRed)\n}\n\nexport {Recipes}","import { Collider, CollisionStartEvent, CollisionType, Engine, Shape, Vector, Animation, isCollider, resetObsoleteCounter } from \"excalibur\";\nimport { Customer } from \"../characters/customer\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Ingredient } from \"./ingredient\";\nimport { Item } from \"./item\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\nimport { Recipe, Recipes } from \"./recipes\";\n\nexport class Pan extends Item {\n    private cookTimeMultiplier: number = 1000;\n    public ingredients: string[] = [];\n    public attackAnimation: Animation;\n    public isAttacking: boolean = false;\n\n    private cookTime: number = 0;\n    private isDone: boolean = false;\n    private isBurned: boolean = false;\n\n    public onInitialize(engine: Engine) {\n        super.onInitialize(engine);\n\n        this.body.collider.type = CollisionType.Passive;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight, LevelBuildingHelper.tileHeight);\n\n        this.body.collider.on(\"precollision\", (e: CollisionStartEvent<Collider>) => {\n            let otherActor = e.other.body.actor;\n            \n            if (this.cookTime === 0 && otherActor instanceof Ingredient) {\n                if (!otherActor.isHeld && !this.isHeld) {\n                    this.ingredients.push(otherActor.name);\n                    otherActor.kill();\n                }\n            }\n\n            if (otherActor instanceof Appliance &&\n                otherActor.applianceType === ApplianceType.Stove &&\n                this.ingredients.length > 0 &&\n                this.isHeld === false) {\n\n                this.cookTime++;\n\n                if (!this.isDone &&\n                    this.cookTime > this.ingredients.length * this.cookTimeMultiplier) {\n                    this.isDone = true;\n                }\n\n                if (this.isDone && !this.isBurned &&\n                    this.cookTime > this.ingredients.length * this.cookTimeMultiplier * 3) {\n                    this.isBurned = true;\n                }\n            }\n\n            if (this.isAttacking) {\n                /////////////////////////////////\n                ////////// Plate Meal ///////////\n                /////////////////////////////////\n                if ( this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.ServingPlate &&\n                        this.isDone ) {\n                    let product:Recipe;\n\n                    for (let r in Recipes) {\n                        if (Recipes[r].ingredientsEqual(this.ingredients)) {\n                            product = Recipes[r];\n                        }\n                    }\n\n                    if (product && !this.isBurned) {\n                        LevelBuildingHelper.createMeal(this.scene, product.resultSprite, product.resultName, otherActor.pos);\n                    } else {\n                        LevelBuildingHelper.createMeal(this.scene, ItemIconSprites.Trash, \"inedible mush\", otherActor.pos);\n                    }\n\n                    this.reset();\n                }\n            }\n            /////////////////////////////////\n            ///////// Hit Customer //////////\n            /////////////////////////////////\n            if (otherActor instanceof Customer && this.isAttacking) {\n                otherActor.kill();\n                this.reset();\n            }\n        });\n    }\n    \n    private reset() {\n        this.ingredients = [];\n        this.isBurned = false;\n        this.isDone = false;\n        this.cookTime = 0;\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        // Render\n        if (!this.isAttacking) {\n            if (this.isBurned) {\n                this.setDrawing(\"burned\");\n            } else if (this.isDone) {\n                this.setDrawing(\"done\");\n            } else if (this.cookTime > 0) {\n                this.setDrawing(\"cooking\");\n            } else if (this.ingredients.length > 0) {\n                this.setDrawing(\"filled\");\n            } else {\n                this.setDrawing(\"empty\");\n            }\n        } else {\n            if (this.attackAnimation.isDone()) {\n                this.isAttacking = false;\n            }\n        }\n    }\n\n    public attack(pos: Vector, facing: string) {\n        this.isAttacking = true;\n        this.pos = pos;\n        this.setDrawing(\"attack\");\n\n        switch (facing) {\n            case \"r\":\n                this.attackAnimation.flipHorizontal = true;\n                break;\n            default:\n                this.attackAnimation.flipHorizontal = false;\n        }\n    }\n}\n","import { Actor, Body, Collider, CollisionType, Color, Engine, Scene, ScreenElement, Shape, Sprite, SpriteSheet, Texture, vec, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { AnimationHelper } from \"./animationHelper\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Customer } from \"../characters/customer\";\nimport { Ingredient } from \"./ingredient\";\nimport { IngredientSpawner } from \"./ingredientSpawner\";\nimport { InsideTileSprites } from \"./insideTileSprites\";\nimport { Item } from \"./item\";\nimport { Meal } from \"./meal\";\nimport { Pan } from \"./pan\";\n\nexport abstract class LevelBuildingHelper {\n    static tileWidth = 50;\n    static tileHeight = 50;\n\n\n    public static createWallTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number): Actor {\n        return this.createTile(scene, display, xPos, yPos, true, 1);\n    }\n\n    public static createBackgroundTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number): Actor {\n        return this.createTile(scene, display, xPos, yPos, false, -1);\n    }\n\n    private static createTile(scene: Scene, \n                              display: Color|Sprite, \n                              xPos: number, yPos: number, \n                              hasCollision: boolean, \n                              z: number): Actor {\n        let a = new Actor({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (display instanceof Color) {\n            a.color = display;\n        } else {\n            let scaleX = this.tileWidth / display.width;\n            let scaleY = this.tileHeight / display.height;\n            display.scale = vec(scaleX, scaleY);\n            a.addDrawing(display);\n        }\n\n        scene.add(a);\n        a.setZIndex(z);\n\n        if (hasCollision) {\n            a.body.collider.type = CollisionType.Fixed;\n        }\n\n        return a;\n    }\n\n    public static createIngrediantSpawnerOnTile(scene: Scene, \n                                                xPos: number, \n                                                yPos: number, \n                                                ingredientName:string, \n                                                ingredientSprite:Sprite, \n                                                spawnerSprite?: Sprite): IngredientSpawner {\n        let a = new IngredientSpawner({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (spawnerSprite) {\n            let scaleX = this.tileWidth / spawnerSprite.width;\n            let scaleY = this.tileHeight / spawnerSprite.height;\n            spawnerSprite.scale = vec(scaleX, scaleY);\n            a.addDrawing(spawnerSprite);\n        }\n\n        a.setupSpawner(ingredientName, ingredientSprite);\n\n        scene.add(a);\n        return a;\n    }\n\n    public static createIngredientAtPosition (scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        const itemScale = 0.75;\n        \n        let a = new Ingredient({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos, yPos)\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(sprite);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createIngredientOnTile(scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        let xPosTile = xPos * this.tileWidth, yPosTile = yPos * this.tileHeight;\n        return this.createIngredientAtPosition (scene, sprite, name, xPosTile, yPosTile);\n    }\n\n    public static createMeal(scene: Scene, sprite:Sprite, name:string, position:Vector): Meal {\n        const itemScale = 0.8;\n        \n        let a = new Meal({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(sprite);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createApplianceOnTile(scene: Scene, type:ApplianceType, xPos: number, yPos: number): Appliance {\n        const itemScale = 0.75;\n\n        let sprite:Sprite;\n        let a = new Appliance({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        switch (type) {\n            case ApplianceType.Stove:\n                sprite = Resources.Stove.asSprite();\n                break;\n            case ApplianceType.ServingPlate:\n                sprite = InsideTileSprites.Tray;\n                break;\n            case ApplianceType.Trashcan:\n                sprite = Resources.Trashcan.asSprite();\n                a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n                a.body.collider.type = CollisionType.Fixed;\n                break;\n            default:\n                throw new Error(\"unsupported appliance type: \" + type);\n        }\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        AnimationHelper.getScaledSprite(sprite, itemScale);\n        \n        a.addDrawing(sprite);\n        a.applianceType = type;\n\n        return a;\n    }\n\n    public static createPanOnTile(scene: Scene, engine:Engine, xPos: number, yPos: number): Pan {\n        const itemScale = 0.75;\n        \n        let a = new Pan({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        scene.add(a);\n        a.setZIndex(35);\n\n        let panAttackSprites = new SpriteSheet({\n            image: Resources.PanAttack,\n            rows: 1,\n            columns: 3,\n            spWidth: 18,\n            spHeight: 18\n        });\n\n        let attackAnimation = AnimationHelper.getScaledAnimation(engine, panAttackSprites, 0,3, itemScale, 150);\n        attackAnimation.loop = false;\n        a.attackAnimation = attackAnimation;\n\n        let eSpr = AnimationHelper.getScaledSprite(Resources.PanEmpty.asSprite(), itemScale);\n        let fSpr = AnimationHelper.getScaledSprite(Resources.PanFilled.asSprite(), itemScale);\n        let dSpr = AnimationHelper.getScaledSprite(Resources.PanDone.asSprite(), itemScale);\n        let bSpr = AnimationHelper.getScaledSprite(Resources.PanBurned.asSprite(), itemScale);\n        \n        let cookingSheet = new SpriteSheet({\n            image: Resources.PanCooking ,\n            rows:1,\n            columns:3,\n            spWidth:18,\n            spHeight:9\n        });\n\n        let cAnim = AnimationHelper.getScaledAnimation(engine, cookingSheet, 0,3,itemScale,50);\n\n        a.addDrawing(\"empty\", eSpr);\n        a.addDrawing(\"filled\", fSpr);\n        a.addDrawing(\"attack\", attackAnimation);\n        a.addDrawing(\"cooking\", cAnim);\n        a.addDrawing(\"burned\", bSpr);\n        a.addDrawing(\"done\", dSpr);\n        \n        return a;\n    }\n\n    public static createCustomer(scene: Scene, position:Vector): Customer {\n        let a = new Customer({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        return a;\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class BalloonIconSprites {\n    private static balloonSheet = new SpriteSheet({\n        image: Resources.BalloonIconSheet,\n        rows: 11,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get MusicBalloon () {\n        return this.balloonSheet.getSprite(18);\n    }\n    \n    public static get MusicBalloonOff () {\n        return this.balloonSheet.getSprite(17);\n    }\n}","import { Scene, ScreenElement, Texture, vec, Sprite } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { BalloonIconSprites } from \"./balloonIconSprites\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport abstract class UIHelper {\n    private static iconWidth:number = 50;\n    private static iconHeight:number = 50;\n\n    private static createUIIcon(texture: Texture|Sprite, xPos: number, yPos: number) {\n        let se = new ScreenElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(this.scaleSprite(texture));\n\n        return se;\n    }\n\n    private static scaleSprite (texture: Texture|Sprite) : Sprite{\n        let s:Sprite;\n\n        if (typeof(texture) === typeof(Texture)) {\n            s = (texture as Texture).asSprite();\n        } else{\n            s = texture as Sprite;\n        }\n    \n        s.scale = vec(3,3);\n\n        return s;\n    }\n\n    private static createUIToggleButton (spriteOn:Sprite, spriteOff:Sprite, xPos:number, yPos:number): ScreenElement {\n        let se = new ScreenElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"on\", this.scaleSprite(spriteOn));\n        se.addDrawing(\"off\", this.scaleSprite(spriteOff));\n\n        return se;\n    }\n\n    public static addLevelUI (scene:LevelBase) {\n        let musicToggle = this.createUIToggleButton(BalloonIconSprites.MusicBalloon, BalloonIconSprites.MusicBalloonOff, 800, 50);\n        \n        musicToggle.on ('pointerup', (event) =>{\n            scene.toggleMusic();\n\n            if (scene.muteMusic) {\n                musicToggle.setDrawing(\"off\");\n            } else {\n                musicToggle.setDrawing(\"on\");\n            }\n        });\n\n        scene.add(musicToggle);\n\n        let hp1 = this.createUIIcon(ItemIconSprites.Heart, 900, 50);\n        let hp2 = this.createUIIcon(ItemIconSprites.Heart, 930, 50);\n        let hp3 = this.createUIIcon(ItemIconSprites.Heart, 960, 50);\n        \n        scene.add (hp1);\n        scene.add (hp2);\n        scene.add (hp3);\n\n    }\n}","import { Actor, CollisionType, Color, Engine, Input, vec, Shape, SpriteSheet, Animation, Vector, Resource } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { AnimationHelper } from '../objects/animationHelper';\nimport { Appliance, ApplianceType } from '../objects/appliance';\nimport { Ingredient } from '../objects/ingredient';\nimport { Item } from '../objects/item';\nimport { LevelBuildingHelper } from '../objects/levelBuildingHelper';\nimport { Meal } from '../objects/meal';\nimport { Pan } from '../objects/pan';\nimport { Humanoid } from './humanoid';\n\nexport class Player extends Humanoid {\n    constructor() {\n        super({\n            pos: vec(150, 150),\n            width: 25,\n            height: 25,\n            color: new Color(100, 255, 100)\n        });\n    }\n\n    protected spriteScale: number = 0.9;\n    private hitboxScale: number = 0.8;\n    private heldItem: Item;\n\n    onInitialize(engine: Engine) {\n        this.sprites = Resources.PlayerSprites;\n\n        this.body.collider.type = CollisionType.Active;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight * this.hitboxScale, LevelBuildingHelper.tileHeight * this.hitboxScale);\n        \n        super.onInitialize(engine);\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        super.onPreUpdate(engine, delta);\n\n        let attacking = false;\n\n        if (this.heldItem instanceof Pan) {\n            attacking = this.heldItem.isAttacking;\n        }\n\n        if (!attacking) {\n            this.doMovement(engine);\n            // force facing here, otherwise it can get janky when a solid object blocks\n            // movement (and therefor facing).\n            this.doFacing();\n        } else {\n            this.vel = vec(0, 0);\n        }\n\n        /////////////////////////////////\n        /////// Object Interaction //////\n        /////////////////////////////////\n        if (!attacking) {\n            if (this.heldItem) {\n                this.heldItem.pos = vec(this.pos.x, this.pos.y - 40);\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Space)) {\n                if (!this.heldItem) {\n                    this.tryPickupItem();\n                } else {\n                    this.trySetDownItem();\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.E)) {\n                if (this.heldItem instanceof Pan) {\n                    this.heldItem.attack(this.getFacingTargetPos(0.7), this.facing);\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Q)) {\n                this.examine();\n            }\n        }\n\n        /////////////////////////////////\n        ////////////// DEBUG ////////////\n        /////////////////////////////////\n        if (engine.input.keyboard.wasPressed(Input.Keys.Semicolon)) {\n            let val = prompt(\"goto level\", \"level_test\");\n            if (val) {\n                engine.goToScene(val);\n            }\n        }\n    }\n    \n\n    private doMovement(engine: Engine) {\n        let velX: number = 0, velY: number = 0;\n\n        if (engine.input.keyboard.isHeld(Input.Keys.W)) {\n            velY -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.S)) {\n            velY += 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.A)) {\n            velX -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.D)) {\n            velX += 1;\n        }\n\n        let vecMag = Math.sqrt(Math.abs(velX) + Math.abs(velY));\n\n        let adjustedVelY = velY / vecMag * this.baseSpeed;\n        let adjustedVelX = velX / vecMag * this.baseSpeed;\n\n        if (vecMag > 0) {\n            this.vel = vec(adjustedVelX, adjustedVelY);\n        } else {\n            this.vel = vec(0, 0);\n        }\n    }\n\n    private trySetDownItem() {\n        let tPos = this.getFacingTargetPos(1.0);\n\n        // check for trashcan first\n        let tc = this.scene.actors.filter(x => x instanceof Appliance &&\n                                               x.applianceType === ApplianceType.Trashcan &&\n                                               x.contains(tPos.x, tPos.y));\n\n        if (tc.length > 0 && this.heldItem.canBeTrashed) {\n            this.heldItem.kill();\n            this.heldItem = null;\n            return;\n        }\n\n        var targets = this.scene.actors.filter(x => x instanceof Item &&\n            !(x instanceof Pan) &&\n            !(x === this.heldItem) &&\n            x.contains(tPos.x, tPos.y));\n\n        if (targets.length === 0) {\n            this.heldItem.pos = tPos\n            this.heldItem.isHeld = false;\n            this.heldItem = null;\n        }\n    }\n\n    private tryPickupItem() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => x instanceof Item &&\n            x.contains(tPos.x, tPos.y));\n\n        if (targets.length > 0) {\n            this.heldItem = targets[0] as Item;\n            this.heldItem.isHeld = true;\n        }\n    }\n\n    private examine() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => (x instanceof Item || x instanceof Appliance) &&\n            x.contains(tPos.x, tPos.y));\n\n        let item = targets[0];\n\n        if (item) {\n            if (item instanceof Pan) {\n                alert(\"Pan with contents: \" + JSON.stringify(item.ingredients));\n            }\n\n            if (item instanceof Ingredient) {\n                alert(\"Ingredient: \" + item.name);\n            }\n\n            if (item instanceof Appliance) {\n                alert(\"Appliance: \" + item.applianceType);\n            }\n\n            if (item instanceof Meal) {\n                alert(\"Meal: \" + item.name);\n            }\n        }\n    }\n}\n","import { Actor, Engine, Scene, Sound, Sprite, TileMap } from \"excalibur\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { Player } from \"../../actors/characters/player\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class LevelBase extends Scene {\n    protected grid: Actor[][] = [];\n    protected player: Actor;\n    protected musicTrack: Sound;\n    protected baseTile?: Sprite;\n    protected customerSeats:Actor[];\n\n    public muteMusic: boolean = false;\n    \n    constructor(engine: Engine) {\n        super(engine);\n    }\n\n    public onInitialize(engine: Engine) {\n        UIHelper.addLevelUI(this);\n\n        this.player = new Player;\n        this.add(this.player);\n\n        this.camera.strategy.lockToActor(this.player);\n        this.musicTrack = Resources.LevelLoop1;\n        this.musicTrack.loop = true;\n        this.musicTrack.play();\n\n        // if (this.baseTile) {\n        //     for (let r = 0; r < 20; r++) {\n        //         for (let c = 0; c < 20; c++) {\n        //             // TODO background tiles as actors seems to nuke performance...\n        //             //LevelBuildingHelper.createBackgroundTile(this, this.baseTile, r, c);\n        //         }\n        //     }\n        // }\n\n        this.addBackgroundTiles();\n        this.addForegroundTiles();\n        this.addAppliances();\n        this.addPans(engine);\n        this.addItems();\n        this.customerSeats = this.addSeats();\n    }\n\n    protected abstract addBackgroundTiles();\n    protected abstract addForegroundTiles();\n    protected abstract addAppliances();\n    protected abstract addPans(engine:Engine);\n    protected abstract addItems();\n    protected abstract addSeats():Actor[];\n\n    public toggleMusic() {\n        this.muteMusic = !this.muteMusic;\n        if (this.muteMusic) {\n            this.musicTrack.stop();\n        } else {\n            this.musicTrack.play();\n        }\n    }\n}","import { Actor, Color, Engine, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideFloorWallSprites } from \"../../actors/objects/insideFloorWallSprites\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTest extends LevelBase {\n    public onInitialize(engine:Engine) { \n        this.baseTile = InsideFloorWallSprites.BlueTilePattern;\n        super.onInitialize(engine);\n\n        // TODO something less shithouse\n        alert(\"Controls:\\nWASD - Movement\\nSpace - Pick up/put down\\nE - Swing pan\\nQ - Examine\");\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 6, 12);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 8, 12);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 10, 12);\n    }\n\n    protected addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 6, 11);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 8, 11);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 10, 11);\n        \n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 7, 4);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Posion )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n    }\n\n    protected addSeats(): Actor[] {\n        let seats:Actor[] = [];\n        \n        seats.push(LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.RedStool, 10, 12));\n        seats.push(LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.RedStool, 8, 12));\n        seats.push(LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.RedStool, 5, 11.5));\n\n        let c = LevelBuildingHelper.createCustomer(this, vec(500,500) );\n        c.walkToSeat(seats[0].pos, \"u\");\n        c.wantsMeal=\"monsterPie\";\n\n        c = LevelBuildingHelper.createCustomer(this, vec(400,600) );\n        c.walkToSeat(seats[2].pos, \"r\");\n        c.wantsMeal=\"monsterPie\";\n\n        return seats;\n    }\n}\n","import { Actor, Color, Engine } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTestRay extends LevelBase {\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n    }\n\n    protected addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopGrey, 2, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 3, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopLeft, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 2, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopRight, 3, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomLeftLeg, 1, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 2, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomRightLeg, 3, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 1, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.RedStool, 2, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 3, 10);\n        \n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopEmpty, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 4, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopLid, 10, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 10, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Posion )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n    }\n\n    protected addSeats(): Actor[] {\n        let seats:Actor[] = [];\n        \n        seats.push(LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.RedStool, 10, 10));\n\n        return seats;\n    }\n}","import { Actor, Engine } from \"excalibur\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level1 extends LevelBase {\n    protected addSeats(): Actor[] {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addBackgroundTiles() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addForegroundTiles() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addAppliances() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addPans(engine: Engine) {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addItems() {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n}","import { Engine, Loader, DisplayMode, Color } from 'excalibur';\nimport { Player } from './actors/characters/player';\nimport { Resources } from './resources';\nimport { LevelTest } from './scenes/levels/levelTest';\nimport { LevelTestRay } from './scenes/levels/levelTestRay';\nimport { Level1 } from './scenes/levels/level_1';\n\n/**\n * Managed game class\n */\nclass Game extends Engine {\n\n    constructor() {\n        super({ displayMode: DisplayMode.FullScreen });\n    }\n\n    public start() {\n\n        game.add('level_test', new LevelTest(this));\n        game.add('level_1', new Level1(this));\n        game.add('levelTestRay', new LevelTestRay(this));\n        // Automatically load all default resources\n        const loader = new Loader(Object.values(Resources));\n\n        // TODO add custom loader screen \n        loader.suppressPlayButton = false;\n\n        return super.start(loader);\n    }\n}\n\nconst game = new Game();\ngame.backgroundColor = new Color(245, 242, 254);\ngame.start().then(() => {\n    game.goToScene('level_test');\n});\n\ndocument.oncontextmenu = () => {\n    return false;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [325], () => (__webpack_require__(235)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}