{"version":3,"sources":["webpack://excalibur-webpack/webpack/runtime/chunk loaded","webpack://excalibur-webpack/./src/actors/objects/appliance.ts","webpack://excalibur-webpack/./src/resources.ts","webpack://excalibur-webpack/./src/actors/objects/insideFloorWallSprites.ts","webpack://excalibur-webpack/./src/actors/objects/insideTileSprites.ts","webpack://excalibur-webpack/./src/actors/objects/itemIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/item.ts","webpack://excalibur-webpack/./src/actors/objects/ingredient.ts","webpack://excalibur-webpack/./src/actors/objects/ingredientSpawner.ts","webpack://excalibur-webpack/./src/actors/objects/meal.ts","webpack://excalibur-webpack/./src/actors/objects/recipes.ts","webpack://excalibur-webpack/./src/actors/objects/pan.ts","webpack://excalibur-webpack/./src/actors/objects/levelBuildingHelper.ts","webpack://excalibur-webpack/./src/actors/objects/balloonIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/uiHelper.ts","webpack://excalibur-webpack/./src/actors/objects/animationHelper.ts","webpack://excalibur-webpack/./src/actors/player/player.ts","webpack://excalibur-webpack/./src/scenes/levels/levelBase.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTest.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/global","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/publicPath","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"names":["deferred","ApplianceType","levelLoop1","Resources","Bag","Texture","bag","ItemIconSheet","PlayerSprites","LevelLoop1","Sound","BalloonIconSheet","PanAttack","PanEmpty","PanFilled","PanCooking","PanDone","PanBurned","InsideTilesB","InsideFloorsWalls","Stove","stove","Actor","this","sheet","getSprite","SpriteSheet","image","rows","columns","spWidth","spHeight","iconSheet","isHeld","Item","setupSpawner","ingredientName","ingredientSprite","_ingredientName","_ingredientSprite","spawnIngredient","body","collider","on","e","otherActor","other","actor","Ingredient","name","newItemTimer","IngredientTimer","interval","repeats","fcn","spawner","scene","add","reset","LevelBuildingHelper","createIngredientAtPosition","clone","pos","x","y","Timer","Recipes","MonsterPie","ingredients","resultName","resultSprite","ingredientsEqual","ingredientCheck","Array","isArray","length","arr1","concat","sort","arr2","i","ItemIconSprites","PieRed","cookTimeMultiplier","isAttacking","cookTime","isDone","isBurned","onInitialize","engine","type","CollisionType","shape","Shape","tileHeight","push","kill","Appliance","applianceType","ServingPlate","product","r","createMeal","Trash","onPreUpdate","delta","attackAnimation","setDrawing","attack","facing","flipHorizontal","createWallTile","display","xPos","yPos","createTile","createBackgroundTile","hasCollision","z","a","width","tileWidth","height","vec","Color","color","scaleX","scaleY","scale","addDrawing","setZIndex","createIngrediantSpawnerOnTile","spawnerSprite","IngredientSpawner","sprite","createIngredientOnTile","xPosTile","yPosTile","position","Meal","createApplianceOnTile","asSprite","InsideTileSprites","Tray","Error","createPanOnTile","itemScale","Pan","panAttackSprites","getAnimationForAll","loop","eSpr","fSpr","dSpr","bSpr","cAnim","balloonSheet","createUIIcon","texture","se","ScreenElement","iconWidth","iconHeight","scaleSprite","s","createUIToggleButton","spriteOn","spriteOff","addLevelUI","musicToggle","BalloonIconSprites","MusicBalloon","MusicBalloonOff","event","toggleMusic","muteMusic","hp1","Heart","hp2","hp3","getScaledAnimation","spritesheet","startIndex","endIndex","scaleFactor","getAnimationBetween","getScaledSprite","baseSpeed","spriteScale","sprites","animationHelper","attacking","heldItem","vel","doMovement","doFacing","input","keyboard","wasPressed","Input","trySetDownItem","tryPickupItem","getFacingTargetPos","examine","val","prompt","goToScene","velX","velY","vecMag","Math","sqrt","abs","adjustedVelY","adjustedVelX","tilePercent","xOffset","yOffset","tPos","targets","actors","filter","contains","item","alert","JSON","stringify","grid","UIHelper","player","Player","camera","strategy","lockToActor","musicTrack","play","addBackgroundTiles","addForegroundTiles","addAppliances","addPans","addItems","stop","Scene","baseTile","InsideFloorWallSprites","BlueTilePattern","CounterFaceLeft","CounterFaceCenter","CounterFaceRight","wallColor","CounterVerticalFull","CounterCornerBottomLeft","CounterBottomCornerRight","CounterBottomCentral","Apple","FlourBag","Mayo","Posion","Skull","LevelBase","game","displayMode","DisplayMode","start","LevelTest","Level1","loader","Loader","Object","values","suppressPlayButton","Engine","backgroundColor","then","document","oncontextmenu","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","g","globalThis","Function","window","o","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","replace","p","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"mappings":"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","file":"main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Actor } from \"excalibur\";\n\nexport class Appliance extends Actor {\n    public applianceType:ApplianceType;\n}\n\nexport enum ApplianceType {\n    Stove,\n    ServingPlate\n}","import { Sound, SpriteSheet, Texture } from 'excalibur';\nimport bag from './images/bag.png';\nimport itemIcons from './images/item_icons.png';\nimport balloonIcons from './images/balloon_1.png';\nimport playerSprites from './images/player_sprites.png';\nimport panAttack from './images/pan_attack.png';\nimport panEmpty from './images/pan_empty.png';\nimport panFilled from './images/pan_filled.png';\nimport panCooking from './images/pan_cooking.png';\nimport panDone from './images/pan_done.png';\nimport panBurned from './images/pan_burned.png';\nimport insideTilesB from './images/tileB_inside4.png';\nimport insideFloorsWalls from './images/tileA5_inside.png';\nimport stove from './images/stove.png';\n\nconst levelLoop1 = require('./audio/level_loop1.wav');\n/**\n * Default global resource dictionary. This gets loaded immediately\n * and holds available assets for the game.\n */\n\nconst Resources = {\n    Bag: new Texture(bag),\n    ItemIconSheet: new Texture(itemIcons),\n    PlayerSprites: new Texture(playerSprites),\n    LevelLoop1: new Sound(levelLoop1),\n    BalloonIconSheet: new Texture(balloonIcons),\n    PanAttack: new Texture(panAttack),\n    PanEmpty: new Texture(panEmpty),\n    PanFilled: new Texture(panFilled),\n    PanCooking: new Texture(panCooking),\n    PanDone: new Texture(panDone),\n    PanBurned: new Texture(panBurned),\n    InsideTilesB: new Texture(insideTilesB),\n    InsideFloorsWalls: new Texture(insideFloorsWalls),\n    Stove: new Texture(stove)\n}\n\nexport { Resources }\n\n","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideFloorWallSprites {\n    private static sheet = new SpriteSheet({\n        image: Resources.InsideFloorsWalls,\n        rows: 16,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get BlueTilePattern () {\n        return this.sheet.getSprite(21);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideTileSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.InsideTilesB,\n        rows: 16,\n        columns: 16,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get CounterVerticalFull () {\n        return this.iconSheet.getSprite(16);\n    }\n\n    public static get CounterCornerBottomLeft () {\n        return this.iconSheet.getSprite(17);\n    }\n\n    public static get CounterBottomCentral () {\n        return this.iconSheet.getSprite(18);\n    }\n    \n    public static get CounterBottomCornerRight () {\n        return this.iconSheet.getSprite(19);\n    }\n \n    public static get CounterFaceLeft () {\n        return this.iconSheet.getSprite(49);\n    }\n\n    public static get CounterFaceCenter () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get CounterFaceRight () {\n        return this.iconSheet.getSprite(51);\n    }\n     \n    public static get RedStool () {\n        return this.iconSheet.getSprite(152);\n    }\n\n    public static get Tray () {\n        return this.iconSheet.getSprite(110);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class ItemIconSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.ItemIconSheet,\n        rows: 11,\n        columns: 16,\n        spWidth: 12,\n        spHeight: 12\n    });\n    \n    public static get Heart () {\n        return this.iconSheet.getSprite(1);\n    }\n\n    public static get Skull () {\n        return this.iconSheet.getSprite(6);\n    }\n\n    public static get FlourBag () {\n        return this.iconSheet.getSprite(9);\n    }\n\n    public static get RedGem () {\n        return this.iconSheet.getSprite(25);\n    }\n\n    public static get BlueGem () {\n        return this.iconSheet.getSprite(26);\n    }\n\n    public static get YellowGem () {\n        return this.iconSheet.getSprite(27);\n    }\n\n    public static get PurpleGem () {\n        return this.iconSheet.getSprite(28);\n    }\n\n    public static get GreenGem () {\n        return this.iconSheet.getSprite(29);\n    }\n\n    public static get WhiteGem () {\n        return this.iconSheet.getSprite(30);\n    }\n\n    public static get BlackGem () {\n        return this.iconSheet.getSprite(31);\n    }\n\n    public static get GreenLeaf () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get RedLeaf () {\n        return this.iconSheet.getSprite(33);\n    }\n\n    public static get RedPot () {\n        return this.iconSheet.getSprite(34);\n    }\n\n    public static get BluePot () {\n        return this.iconSheet.getSprite(35);\n    }\n\n    public static get YellowPot () {\n        return this.iconSheet.getSprite(36);\n    }\n    \n    public static get GreenPot () {\n        return this.iconSheet.getSprite(37);\n    }\n    \n    public static get Posion () {\n        return this.iconSheet.getSprite(39);\n    }\n    \n    public static get Apple () {\n        return this.iconSheet.getSprite(40);\n    }\n    \n    public static get Banana () {\n        return this.iconSheet.getSprite(42);\n    }\n\n    public static get Bread () {\n        return this.iconSheet.getSprite(44);\n    }\n    \n    public static get Cheese () {\n        return this.iconSheet.getSprite(45);\n    }\n    \n    public static get Drumstick () {\n        return this.iconSheet.getSprite(46);\n    }\n    \n    public static get Cookie () {\n        return this.iconSheet.getSprite(47);\n    }\n    \n    public static get Burger () {\n        return this.iconSheet.getSprite(48);\n    }\n    \n    public static get Fries () {\n        return this.iconSheet.getSprite(49);\n    }\n    \n    public static get Hotdog () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get PizzaPlain () {\n        return this.iconSheet.getSprite(52);\n    }\n    \n    public static get PizzaToppings () {\n        return this.iconSheet.getSprite(53);\n    }\n    \n    public static get Meat () {\n        return this.iconSheet.getSprite(54);\n    }\n    \n    public static get EggRaw () {\n        return this.iconSheet.getSprite(55);\n    }\n    \n    public static get EggCooked () {\n        return this.iconSheet.getSprite(56);\n    }\n\n    public static get Taco () {\n        return this.iconSheet.getSprite(57);\n    }\n    \n    public static get Burrito () {\n        return this.iconSheet.getSprite(58);\n    }\n\n    public static get Ketchup () {\n        return this.iconSheet.getSprite(61);\n    }\n\n    public static get Mayo () {\n        return this.iconSheet.getSprite(62);\n    }\n\n    public static get Relish () {\n        return this.iconSheet.getSprite(63);\n    }\n\n    public static get PieYellow () {\n        return this.iconSheet.getSprite(71);\n    }\n\n    public static get PieRed () {\n        return this.iconSheet.getSprite(72);\n    }\n    \n    public static get PiePurple () {\n        return this.iconSheet.getSprite(73);\n    }\n    \n    public static get Cake () {\n        return this.iconSheet.getSprite(74);\n    }\n\n    public static get IceCreamCone () {\n        return this.iconSheet.getSprite(75);\n    }\n\n    public static get FreezePopPink () {\n        return this.iconSheet.getSprite(76);\n    }\n\n    public static get FreezePopBlue () {\n        return this.iconSheet.getSprite(77);\n    }\n\n    public static get CandyRed () {\n        return this.iconSheet.getSprite(78);\n    }\n\n    public static get CandyYellow () {\n        return this.iconSheet.getSprite(79);\n    }\n\n    public static get Trash () {\n        return this.iconSheet.getSprite(109);\n    }\n    \n\n}","import { Actor, Engine } from \"excalibur\";\n\nexport abstract class Item extends Actor {\n    public isHeld: boolean = false;\n}\n","import { Item } from \"./item\";\n\nexport class Ingredient extends Item {\n    public name:string;\n}","import { Actor, Color, Engine, Sprite, Timer } from \"excalibur\";\nimport { Ingredient } from \"./ingredient\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport class IngredientSpawner extends Actor {\n    private newItemTimer:IngredientTimer;\n\n    private _ingredientName:string;\n    private _ingredientSprite:Sprite;\n\n    public setupSpawner(ingredientName:string, ingredientSprite:Sprite) {\n        this._ingredientName = ingredientName;\n        this._ingredientSprite = ingredientSprite;\n        \n        this.spawnIngredient();\n        \n        this.body.collider.on(\"collisionend\", (e) => {\n            let otherActor = e.other.body.actor;\n\n            if (otherActor instanceof Ingredient && otherActor.name === this._ingredientName) {\n                if (! this.newItemTimer) {\n                    this.newItemTimer = new IngredientTimer({\n                        interval: 5000, // ms\n                        repeats: false,\n                        fcn: this.spawnIngredient\n                    });\n                    this.newItemTimer.spawner = this;\n\n                    this.scene.add(this.newItemTimer);\n                }\n\n                this.newItemTimer.reset();\n            }\n        });\n    }\n\n    public spawnIngredient () {\n        if (this instanceof IngredientTimer) {\n            LevelBuildingHelper.createIngredientAtPosition(this.spawner.scene, \n                                                           this.spawner._ingredientSprite.clone(), \n                                                           this.spawner._ingredientName, \n                                                           this.spawner.pos.x, \n                                                           this.spawner.pos.y)\n        } else {\n            LevelBuildingHelper.createIngredientAtPosition(this.scene, \n                                                           this._ingredientSprite.clone(), \n                                                           this._ingredientName, \n                                                           this.pos.x, \n                                                           this.pos.y)\n        }\n    }\n}\n\nexport class IngredientTimer extends Timer {\n    public spawner:IngredientSpawner;\n}","import { Item } from \"./item\";\n\nexport class Meal extends Item {\n    public name:string;\n}","import { Sprite } from \"excalibur\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport class Recipe {\n    public ingredients:string[];\n    public resultName:string;\n    public resultSprite:Sprite;\n\n    constructor (ingredients:string[], resultName:string, resultSprite:Sprite) {\n        this.ingredients = ingredients;\n        this.resultSprite = resultSprite;\n        this.resultName = resultName;\n    }\n\n    public ingredientsEqual(ingredientCheck:string[]) {\n        if (\n          !Array.isArray(this.ingredients)\n          || !Array.isArray(ingredientCheck)\n          || this.ingredients.length !== ingredientCheck.length\n          ) {\n            return false;\n          }\n        \n        // .concat() to not mutate arguments\n        const arr1 = this.ingredients.concat().sort();\n        const arr2 = ingredientCheck.concat().sort();\n        \n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n             }\n        }\n        \n        return true;\n    }\n}\n\nconst Recipes = {\n    MonsterPie: new Recipe ([\"poison\", \"flour\", \"apple\" ],\"monsterPie\",ItemIconSprites.PieRed)\n}\n\nexport {Recipes}","import { Collider, CollisionStartEvent, CollisionType, Engine, Shape, Vector, Animation, isCollider } from \"excalibur\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Ingredient } from \"./ingredient\";\nimport { Item } from \"./item\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\nimport { Recipe, Recipes } from \"./recipes\";\n\nexport class Pan extends Item {\n    private cookTimeMultiplier: number = 1000;\n    public ingredients: string[] = [];\n    public attackAnimation: Animation;\n    public isAttacking: boolean = false;\n\n    private cookTime: number = 0;\n    private isDone: boolean = false;\n    private isBurned: boolean = false;\n\n    public onInitialize(engine: Engine) {\n        super.onInitialize(engine);\n\n        this.body.collider.type = CollisionType.Passive;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight, LevelBuildingHelper.tileHeight);\n\n        this.body.collider.on(\"precollision\", (e: CollisionStartEvent<Collider>) => {\n            let otherActor = e.other.body.actor;\n            \n            if (this.cookTime === 0 && otherActor instanceof Ingredient) {\n                if (!otherActor.isHeld && !this.isHeld) {\n                    this.ingredients.push(otherActor.name); // slice because byref strings are sadness\n                    otherActor.kill();\n                }\n            }\n\n            if (otherActor instanceof Appliance &&\n                otherActor.applianceType === ApplianceType.Stove &&\n                this.ingredients.length > 0 &&\n                this.isHeld === false) {\n\n                this.cookTime++;\n\n                if (!this.isDone &&\n                    this.cookTime > this.ingredients.length * this.cookTimeMultiplier) {\n                    this.isDone = true;\n                }\n\n                if (this.isDone && !this.isBurned &&\n                    this.cookTime > this.ingredients.length * this.cookTimeMultiplier * 3) {\n                    this.isBurned = true;\n                }\n            }\n\n            if (this.isAttacking) {\n                if ( this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.ServingPlate &&\n                        this.isDone ) {\n                    let product:Recipe;\n\n                    for (let r in Recipes) {\n                        if (Recipes[r].ingredientsEqual(this.ingredients)) {\n                            product = Recipes[r];\n                        }\n                    }\n\n                    if (product && !this.isBurned) {\n                        LevelBuildingHelper.createMeal(this.scene, product.resultSprite, product.resultName, otherActor.pos);\n                    } else {\n                        LevelBuildingHelper.createMeal(this.scene, ItemIconSprites.Trash, \"inedible mush\", otherActor.pos);\n                    }\n\n                    this.ingredients = [];\n                    this.isBurned = false;\n                    this.isDone = false;\n                    this.cookTime = 0;\n                }\n            }\n        });\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        // Render\n        if (!this.isAttacking) {\n            if (this.isBurned) {\n                this.setDrawing(\"burned\");\n            } else if (this.isDone) {\n                this.setDrawing(\"done\");\n            } else if (this.cookTime > 0) {\n                this.setDrawing(\"cooking\");\n            } else if (this.ingredients.length > 0) {\n                this.setDrawing(\"filled\");\n            } else {\n                this.setDrawing(\"empty\");\n            }\n        } else {\n            if (this.attackAnimation.isDone()) {\n                this.isAttacking = false;\n            }\n        }\n    }\n\n    public attack(pos: Vector, facing: string) {\n        this.isAttacking = true;\n        this.pos = pos;\n        this.setDrawing(\"attack\");\n\n        switch (facing) {\n            case \"r\":\n                this.attackAnimation.flipHorizontal = true;\n                break;\n            default:\n                this.attackAnimation.flipHorizontal = false;\n        }\n    }\n}\n","import { Actor, Body, Collider, CollisionType, Color, Engine, Scene, ScreenElement, Sprite, SpriteSheet, Texture, vec, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Ingredient } from \"./ingredient\";\nimport { IngredientSpawner } from \"./ingredientSpawner\";\nimport { InsideTileSprites } from \"./insideTileSprites\";\nimport { Item } from \"./item\";\nimport { Meal } from \"./meal\";\nimport { Pan } from \"./pan\";\n\nexport abstract class LevelBuildingHelper {\n    static tileWidth = 50;\n    static tileHeight = 50;\n\n\n    public static createWallTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number) {\n        this.createTile(scene, display, xPos, yPos, true, 1);\n    }\n\n    public static createBackgroundTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number) {\n        this.createTile(scene, display, xPos, yPos, false, -1);\n    }\n\n    private static createTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number, hasCollision: boolean, z: number) {\n        let a = new Actor({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (display instanceof Color) {\n            a.color = display;\n        } else {\n            let scaleX = this.tileWidth / display.width;\n            let scaleY = this.tileHeight / display.height;\n            display.scale = vec(scaleX, scaleY);\n            a.addDrawing(display);\n        }\n\n        scene.add(a);\n        a.setZIndex(z);\n\n        if (hasCollision) {\n            a.body.collider.type = CollisionType.Fixed;\n        }\n    }\n\n    public static createIngrediantSpawnerOnTile(scene: Scene, \n                                                xPos: number, \n                                                yPos: number, \n                                                ingredientName:string, \n                                                ingredientSprite:Sprite, \n                                                spawnerSprite?: Sprite): IngredientSpawner {\n        let a = new IngredientSpawner({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (spawnerSprite) {\n            let scaleX = this.tileWidth / spawnerSprite.width;\n            let scaleY = this.tileHeight / spawnerSprite.height;\n            spawnerSprite.scale = vec(scaleX, scaleY);\n            a.addDrawing(spawnerSprite);\n        }\n\n        a.setupSpawner(ingredientName, ingredientSprite);\n\n        scene.add(a);\n        return a;\n    }\n\n    public static createIngredientAtPosition (scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        const itemScale = 0.75;\n        \n        let a = new Ingredient({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos, yPos)\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let scaleX = this.tileWidth / sprite.width * itemScale;\n        let scaleY = this.tileHeight / sprite.height * itemScale;\n        sprite.scale = vec(scaleX, scaleY);\n\n        a.addDrawing(sprite);\n        a.name = name;\n\n        return a;\n    }\n\n    public static createIngredientOnTile(scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        let xPosTile = xPos * this.tileWidth, yPosTile = yPos * this.tileHeight;\n        return this.createIngredientAtPosition (scene, sprite, name, xPosTile, yPosTile);\n    }\n\n    public static createMeal(scene: Scene, sprite:Sprite, name:string, position:Vector): Meal {\n        const itemScale = 0.75;\n        \n        let a = new Meal({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let scaleX = this.tileWidth / sprite.width * itemScale;\n        let scaleY = this.tileHeight / sprite.height * itemScale;\n        sprite.scale = vec(scaleX, scaleY);\n\n        a.addDrawing(sprite);\n        a.name = name;\n\n        return a;\n    }\n\n    public static createApplianceOnTile(scene: Scene, type:ApplianceType, xPos: number, yPos: number): Appliance {\n        const itemScale = 0.75;\n\n        let sprite:Sprite;\n\n        switch (type) {\n            case ApplianceType.Stove:\n                sprite = Resources.Stove.asSprite();\n                break;\n            case ApplianceType.ServingPlate:\n                sprite = InsideTileSprites.Tray;\n                break;\n            default:\n                throw new Error(\"unsupported appliance type: \" + type);\n        }\n\n        let a = new Appliance({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let scaleX = this.tileWidth / sprite.width * itemScale;\n        let scaleY = this.tileHeight / sprite.height * itemScale;\n        sprite.scale = vec(scaleX, scaleY);\n\n        a.addDrawing(sprite);\n        a.applianceType = type;\n\n        return a;\n    }\n\n    public static createPanOnTile(scene: Scene, engine:Engine, xPos: number, yPos: number): Pan {\n        const itemScale = 0.75;\n        \n        let a = new Pan({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        scene.add(a);\n        a.setZIndex(35);\n\n        let panAttackSprites = new SpriteSheet({\n            image: Resources.PanAttack,\n            rows: 1,\n            columns: 3,\n            spWidth: 18,\n            spHeight: 18\n        });\n\n        let scaleX = this.tileWidth / 18 * itemScale;\n        let scaleY = this.tileHeight / 18 * itemScale;\n        let attackAnimation = panAttackSprites.getAnimationForAll(engine, 150);\n        attackAnimation.scale = vec(scaleX, scaleY);\n        attackAnimation.loop = false;\n        a.attackAnimation = attackAnimation;\n\n        scaleX = this.tileWidth / Resources.PanEmpty.width * itemScale;\n        scaleY = this.tileHeight / Resources.PanEmpty.height * itemScale;\n\n        let eSpr = Resources.PanEmpty.asSprite();\n        let fSpr = Resources.PanFilled.asSprite();\n        let dSpr = Resources.PanDone.asSprite();\n        let bSpr = Resources.PanBurned.asSprite();\n        \n        let cookingSheet = new SpriteSheet({\n            image: Resources.PanCooking ,\n            rows:1,\n            columns:3,\n            spWidth:18,\n            spHeight:9\n        });\n\n        let cAnim = cookingSheet.getAnimationForAll(engine, 50);\n\n        let scale = vec(scaleX, scaleY);\n        eSpr.scale = scale;\n        fSpr.scale = scale;\n        cAnim.scale = scale;\n        dSpr.scale = scale;\n        bSpr.scale = scale;\n\n        a.addDrawing(\"empty\", eSpr);\n        a.addDrawing(\"filled\", fSpr);\n        a.addDrawing(\"attack\", attackAnimation);\n        a.addDrawing(\"cooking\", cAnim);\n        a.addDrawing(\"burned\", bSpr);\n        a.addDrawing(\"done\", dSpr);\n        \n        \n        return a;\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class BalloonIconSprites {\n    private static balloonSheet = new SpriteSheet({\n        image: Resources.BalloonIconSheet,\n        rows: 11,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get MusicBalloon () {\n        return this.balloonSheet.getSprite(18);\n    }\n    \n    public static get MusicBalloonOff () {\n        return this.balloonSheet.getSprite(17);\n    }\n}","import { Scene, ScreenElement, Texture, vec, Sprite } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { BalloonIconSprites } from \"./balloonIconSprites\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport abstract class UIHelper {\n    private static iconWidth:number = 50;\n    private static iconHeight:number = 50;\n\n    private static createUIIcon(texture: Texture|Sprite, xPos: number, yPos: number) {\n        let se = new ScreenElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(this.scaleSprite(texture));\n\n        return se;\n    }\n\n    private static scaleSprite (texture: Texture|Sprite) : Sprite{\n        let s:Sprite;\n\n        if (typeof(texture) === typeof(Texture)) {\n            s = (texture as Texture).asSprite();\n        } else{\n            s = texture as Sprite;\n        }\n    \n        s.scale = vec(3,3);\n\n        return s;\n    }\n\n    private static createUIToggleButton (spriteOn:Sprite, spriteOff:Sprite, xPos:number, yPos:number): ScreenElement {\n        let se = new ScreenElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"on\", this.scaleSprite(spriteOn));\n        se.addDrawing(\"off\", this.scaleSprite(spriteOff));\n\n        return se;\n    }\n\n    public static addLevelUI (scene:LevelBase) {\n        let musicToggle = this.createUIToggleButton(BalloonIconSprites.MusicBalloon, BalloonIconSprites.MusicBalloonOff, 800, 50);\n        \n        musicToggle.on ('pointerup', (event) =>{\n            scene.toggleMusic();\n\n            if (scene.muteMusic) {\n                musicToggle.setDrawing(\"off\");\n            } else {\n                musicToggle.setDrawing(\"on\");\n            }\n        });\n\n        scene.add(musicToggle);\n\n        let hp1 = this.createUIIcon(ItemIconSprites.Heart, 900, 50);\n        let hp2 = this.createUIIcon(ItemIconSprites.Heart, 930, 50);\n        let hp3 = this.createUIIcon(ItemIconSprites.Heart, 960, 50);\n        \n        scene.add (hp1);\n        scene.add (hp2);\n        scene.add (hp3);\n\n    }\n}","import { Engine, Sprite, SpriteSheet, vec, Animation } from \"excalibur\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport abstract class animationHelper {\n    public static getScaledAnimation (engine:Engine, spritesheet:SpriteSheet, startIndex:number, endIndex:number, scaleFactor:number = 1): Animation {\n        let a:Animation = spritesheet.getAnimationBetween(engine, startIndex, endIndex, 100);\n        \n        let scaleX = LevelBuildingHelper.tileHeight / a.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / a.height * scaleFactor;\n        a.scale = vec(scaleX, scaleY);\n\n        return a;\n    }\n\n    public static getScaledSprite (sprite:Sprite, scaleFactor:number = 1): Sprite {\n        let scaleX = LevelBuildingHelper.tileHeight / sprite.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / sprite.height * scaleFactor;\n        sprite.scale = vec(scaleX, scaleY);\n\n        return sprite;\n    }\n}","import { Actor, CollisionType, Color, Engine, Input, vec, Shape, SpriteSheet, Animation, Vector } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { animationHelper } from '../objects/animationHelper';\nimport { Appliance } from '../objects/appliance';\nimport { Ingredient } from '../objects/ingredient';\nimport { Item } from '../objects/item';\nimport { LevelBuildingHelper } from '../objects/levelBuildingHelper';\nimport { Meal } from '../objects/meal';\nimport { Pan } from '../objects/pan';\n\nexport class Player extends Actor {\n    constructor() {\n        super({\n            pos: vec(150, 150),\n            width: 25,\n            height: 25,\n            color: new Color(100, 255, 100)\n        });\n    }\n\n    private sprites: SpriteSheet;\n    private baseSpeed: number = 200;\n    private facing: string;\n    private spriteScale: number = 0.9;\n    private heldItem: Item;\n\n    onInitialize(engine: Engine) {\n        this.body.collider.type = CollisionType.Active;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight * this.spriteScale, LevelBuildingHelper.tileHeight * this.spriteScale);\n        this.setZIndex(1000);\n\n        let plSpriteWidth = 16;\n        let plSpriteHeight = 21;\n\n        this.sprites = new SpriteSheet({\n            image: Resources.PlayerSprites,\n            rows: 4,\n            columns: 3,\n            spWidth: plSpriteWidth,\n            spHeight: plSpriteHeight\n        });\n\n        this.addDrawing(\"standDown\", animationHelper.getScaledSprite(this.sprites.getSprite(1), this.spriteScale));\n        this.addDrawing(\"standLeft\", animationHelper.getScaledSprite(this.sprites.getSprite(4), this.spriteScale));\n        this.addDrawing(\"standRight\", animationHelper.getScaledSprite(this.sprites.getSprite(7), this.spriteScale));\n        this.addDrawing(\"standUp\", animationHelper.getScaledSprite(this.sprites.getSprite(10), this.spriteScale));\n\n        this.addDrawing(\"walkDown\", animationHelper.getScaledAnimation(engine, this.sprites, 0, 3, this.spriteScale));\n        this.addDrawing(\"walkLeft\", animationHelper.getScaledAnimation(engine, this.sprites, 3, 6, this.spriteScale));\n        this.addDrawing(\"walkRight\", animationHelper.getScaledAnimation(engine, this.sprites, 6, 9, this.spriteScale));\n        this.addDrawing(\"walkUp\", animationHelper.getScaledAnimation(engine, this.sprites, 9, 11, this.spriteScale));\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        let attacking = false;\n\n        if (this.heldItem instanceof Pan) {\n            attacking = this.heldItem.isAttacking;\n        }\n\n        if (!attacking){\n            this.doMovement(engine);\n            this.doFacing();\n        } else {\n            this.vel = vec(0,0);\n        }\n\n        /////////////////////////////////\n        /////////// Animation ///////////\n        /////////////////////////////////\n        if (this.vel.x === 0 && this.vel.y === 0) {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"standLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"standRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"standUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"standDown\");\n                    break;\n            }\n        } else {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"walkLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"walkRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"walkUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"walkDown\");\n                    break;\n            }\n        }\n\n        /////////////////////////////////\n        /////// Object Interaction //////\n        /////////////////////////////////\n        if (!attacking){\n            if (this.heldItem) {\n                this.heldItem.pos = vec(this.pos.x, this.pos.y - 40);\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Space)) {\n                if (!this.heldItem) {\n                    this.tryPickupItem();\n                } else {\n                    this.trySetDownItem();\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.E)) {\n                if (this.heldItem instanceof Pan) {\n                    this.heldItem.attack(this.getFacingTargetPos(0.7), this.facing);\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Q)) {\n                this.examine();\n            }\n        }\n\n        /////////////////////////////////\n        ////////////// DEBUG ////////////\n        /////////////////////////////////\n        if (engine.input.keyboard.wasPressed(Input.Keys.Semicolon)) {\n            let val = prompt(\"goto level\", \"level_test\");\n            if (val) {\n                engine.goToScene(val);\n            }\n        }\n    }\n    private doFacing() {\n        if (this.vel.y > 0) {\n            this.facing = \"d\"\n        } else if (this.vel.x < 0) {\n            this.facing = \"l\";\n        } else if (this.vel.x > 0) {\n            this.facing = \"r\";\n        } else if (this.vel.y < 0) {\n            this.facing = \"u\";\n        }\n    }\n\n    private doMovement(engine:Engine) {\n        let velX: number = 0, velY: number = 0;\n\n        if (engine.input.keyboard.isHeld(Input.Keys.W)) {\n            velY -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.S)) {\n            velY += 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.A)) {\n            velX -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.D)) {\n            velX += 1;\n        }\n\n        let vecMag = Math.sqrt(Math.abs(velX) + Math.abs(velY));\n\n        let adjustedVelY = velY / vecMag * this.baseSpeed;\n        let adjustedVelX = velX / vecMag * this.baseSpeed;\n\n        if (vecMag > 0) {\n            this.vel = vec(adjustedVelX, adjustedVelY);\n        } else {\n            this.vel = vec(0, 0);\n        }\n    }\n\n    private getFacingTargetPos (tilePercent:number): Vector {\n        let xOffset = 0, yOffset = 0;\n\n        switch (this.facing) {\n            case \"l\":\n                xOffset -= LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"r\":\n                xOffset += LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"u\":\n                yOffset -= LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n            case \"d\":\n                yOffset += LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n        }\n\n        return vec(this.pos.x + xOffset, this.pos.y + yOffset);\n    }\n\n    private trySetDownItem() {\n        this.heldItem.pos = this.getFacingTargetPos(1.0);\n        this.heldItem.isHeld = false;\n        this.heldItem = null;\n    }\n\n    private tryPickupItem() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => x instanceof Item &&\n                                                    x.contains(tPos.x, tPos.y));\n\n        if (targets.length > 0) {\n            this.heldItem = targets[0] as Item;\n            this.heldItem.isHeld = true;\n        }\n    }\n\n    private examine () {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => (x instanceof Item || x instanceof Appliance) &&\n                                                    x.contains(tPos.x, tPos.y));\n\n        let item = targets[0];\n\n        if (item) {\n            if (item instanceof Pan) {\n                alert(\"Pan with contents: \" + JSON.stringify(item.ingredients));\n            }\n\n            if (item instanceof Ingredient) {\n                alert(\"Ingredient: \" + item.name);\n            }\n\n            if (item instanceof Appliance) {\n                alert(\"Appliance: \" + item.applianceType);\n            }\n\n            if (item instanceof Meal) {\n                alert(\"Meal: \" + item.name);\n            }\n        }\n    }\n}\n","import { Actor, Engine, Scene, Sound, Sprite, TileMap } from \"excalibur\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { Player } from \"../../actors/player/player\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class LevelBase extends Scene {\n    protected grid: Actor[][] = [];\n    protected player: Actor;\n    protected musicTrack: Sound;\n    public muteMusic: boolean = false;\n    protected baseTile?: Sprite;\n\n    constructor(engine: Engine) {\n        super(engine);\n    }\n\n    public onInitialize(engine: Engine) {\n        UIHelper.addLevelUI(this);\n\n        this.player = new Player;\n        this.add(this.player);\n\n        this.camera.strategy.lockToActor(this.player);\n        this.musicTrack = Resources.LevelLoop1;\n        this.musicTrack.loop = true;\n        this.musicTrack.play();\n\n        // if (this.baseTile) {\n        //     for (let r = 0; r < 20; r++) {\n        //         for (let c = 0; c < 20; c++) {\n        //             // TODO background tiles as actors seems to nuke performance...\n        //             //LevelBuildingHelper.createBackgroundTile(this, this.baseTile, r, c);\n        //         }\n        //     }\n        // }\n\n        this.addBackgroundTiles();\n        this.addForegroundTiles();\n        this.addAppliances();\n        this.addPans(engine);\n        this.addItems();\n    }\n\n    protected abstract addBackgroundTiles();\n    protected abstract addForegroundTiles();\n    protected abstract addAppliances();\n    protected abstract addPans(engine:Engine);\n    protected abstract addItems();\n\n    public toggleMusic() {\n        this.muteMusic = !this.muteMusic;\n        if (this.muteMusic) {\n            this.musicTrack.stop();\n        } else {\n            this.musicTrack.play();\n        }\n    }\n}","import { Color, Engine } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideFloorWallSprites } from \"../../actors/objects/insideFloorWallSprites\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTest extends LevelBase {\n    public onInitialize(engine:Engine) { \n        this.baseTile = InsideFloorWallSprites.BlueTilePattern;\n        super.onInitialize(engine);\n\n        // TODO something less shithouse\n        alert(\"Controls:\\nWASD - Movement\\nSpace - Pick up/put down\\nE - Swing pan\\nQ - Examine\");\n    }\n\n    protected override addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n    };\n    protected override addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n    };\n    protected override addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n    };\n    protected override addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected override addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Posion )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n    }\n}\n","import { Engine } from \"excalibur\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level1 extends LevelBase {\n    protected addBackgroundTiles() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addForegroundTiles() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addAppliances() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addPans(engine: Engine) {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addItems() {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n}","import { Engine, Loader, DisplayMode, Color } from 'excalibur';\nimport { Player } from './actors/player/player';\nimport { Resources } from './resources';\nimport { LevelTest } from './scenes/levels/levelTest';\nimport { Level1 } from './scenes/levels/level_1';\n\n/**\n * Managed game class\n */\nclass Game extends Engine {\n\n    constructor() {\n        super({ displayMode: DisplayMode.FullScreen });\n    }\n\n    public start() {\n\n        game.add('level_test', new LevelTest(this));\n        game.add('level_1', new Level1(this));\n\n        // Automatically load all default resources\n        const loader = new Loader(Object.values(Resources));\n\n        // TODO add custom loader screen \n        loader.suppressPlayButton = false;\n\n        return super.start(loader);\n    }\n}\n\nconst game = new Game();\ngame.backgroundColor = new Color(245, 242, 254);\ngame.start().then(() => {\n    game.goToScene('level_test');\n});\n\ndocument.oncontextmenu = () => {\n    return false;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [325], () => (__webpack_require__(637)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}