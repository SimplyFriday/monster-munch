{"version":3,"sources":["webpack://excalibur-webpack/webpack/runtime/chunk loaded","webpack://excalibur-webpack/./src/resources.ts","webpack://excalibur-webpack/./src/util/spritesheet_wrappers/balloonIconSprites.ts","webpack://excalibur-webpack/./src/util/spritesheet_wrappers/itemIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/appliance.ts","webpack://excalibur-webpack/./src/util/helpers/uiHelper.ts","webpack://excalibur-webpack/./src/scenes/menu/death.ts","webpack://excalibur-webpack/./src/actors/objects/item.ts","webpack://excalibur-webpack/./src/actors/objects/meal.ts","webpack://excalibur-webpack/./src/util/config/recipes.ts","webpack://excalibur-webpack/./src/actors/characters/humanoid.ts","webpack://excalibur-webpack/./src/actors/characters/customer.ts","webpack://excalibur-webpack/./src/actors/objects/ingredient.ts","webpack://excalibur-webpack/./src/actors/objects/ingredientSpawner.ts","webpack://excalibur-webpack/./src/actors/objects/pan.ts","webpack://excalibur-webpack/./src/util/spritesheet_wrappers/insideTileSprites.ts","webpack://excalibur-webpack/./src/util/helpers/levelBuildingHelper.ts","webpack://excalibur-webpack/./src/actors/characters/player.ts","webpack://excalibur-webpack/./src/scenes/levels/levelBase.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTest.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTestRay.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1a.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1b.ts","webpack://excalibur-webpack/./src/scenes/levels/level_2.ts","webpack://excalibur-webpack/./src/scenes/levels/level_2a.ts","webpack://excalibur-webpack/./src/scenes/levels/level_2b.ts","webpack://excalibur-webpack/./src/scenes/levels/level_3.ts","webpack://excalibur-webpack/./src/scenes/levels/level_3a.ts","webpack://excalibur-webpack/./src/scenes/levels/level_3b.ts","webpack://excalibur-webpack/./src/scenes/levels/tutorial_1.ts","webpack://excalibur-webpack/./src/scenes/levels/tutorial_2.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/define property getters","webpack://excalibur-webpack/webpack/runtime/global","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/publicPath","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"names":["deferred","levelLoop1","bonk1","levelWin","cookPop1","cookPop2","cookPop3","customerBite","cashRegister","mealBurned","mealDone","playerHurt","swingPan","trash","newCustomer","Resources","Bag","Texture","bag","ItemIconSheet","PlayerSprites","LevelLoop1","Sound","BalloonIconSheet","PanAttack","PanEmpty","PanFilled","PanCooking","PanDone","PanBurned","InsideTilesB","InsideFloorsWalls","Stove","stove","Trashcan","trashcan","Customer1","CardFrame","Bonk1","RestartButton","WarningSquare","TutorialButton","Door","door","LevelWin","WorldTiles","CookPop1","CookPop2","CookPop3","CustomerBite","CashRegister","MealBurned","MealDone","PlayerHurt","SwingPan","Trash","NewCustomer","BalloonIconSprites","this","balloonSheet","getSprite","SpriteSheet","image","rows","columns","spWidth","spHeight","ItemIconSprites","iconSheet","ApplianceType","UIHelper","texture","xPos","yPos","se","width","iconWidth","height","iconHeight","pos","vec","addDrawing","text","maxWidth","label","Label","fontSize","add","spriteOn","spriteOff","scene","musicToggle","createUIToggleButton","MusicBalloon","MusicBalloonOff","window","innerWidth","xRelativeTo","x","y","on","event","Game","CurrentGame","currentScene","toggleMusic","muteMusic","setDrawing","hp1","createUIIcon","Heart","name","BlackHeart","hp2","customActions","player","hp","hp3","feedLabel","createUILabel","timer","uiElements","push","reset","nextLevel","tutorialButton","asSprite","innerHeight","yRelativeTo","scale","e","goToScene","console","log","engine","restartButton","DeathScreen","lastLevel","onInitialize","levelName","RecipeCard","cardTargetWidth","cardTargetHeight","ingredientSprites","recipe","cardFrame","resultSprite","ingredients","forEach","i","ctx","_delta","draw","length","Scene","backgroundColor","Color","addDeathUI","Item","Actor","isHeld","canBeTrashed","delta","body","collider","type","CollisionType","Meal","super","Appliance","ret","actors","a","touching","Recipe","resultName","ingredientCheck","Array","isArray","arr1","concat","sort","arr2","Recipes","MonsterPie","PieRed","Taco","Cookie","FriedEgg","EggCooked","Pizza","PizzaPlain","PepperoniPizza","PizzaToppings","BananaPie","PieYellow","SpecialCrunchPie","PiePurple","Burger","CrunchyCake","Cake","IceCream","IceCreamCone","Drumstick","CowboyBoots","FlipPhone","Hotdog","Cheesedog","Fries","BananaCandy","CandyYellow","BluePopsicle","FreezePopBlue","PinkPopsicle","FreezePopPink","BananaPeel","EnergyDrink","Humanoid","spriteScale","baseSpeed","sprites","setZIndex","doFacing","vel","facing","tilePercent","xOffset","yOffset","LevelBuildingHelper","tileWidth","tileHeight","Customer","speed","isHappy","tickSpeed","timeElapsed","attackTime","initialPosition","clone","wantsBalloon","EmptyBalloon","wantsSprite","wantsMeal","grumpyBubble","AngryBalloon","isAttacking","drawGrumpy","frustratedTime","p","actions","moveTo","seat","asPromise","then","debugMode","mealCheckPos","getFacingTargetPos","actionTimer","CustomerTimer","interval","fcn","routine","repeats","customer","level","customersToServe","play","kill","isKilled","cancel","actionQueue","getActions","filter","isComplete","distance","hurt","isPlaying","m","doneSearching","nextSearchX","nextSearchY","step","contains","removeCustomer","leaveHappy","Timer","Ingredient","IngredientSpawner","ingredientName","ingredientSprite","_ingredientName","_ingredientSprite","spawnIngredient","other","actor","newItemTimer","IngredientTimer","spawner","createIngredientAtPosition","Pan","cookTimeMultiplier","isOnStove","cookTime","isDone","isBurned","cookingSounds","soundDelay","burnTimeMultiplier","ispr","pDone","start","end","doneBase","pBurn","shape","Shape","otherActor","applianceType","ServingPlate","isOccupied","product","r","ingredientsEqual","createMeal","stoves","collide","otherPans","foundStove","stoveIsFree","pan","sr","Math","floor","random","tickCook","attackAnimation","flipHorizontal","InsideTileSprites","color","textAlign","TextAlign","display","createTile","sprite","s","hasCollision","z","scaleX","scaleY","spawnerSprite","setupSpawner","itemScale","spr","xPosTile","yPosTile","position","Tray","Error","panAttackSprites","loop","eSpr","fSpr","dSpr","bSpr","cookingSheet","cAnim","Player","hitboxScale","immunityTime","boostTime","movementHelper","Input","blink","deathScene","scenes","onPreUpdate","attacking","heldItem","doMovement","input","keyboard","wasPressed","trySetDownItem","tryPickupItem","attack","examine","val","prompt","GetVelocityKeyboard","tPos","pans","targets","item","alert","JSON","stringify","LevelBase","uiInitialized","suppressBorder","customerSeats","doors","customers","customerSpawnSpeed","customerFrustratedTime","customerAttackTime","isTutorial","oldScene","newScene","onDeactivate","musicTrack","stop","remove","uiTimer","addLevelUI","initialCustomersToServe","camera","strategy","lockToActor","createLevelBorder","addBackgroundTiles","addForegroundTiles","addAppliances","addPans","addItems","addSeatsAndDoors","availableMeals","setRecipe","b","v","di","createCustomer","nextFreeSeat","some","c","visible","mi","spawnTimer","LevelTimer","spawnCustomer","border","borderWidth","createWallTile","borderHeight","walkToSeat","LevelTest","createBackgroundTile","CounterFaceLeft","CounterFaceCenter","CounterFaceRight","Table_V_BottomLeg","CounterVerticalFull","CounterCornerBottomLeft","CounterBottomCornerRight","CounterBottomCentral","Table_V_TopLarge","createApplianceOnTile","createPanOnTile","createIngrediantSpawnerOnTile","createSeat","RedStool","LevelTestRay","wallColor","StoolTopRed","StoolTopGrey","Table_H_TopLeft","Table_H_TopMid","Table_H_TopRight","Table_H_BottomLeftLeg","Table_H_BottomMidNoLeg","Table_H_BottomRightLeg","GreyStool","TrashCanTopEmpty","TrashCanBottom","TrashCanTopLid","Apple","FlourBag","Mayo","Poison","Skull","Level1","CounterFaceStandalone","CounterStandalone","Level1a","Level1b","Level2","CounterCornerTopLeft","CounterMiddleFull","CounterCornerTopRight","Level2a","Level2b","Level3","Level3a","Level3b","Tutorial1","addTutorialButton","createLabelAcrossTiles","Tutorial2","Engine","displayMode","DisplayMode","location","host","startsWith","addLevel","game","loader","Loader","Object","values","suppressPlayButton","document","oncontextmenu","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","currentScript","src","scripts","getElementsByTagName","replace","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Sound, Texture } from 'excalibur';\nimport bag from './images/bag.png';\nimport itemIcons from './images/item_icons.png';\nimport balloonIcons from './images/balloon_1.png';\nimport playerSprites from './images/player_sprites.png';\nimport panAttack from './images/pan_attack.png';\nimport panEmpty from './images/pan_empty.png';\nimport panFilled from './images/pan_filled.png';\nimport panCooking from './images/pan_cooking.png';\nimport panDone from './images/pan_done.png';\nimport panBurned from './images/pan_burned.png';\nimport insideTilesB from './images/tileB_inside4.png';\nimport insideFloorsWalls from './images/tileA5_inside.png';\nimport stove from './images/stove.png';\nimport trashcan from './images/trashcan.png';\nimport customer1 from './images/customer_1.png';\nimport cardFrame from './images/card_frame.png';\nimport restartButton from './images/restart_button.png';\nimport warningSquare from './images/warning_square.png';\nimport tutorialButton from './images/tutorial_button.png';\nimport door from './images/door.png';\nimport worldTiles from './images/tileB_world.png';\n\nconst levelLoop1 = require('./audio/level_loop1.wav');\nconst bonk1 = require('./audio/bonk1.wav');\nconst levelWin = require('./audio/level_win.wav');\nconst cookPop1 = require('./audio/cook_pop_1.wav');\nconst cookPop2 = require('./audio/cook_pop_2.wav');\nconst cookPop3 = require('./audio/cook_pop_3.wav');\nconst customerBite = require('./audio/customer_bite.wav');\nconst cashRegister = require('./audio/cash_register.wav');\nconst mealBurned = require('./audio/meal_burned.wav');\nconst mealDone = require('./audio/meal_done.wav');\nconst playerHurt = require('./audio/player_hurt.wav');\nconst swingPan = require('./audio/swing_pan.wav');\nconst trash = require('./audio/trash.wav');\nconst newCustomer = require('./audio/new_customer.wav');\n\n/**\n * Default global resource dictionary. This gets loaded immediately\n * and holds available assets for the game.\n */\n\nconst Resources = {\n    Bag: new Texture(bag),\n    ItemIconSheet: new Texture(itemIcons),\n    PlayerSprites: new Texture(playerSprites),\n    LevelLoop1: new Sound(levelLoop1),\n    BalloonIconSheet: new Texture(balloonIcons),\n    PanAttack: new Texture(panAttack),\n    PanEmpty: new Texture(panEmpty),\n    PanFilled: new Texture(panFilled),\n    PanCooking: new Texture(panCooking),\n    PanDone: new Texture(panDone),\n    PanBurned: new Texture(panBurned),\n    InsideTilesB: new Texture(insideTilesB),\n    InsideFloorsWalls: new Texture(insideFloorsWalls),\n    Stove: new Texture(stove),\n    Trashcan: new Texture(trashcan),\n    Customer1: new Texture(customer1),\n    CardFrame: new Texture(cardFrame),\n    Bonk1: new Sound(bonk1),\n    RestartButton: new Texture(restartButton),\n    WarningSquare: new Texture(warningSquare),\n    TutorialButton: new Texture (tutorialButton),\n    Door: new Texture (door),\n    LevelWin: new Sound(levelWin),\n    WorldTiles: new Texture(worldTiles),\n    CookPop1: new Sound(cookPop1),\n    CookPop2: new Sound(cookPop2),\n    CookPop3: new Sound(cookPop3),\n    CustomerBite: new Sound(customerBite),\n    CashRegister: new Sound(cashRegister),\n    MealBurned: new Sound(mealBurned),\n    MealDone: new Sound(mealDone),\n    PlayerHurt: new Sound(playerHurt),\n    SwingPan: new Sound(swingPan),\n    Trash: new Sound(trash),\n    NewCustomer: new Sound(newCustomer)\n}\n\nexport { Resources }\n","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class BalloonIconSprites {\n    private static balloonSheet = new SpriteSheet({\n        image: Resources.BalloonIconSheet,\n        rows: 11,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get MusicBalloon () {\n        return this.balloonSheet.getSprite(18);\n    }\n    \n    public static get MusicBalloonOff () {\n        return this.balloonSheet.getSprite(17);\n    }\n\n    public static get EmptyBalloon() {\n        return this.balloonSheet.getSprite(82)\n    }\n\n    public static get AngryBalloon() {\n        return this.balloonSheet.getSprite(34)\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class ItemIconSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.ItemIconSheet,\n        rows: 11,\n        columns: 16,\n        spWidth: 12,\n        spHeight: 12\n    });\n    \n    public static get Heart () {\n        return this.iconSheet.getSprite(1);\n    }\n\n    public static get BlackHeart () {\n        return this.iconSheet.getSprite(2);\n    }\n\n    public static get Skull () {\n        return this.iconSheet.getSprite(6);\n    }\n\n    public static get FlourBag () {\n        return this.iconSheet.getSprite(9);\n    }\n\n    public static get StormCloud () {\n        return this.iconSheet.getSprite(11);\n    }\n\n    public static get SnowFlake () {\n        return this.iconSheet.getSprite(13);\n    }\n\n    public static get RedGem () {\n        return this.iconSheet.getSprite(25);\n    }\n\n    public static get BlueGem () {\n        return this.iconSheet.getSprite(26);\n    }\n\n    public static get YellowGem () {\n        return this.iconSheet.getSprite(27);\n    }\n\n    public static get PurpleGem () {\n        return this.iconSheet.getSprite(28);\n    }\n\n    public static get GreenGem () {\n        return this.iconSheet.getSprite(29);\n    }\n\n    public static get WhiteGem () {\n        return this.iconSheet.getSprite(30);\n    }\n\n    public static get BlackGem () {\n        return this.iconSheet.getSprite(31);\n    }\n\n    public static get GreenLeaf () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get RedLeaf () {\n        return this.iconSheet.getSprite(33);\n    }\n\n    public static get RedPot () {\n        return this.iconSheet.getSprite(34);\n    }\n\n    public static get BluePot () {\n        return this.iconSheet.getSprite(35);\n    }\n\n    public static get YellowPot () {\n        return this.iconSheet.getSprite(36);\n    }\n    \n    public static get GreenPot () {\n        return this.iconSheet.getSprite(37);\n    }\n    \n    public static get Poison () {\n        return this.iconSheet.getSprite(39);\n    }\n    \n    public static get Apple () {\n        return this.iconSheet.getSprite(40);\n    }\n    \n    public static get Banana () {\n        return this.iconSheet.getSprite(42);\n    }\n\n    public static get BananaPeel () {\n        return this.iconSheet.getSprite(43);\n    }\n\n    public static get Bread () {\n        return this.iconSheet.getSprite(44);\n    }\n    \n    public static get Cheese () {\n        return this.iconSheet.getSprite(45);\n    }\n    \n    public static get Drumstick () {\n        return this.iconSheet.getSprite(46);\n    }\n    \n    public static get Cookie () {\n        return this.iconSheet.getSprite(47);\n    }\n    \n    public static get Burger () {\n        return this.iconSheet.getSprite(48);\n    }\n    \n    public static get Fries () {\n        return this.iconSheet.getSprite(49);\n    }\n    \n    public static get Hotdog () {\n        return this.iconSheet.getSprite(50);\n    }\n\n    public static get Cheesedog () {\n        return this.iconSheet.getSprite(51);\n    }\n    \n    public static get PizzaPlain () {\n        return this.iconSheet.getSprite(52);\n    }\n    \n    public static get PizzaToppings () {\n        return this.iconSheet.getSprite(53);\n    }\n    \n    public static get Meat () {\n        return this.iconSheet.getSprite(54);\n    }\n    \n    public static get EggRaw () {\n        return this.iconSheet.getSprite(55);\n    }\n    \n    public static get EggCooked () {\n        return this.iconSheet.getSprite(56);\n    }\n\n    public static get Taco () {\n        return this.iconSheet.getSprite(57);\n    }\n    \n    public static get Burrito () {\n        return this.iconSheet.getSprite(58);\n    }\n\n    public static get Ketchup () {\n        return this.iconSheet.getSprite(61);\n    }\n\n    public static get Mayo () {\n        return this.iconSheet.getSprite(62);\n    }\n\n    public static get Relish () {\n        return this.iconSheet.getSprite(63);\n    }\n\n    public static get PieYellow () {\n        return this.iconSheet.getSprite(71);\n    }\n\n    public static get PieRed () {\n        return this.iconSheet.getSprite(72);\n    }\n    \n    public static get PiePurple () {\n        return this.iconSheet.getSprite(73);\n    }\n    \n    public static get Cake () {\n        return this.iconSheet.getSprite(74);\n    }\n\n    public static get IceCreamCone () {\n        return this.iconSheet.getSprite(75);\n    }\n\n    public static get FreezePopPink () {\n        return this.iconSheet.getSprite(76);\n    }\n\n    public static get FreezePopBlue () {\n        return this.iconSheet.getSprite(77);\n    }\n\n    public static get CandyRed () {\n        return this.iconSheet.getSprite(78);\n    }\n\n    public static get CandyYellow () {\n        return this.iconSheet.getSprite(79);\n    }\n\n    public static get SyringeRed () {\n        return this.iconSheet.getSprite(80);\n    }\n\n    public static get SyringeGreen () {\n        return this.iconSheet.getSprite(81);\n    }\n\n    public static get SyringeBlue () {\n        return this.iconSheet.getSprite(82);\n    }\n\n    public static get SyringePurple () {\n        return this.iconSheet.getSprite(83);\n    }\n\n    public static get SyringeYellow () {\n        return this.iconSheet.getSprite(84);\n    }\n\n    public static get PinkBottle () {\n        return this.iconSheet.getSprite(85);\n    }\n\n    public static get BrownBottle () {\n        return this.iconSheet.getSprite(86);\n    }\n\n    public static get Champagne () {\n        return this.iconSheet.getSprite(87);\n    }\n\n    public static get FlipPhone () {\n        return this.iconSheet.getSprite(88);\n    }\n\n    public static get ToiletPaper () {\n        return this.iconSheet.getSprite(89);\n    }\n\n    public static get FloppyDisk () {\n        return this.iconSheet.getSprite(107);\n    }\n\n    public static get FloppyDiskTilt () {\n        return this.iconSheet.getSprite(108);\n    }\n\n    public static get Trash () {\n        return this.iconSheet.getSprite(109);\n    }\n\n    public static get Salt () {\n        return this.iconSheet.getSprite(110);\n    }\n\n    public static get Sword () {\n        return this.iconSheet.getSprite(112);\n    }\n\n    public static get Branch () {\n        return this.iconSheet.getSprite(113);\n    }\n\n    public static get Bat () {\n        return this.iconSheet.getSprite(114);\n    }\n\n    public static get Axe () {\n        return this.iconSheet.getSprite(115);\n    }\n\n    public static get Snake () {\n        return this.iconSheet.getSprite(116);\n    }\n\n    public static get Staff () {\n        return this.iconSheet.getSprite(117);\n    }\n\n    public static get TennisRacket () {\n        return this.iconSheet.getSprite(118);\n    }\n\n    public static get Bone () {\n        return this.iconSheet.getSprite(126);\n    }\n\n    public static get ChocolateBar () {\n        return this.iconSheet.getSprite(137);\n    }\n\n    public static get Potato () {\n        return this.iconSheet.getSprite(144);\n    }\n\n    public static get CowboyBoots () {\n        return this.iconSheet.getSprite(170);\n    }\n\n    public static get EnergyDrink () {\n        return this.iconSheet.getSprite(68);\n    }\n    \n    public static get Starburst () {\n        return this.iconSheet.getSprite(15);\n    }\n\n    public static get Whirlwind () {\n        return this.iconSheet.getSprite(14);\n    }\n    \n    public static get Stick () {\n        return this.iconSheet.getSprite(113);\n    }\n       \n}","import { Actor } from \"excalibur\";\nimport { Item } from \"./item\";\nimport { Meal } from \"./meal\";\nimport { Pan } from \"./pan\";\n\nexport class Appliance extends Actor {\n    public applianceType:ApplianceType;\n\n    public get isOccupied ():boolean {\n        let ret = false;\n\n        this.scene.actors.forEach(a => {\n            if ((a instanceof Meal) && this.body.collider.touching(a.body.collider)) {\n                ret = true;\n            }\n        });\n\n        return ret;\n    }\n}\n\nexport enum ApplianceType {\n    Stove,\n    ServingPlate,\n    Trashcan\n}","import { ScreenElement, Texture, vec, Sprite, Timer, Engine, Label } from \"excalibur\";\nimport { Game } from \"../..\";\nimport { Resources } from \"../../resources\";\nimport { DeathScreen } from \"../../scenes/menu/death\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { Recipe } from \"../config/recipes\";\nimport { BalloonIconSprites } from \"../spritesheet_wrappers/balloonIconSprites\";\nimport { ItemIconSprites } from \"../spritesheet_wrappers/itemIconSprites\";\nimport { AnimationHelper, UITimer, ViewportLockedUIElement } from \"excalibur-bootstraps\";\n\nexport abstract class UIHelper {\n    private static iconWidth:number = 50;\n    private static iconHeight:number = 50;\n\n    private static createUIIcon(texture: Sprite, xPos: number, yPos: number): ViewportLockedUIElement {\n        let se = new ViewportLockedUIElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"default\", AnimationHelper.getScaledSprite(texture, 0.65));\n\n        return se;\n    }\n\n    private static createUILabel(text: string, xPos: number, yPos: number, maxWidth:number): ViewportLockedUIElement {\n        let se = new ViewportLockedUIElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        let label = new Label(text, 0, 0);\n        label.fontSize = 38;\n        label.maxWidth = maxWidth;\n        se.add(label);\n        \n        return se;\n    }\n\n    private static createUIToggleButton (spriteOn:Sprite, spriteOff:Sprite, xPos:number, yPos:number): ViewportLockedUIElement {\n        let se = new ViewportLockedUIElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"on\", AnimationHelper.getScaledSprite(spriteOn, 0.7));\n        se.addDrawing(\"off\", AnimationHelper.getScaledSprite(spriteOff, 0.7));\n\n        return se;\n    }\n\n    public static addLevelUI (scene:LevelBase): UITimer {\n        let musicToggle = this.createUIToggleButton(BalloonIconSprites.MusicBalloon, BalloonIconSprites.MusicBalloonOff, window.innerWidth - 220, 50);\n        musicToggle.xRelativeTo = \"center\";\n        musicToggle.x = 220;\n        musicToggle.y = 50;\n        \n        musicToggle.on ('pointerup', (event) =>{\n            if (musicToggle.scene === Game.CurrentGame.currentScene) {\n                scene.toggleMusic();\n                \n                if (Game.muteMusic) {\n                    musicToggle.setDrawing(\"off\");\n                } else {\n                    musicToggle.setDrawing(\"on\");\n                }\n            }\n        });\n\n        scene.add(musicToggle);\n\n        if (Game.muteMusic) {\n            musicToggle.setDrawing(\"off\");\n        }\n\n        let hp1 = this.createUIIcon(ItemIconSprites.Heart, window.innerWidth - 120, 50);\n        hp1.xRelativeTo = \"center\";\n        hp1.x = 300;\n        hp1.y = 50;\n        hp1.name = \"hp1\";\n        hp1.addDrawing(\"hurt\", AnimationHelper.getScaledSprite(ItemIconSprites.BlackHeart, 0.65))\n        \n        let hp2 = this.createUIIcon(ItemIconSprites.Heart, window.innerWidth - 90, 50);\n        hp2.xRelativeTo = \"center\";\n        hp2.x = 330;\n        hp2.y = 50;\n        hp2.name = \"hp2\";\n        hp2.addDrawing(\"hurt\", AnimationHelper.getScaledSprite(ItemIconSprites.BlackHeart, 0.65))\n\n        hp2.customActions = () => {\n            let pHP = (scene as LevelBase).player.hp;\n            if (pHP < 2) {\n                hp2.setDrawing(\"hurt\");\n            }\n        }\n\n        let hp3 = this.createUIIcon(ItemIconSprites.Heart, window.innerWidth - 60, 50);\n        hp3.xRelativeTo = \"center\";\n        hp3.x = 360;\n        hp3.y = 50;\n        hp3.name = \"hp3\";\n        hp3.addDrawing(\"hurt\", AnimationHelper.getScaledSprite(ItemIconSprites.BlackHeart, 0.65))\n\n        hp3.customActions = () => {\n            let pHP = (scene as LevelBase).player.hp;\n            if (pHP < 3) {\n                hp2.setDrawing(\"hurt\");\n            }\n        }\n\n        scene.add (hp1);\n        scene.add (hp2);\n        scene.add (hp3);\n\n        let feedLabel = this.createUILabel(\"Customers Left: \", 0, 0, 140);\n        feedLabel.xRelativeTo = \"center\";\n        feedLabel.x = 270;\n        feedLabel.y = 130;\n        feedLabel.name = \"feedlabel\";\n        scene.add(feedLabel);\n\n        let timer = new UITimer(50);\n        timer.uiElements.push(musicToggle);\n        timer.uiElements.push(hp1);\n        timer.uiElements.push(hp2);\n        timer.uiElements.push(hp3);\n        timer.uiElements.push(feedLabel);\n\n        scene.add(timer);\n        timer.reset();\n\n        return timer;\n    }\n\n    public static addTutorialButton (scene:LevelBase, nextLevel:string) {\n        let tutorialButton = this.createUIIcon(Resources.TutorialButton.asSprite(), window.innerWidth / 2, window.innerHeight / 2);\n        tutorialButton.xRelativeTo = \"center\";\n        tutorialButton.yRelativeTo = \"bottom\";\n        tutorialButton.y = -150;\n        tutorialButton.x = 100;\n\n        tutorialButton.scale = vec(3,2);\n\n        scene.add(tutorialButton);\n        \n        let timer = new UITimer(50);\n        timer.uiElements.push(tutorialButton);\n        scene.add(timer);\n        timer.reset();\n\n        tutorialButton.on(\"pointerup\", (e) => {\n            if (tutorialButton.scene === Game.CurrentGame.currentScene) {\n                Game.CurrentGame.goToScene(nextLevel);\n                console.log(\"tutorial button clicked\");\n            }\n        });\n    }\n\n    public static addDeathUI (scene:DeathScreen, engine:Engine) {\n        let restartButton = this.createUIIcon(Resources.RestartButton.asSprite(), window.innerWidth / 2, window.innerHeight / 2);\n        restartButton.xRelativeTo = \"center\";\n        restartButton.yRelativeTo = \"center\";\n        restartButton.y = 70;\n\n        restartButton.scale = vec(5,5);\n\n        scene.add(restartButton);\n        let timer = new UITimer(50);\n        timer.uiElements.push(restartButton);\n        scene.add(timer);\n        timer.reset();\n\n        restartButton.on(\"pointerup\", (e) => {\n            if (Game.CurrentGame.currentScene instanceof DeathScreen) {\n                scene.lastLevel.onInitialize(engine);\n                engine.goToScene(scene.lastLevel.levelName)\n            }\n        });\n    }\n}\n\n\nexport class RecipeCard extends ViewportLockedUIElement {\n    private cardTargetWidth = 75;\n    private cardTargetHeight = 120;\n    \n    private cardFrame:Sprite;\n    private resultSprite:Sprite;\n    private ingredientSprites:Sprite[] = [];\n\n    public setRecipe(recipe:Recipe) {\n        this.cardFrame = Resources.CardFrame.asSprite();\n        this.cardFrame.scale = vec(this.cardTargetWidth / this.cardFrame.width, this.cardTargetHeight / this.cardFrame.height );\n\n        this.resultSprite =AnimationHelper.getScaledSprite(recipe.resultSprite, 0.6);\n        \n        recipe.ingredients.forEach(i => {\n            this.ingredientSprites.push(AnimationHelper.getScaledSprite(ItemIconSprites[i], 0.6));\n        });\n    }\n\n    public onPreDraw (ctx: CanvasRenderingContext2D, _delta: number) {\n        this.cardFrame.draw(ctx, 0,0);\n        this.resultSprite.draw(ctx, this.cardTargetWidth / 2 - this.resultSprite.width,5);\n\n        this.ingredientSprites[0].draw(ctx, 5,50)\n        \n        if (this.ingredientSprites.length >= 2) {\n            this.ingredientSprites[1].draw(ctx, 40,50)\n        }\n\n        if (this.ingredientSprites.length >= 3) {\n            this.ingredientSprites[2].draw(ctx, 5, 85)\n        }\n\n        if (this.ingredientSprites.length >= 4) {\n            this.ingredientSprites[3].draw(ctx, 40, 85)\n        }\n    }\n}","import { Color, Engine, Scene, ScreenElement } from \"excalibur\";\nimport { UIHelper } from \"../../util/helpers/uiHelper\";\nimport { LevelBase } from \"../levels/levelBase\";\n\nexport class DeathScreen extends Scene {\n    public lastLevel:LevelBase;\n\n    onInitialize(engine:Engine){\n        engine.backgroundColor = Color.Black;\n\n        UIHelper.addDeathUI(this, engine);\n    }\n    \n    public onPreUpdate (engine:Engine) {\n        engine.backgroundColor = Color.Black;\n    }\n}","import { Actor, CollisionType, Engine } from \"excalibur\";\n\nexport abstract class Item extends Actor {\n    public isHeld: boolean = false;\n    public canBeTrashed:boolean = false;\n\n    public onPreUpdate(engine:Engine, delta:number) {\n        if (this.isHeld) {\n            this.body.collider.type = CollisionType.PreventCollision;\n        } else {\n            this.body.collider.type = CollisionType.Fixed;\n        }\n    }\n}\n","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Meal extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Sprite } from \"excalibur\";\nimport { ItemIconSprites } from \"../spritesheet_wrappers/itemIconSprites\";\n\nexport class Recipe {\n    public ingredients:string[];\n    public resultName:string;\n    public resultSprite:Sprite;\n\n    constructor (ingredients:string[], resultName:string, resultSprite:Sprite) {\n        this.ingredients = ingredients;\n        this.resultSprite = resultSprite;\n        this.resultName = resultName;\n    }\n\n    public ingredientsEqual(ingredientCheck:string[]) {\n        if (\n          !Array.isArray(this.ingredients)\n          || !Array.isArray(ingredientCheck)\n          || this.ingredients.length !== ingredientCheck.length\n          ) {\n            return false;\n          }\n        \n        // .concat() to not mutate arguments\n        const arr1 = this.ingredients.concat().sort();\n        const arr2 = ingredientCheck.concat().sort();\n        \n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n             }\n        }\n        \n        return true;\n    }\n}\n\nconst Recipes = {\n    MonsterPie: new Recipe ([\"Poison\", \"FlourBag\", \"Apple\"],\"MonsterPie\",ItemIconSprites.PieRed),\n    Taco: new Recipe ([\"Meat\", \"Cheese\", \"GreenLeaf\"],\"Taco\",ItemIconSprites.Taco),\n    Cookie: new Recipe ([\"FlourBag\", \"EggRaw\"],\"Cookie\",ItemIconSprites.Cookie),\n    FriedEgg: new Recipe ([\"EggRaw\"],\"FriedEgg\",ItemIconSprites.EggCooked),\n    Pizza: new Recipe ([\"FlourBag\", \"RedPot\", \"Cheese\"],\"Pizza\",ItemIconSprites.PizzaPlain),\n    PepperoniPizza: new Recipe ([\"FlourBag\", \"RedPot\", \"Meat\",\"Cheese\"],\"PepperoniPizza\",ItemIconSprites.PizzaToppings),\n    BananaPie: new Recipe ([\"EggRaw\", \"FlourBag\", \"Banana\"],\"BananaPie\",ItemIconSprites.PieYellow),\n    SpecialCrunchPie: new Recipe ([\"EggRaw\", \"FlourBag\", \"PurpleGem\"],\"SpecialCrunchPie\",ItemIconSprites.PiePurple),\n    Burger: new Recipe ([\"Meat\", \"Bread\", \"GreenLeaf\", \"Cheese\"],\"Burger\",ItemIconSprites.Burger),\n    CrunchyCake: new Recipe ([\"EggRaw\", \"FlourBag\", \"YellowPot\", \"Skull\"],\"CrunchyCake\",ItemIconSprites.Cake),\n    IceCream: new Recipe ([\"YellowPot\",\"EggRaw\", \"WhiteGem\"],\"IceCream\",ItemIconSprites.IceCreamCone),\n    Drumstick: new Recipe ([\"Stick\",\"Meat\", \"ToiletPaper\"],\"Drumstick\",ItemIconSprites.Drumstick),\n    CowboyBoots: new Recipe ([\"Poison\",\"SyringeGreen\",\"Meat\"],\"CowboyBoots\",ItemIconSprites.CowboyBoots),\n    FlipPhone: new Recipe ([\"StormCloud\",\"FloppyDisk\",\"Poison\"],\"FlipPhone\",ItemIconSprites.FlipPhone),\n    Hotdog: new Recipe ([\"ToiletPaper\",\"Meat\",\"Bread\"],\"Hotdog\",ItemIconSprites.Hotdog),\n    Cheesedog: new Recipe ([\"Cheese\",\"Meat\",\"Bread\"],\"Cheesedog\",ItemIconSprites.Cheesedog),\n    Fries: new Recipe ([\"Potato\",\"TennisRacket\",\"Salt\"],\"Fries\",ItemIconSprites.Fries),\n    BananaCandy: new Recipe ([\"Banana\",\"SyringeYellow\",\"WhiteGem\"],\"BananaCandy\",ItemIconSprites.CandyYellow),\n    BluePopsicle: new Recipe ([\"BlueGem\",\"BluePot\",\"SyringeBlue\"],\"BluePopsicle\",ItemIconSprites.FreezePopBlue),\n    PinkPopsicle: new Recipe ([\"RedGem\",\"SyringeRed\",\"BluePot\"],\"PinkPopsicle\",ItemIconSprites.FreezePopPink),\n    BananaPeel: new Recipe ([\"Banana\",\"Axe\",\"SyringeYellow\"],\"BananaPeel\",ItemIconSprites.BananaPeel),\n    EnergyDrink: new Recipe([\"Poison\", \"StormCloud\"],\"EnergyDrink\",ItemIconSprites.EnergyDrink)\n}\n\nexport {Recipes}","import { Actor, Engine, SpriteSheet, Texture, vec, Vector } from \"excalibur\";\nimport { AnimationHelper } from \"excalibur-bootstraps\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\n\nexport abstract class Humanoid extends Actor {\n    protected sprites: Texture;\n    protected spriteScale:number = 0.9;\n    protected facing:string;\n    protected baseSpeed: number = 200;\n\n    public onInitialize (engine:Engine) {\n        let sprites = new SpriteSheet({\n            image: this.sprites,\n            rows: 4,\n            columns: 3,\n            spWidth: this.sprites.width / 3,\n            spHeight: this.sprites.height / 4\n        });\n\n        this.setZIndex(1000);\n\n        this.addDrawing(\"standDown\", AnimationHelper.getScaledSprite(sprites.getSprite(1), this.spriteScale));\n        this.addDrawing(\"standLeft\", AnimationHelper.getScaledSprite(sprites.getSprite(4), this.spriteScale));\n        this.addDrawing(\"standRight\", AnimationHelper.getScaledSprite(sprites.getSprite(7), this.spriteScale));\n        this.addDrawing(\"standUp\", AnimationHelper.getScaledSprite(sprites.getSprite(10), this.spriteScale));\n\n        this.addDrawing(\"walkDown\", AnimationHelper.getScaledAnimation(engine, sprites, 0, 3, this.spriteScale));\n        this.addDrawing(\"walkLeft\", AnimationHelper.getScaledAnimation(engine, sprites, 3, 6, this.spriteScale));\n        this.addDrawing(\"walkRight\", AnimationHelper.getScaledAnimation(engine, sprites, 6, 9, this.spriteScale));\n        this.addDrawing(\"walkUp\", AnimationHelper.getScaledAnimation(engine, sprites, 9, 11, this.spriteScale));\n    }\n\n    public onPreUpdate (engine:Engine, delta:number) {\n        /////////////////////////////////\n        /////////// Animation ///////////\n        /////////////////////////////////\n        this.doFacing();\n        \n        if (this.vel.x === 0 && this.vel.y === 0) {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"standLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"standRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"standUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"standDown\");\n                    break;\n            }\n        } else {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"walkLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"walkRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"walkUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"walkDown\");\n                    break;\n            }\n        }\n    }\n\n    protected doFacing() {\n        if (this.vel.y > 0) {\n            this.facing = \"d\"\n        } else if (this.vel.x < 0) {\n            this.facing = \"l\";\n        } else if (this.vel.x > 0) {\n            this.facing = \"r\";\n        } else if (this.vel.y < 0) {\n            this.facing = \"u\";\n        }\n    }\n\n    protected getFacingTargetPos(tilePercent: number): Vector {\n        let xOffset = 0, yOffset = 0;\n\n        switch (this.facing) {\n            case \"l\":\n                xOffset -= LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"r\":\n                xOffset += LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"u\":\n                yOffset -= LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n            case \"d\":\n                yOffset += LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n        }\n\n        return vec(this.pos.x + xOffset, this.pos.y + yOffset);\n    }\n}","import { Actor, Animation, Engine, Sprite, SpriteSheet, Timer, vec, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { BalloonIconSprites } from \"../../util/spritesheet_wrappers/balloonIconSprites\";\nimport { Meal } from \"../objects/meal\";\nimport { Recipe } from \"../../util/config/recipes\";\nimport { Seat } from \"../objects/seat\";\nimport { Humanoid } from \"./humanoid\";\nimport { AnimationHelper } from \"excalibur-bootstraps\";\nimport { Game } from \"../..\";\n\nexport class Customer extends Humanoid {\n    private speed: number = 160;\n    private actionTimer: CustomerTimer;\n    private mealCheckPos: Vector;\n    private initialPosition: Vector;\n    private wantsBalloon: Sprite;\n    private wantsSprite: Sprite;\n    private grumpyBubble: Sprite;\n    private isHappy: boolean = false;\n\n    public wantsMeal: Recipe;\n    public frustratedTime: number;\n    public attackTime: number;\n    public seat: Seat;\n    public timeElapsed: number;\n    public tickSpeed:number = 100;\n    \n    public get isAttacking () {\n        return this.timeElapsed >= this.attackTime\n    }\n\n    public onInitialize(engine: Engine) {\n        this.sprites = Resources.Customer1;\n        super.onInitialize(engine);\n\n        this.initialPosition = this.pos.clone();\n        this.wantsBalloon = AnimationHelper.getScaledSprite(BalloonIconSprites.EmptyBalloon, 0.8);\n        this.wantsSprite = AnimationHelper.getScaledSprite(this.wantsMeal.resultSprite.clone(), 0.70)\n\n        this.grumpyBubble = AnimationHelper.getScaledSprite(BalloonIconSprites.AngryBalloon, 0.8)\n    }\n\n    public onPreDraw(ctx: CanvasRenderingContext2D, _delta: number) {\n        if (!this.isAttacking && !this.isHappy) {\n            let drawGrumpy = false;\n\n            if (this.timeElapsed >= this.frustratedTime) {\n                drawGrumpy = this.timeElapsed % 1000 > 500;\n            }\n\n            if (drawGrumpy) {\n                this.grumpyBubble.draw(ctx, 0, -50);\n            } else {\n                this.wantsBalloon.draw(ctx, 0, -50);\n                this.wantsSprite.draw(ctx, 0, -50);\n            }\n        }\n\n    }\n\n    public walkToSeat() {\n        let p = this.actions.moveTo(this.seat.pos.x, this.seat.pos.y, this.speed).asPromise();\n        this.timeElapsed = 0;\n\n        p.then(() => {\n            if (Game.debugMode){\n                console.log(\"customer arrived at seat\")\n            }\n\n            this.facing = this.seat.facing;\n            \n            this.mealCheckPos = this.getFacingTargetPos(0.5);\n\n            this.actionTimer = new CustomerTimer({\n                interval: this.tickSpeed,\n                fcn: this.routine,\n                repeats: true\n            });\n\n            this.actionTimer.customer = this;\n            this.scene.add(this.actionTimer);\n        });\n    }\n\n    public leaveHappy() {\n        this.isHappy = true;\n        let level = (this.scene as LevelBase);\n        \n        if (level.nextLevel) {\n            level.customersToServe--;\n        } else {\n            level.customersToServe++;\n        }\n\n        Resources.CustomerBite.play().then(() => {\n            Resources.CashRegister.play().then(() => {\n                this.actions.moveTo(this.initialPosition.x, this.initialPosition.y, this.speed).asPromise().then(() => {\n                    this.kill();\n                });\n            });\n        });\n    }\n\n    private routine() {\n        let a = this as unknown as CustomerTimer;\n\n        if (a) {\n            if (a.customer.isKilled()) {\n                a.cancel();\n                return;\n            }\n\n            if (!a.customer.isAttacking) {\n                let m: Actor[] = [];\n                \n                let doneSearching = false;\n                let nextSearchX = a.customer.mealCheckPos.x - LevelBuildingHelper.tileWidth / 2;\n                let nextSearchY = a.customer.mealCheckPos.y - LevelBuildingHelper.tileHeight / 2;\n                let step = 15;\n                \n                while (!doneSearching) {\n                    m = a.customer.scene.actors.filter(x => x instanceof Meal &&\n                                x.name === a.customer.wantsMeal.resultName &&\n                                !x.isHeld &&\n                                x.contains(nextSearchX, nextSearchY))\n                    \n                    if (m.length > 0) {\n                        doneSearching = true;\n                    } else {\n                        if (nextSearchX <= a.customer.mealCheckPos.x + LevelBuildingHelper.tileWidth / 2) {\n                            nextSearchX += step;\n                        } else if (nextSearchY <= a.customer.mealCheckPos.y + LevelBuildingHelper.tileHeight / 2) {\n                            nextSearchX = a.customer.mealCheckPos.x - LevelBuildingHelper.tileWidth / 2;\n                            nextSearchY += step;\n                        } else {\n                            doneSearching = true;\n                        }\n                    }\n                }\n\n                if (m.length > 0) {\n                    // TODO eat animation or something\n                    m[0].kill();\n                    (a.scene as LevelBase).removeCustomer(a.customer);\n                    a.customer.leaveHappy();\n                } else {\n                    a.customer.timeElapsed += a.customer.tickSpeed;\n                }\n            } else {\n                let player = (a.customer.scene as LevelBase).player;\n \n                if (a.customer.actionQueue.getActions().filter(x=>!x.isComplete).length === 0) {\n                    a.customer.actions.moveTo (player.pos.x, player.pos.y, a.customer.speed);\n                }\n\n                if (a.customer.pos.distance(player.pos) <= 50 && a.customer.isAttacking) {\n                    player.hurt();\n\n                    if (!Resources.CustomerBite.isPlaying()) {\n                        Resources.CustomerBite.play();\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport class CustomerTimer extends Timer {\n    public customer: Customer;\n}","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Ingredient extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Actor, Color, Engine, Sprite, Timer } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { Ingredient } from \"./ingredient\";\nimport { Item } from \"./item\";\n\nexport class IngredientSpawner extends Actor {\n    private newItemTimer:IngredientTimer;\n\n    private _ingredientName:string;\n    private _ingredientSprite:Sprite;\n\n    public setupSpawner(ingredientName:string, ingredientSprite:Sprite) {\n        this._ingredientName = ingredientName;\n        this._ingredientSprite = ingredientSprite;\n        \n        this.spawnIngredient();\n        \n        this.body.collider.on(\"collisionend\", (e) => {\n            let otherActor = e.other.body.actor;\n\n            if (otherActor instanceof Item) {\n                if (! this.newItemTimer) {\n                    this.newItemTimer = new IngredientTimer({\n                        interval: 5000, // ms\n                        repeats: false,\n                        fcn: this.spawnIngredient\n                    });\n                    this.newItemTimer.spawner = this;\n\n                    this.scene.add(this.newItemTimer);\n                }\n\n                this.newItemTimer.reset();\n            }\n        });\n    }\n\n    public spawnIngredient () {\n        \n        if (this instanceof IngredientTimer) {\n            let spawner = this.spawner;\n            let obstructions = spawner.scene.actors.filter(x => x.contains(spawner.pos.x, spawner.pos.y) && x instanceof Item);\n\n            if (obstructions.length === 0) {\n                LevelBuildingHelper.createIngredientAtPosition(this.spawner.scene, \n                                                           this.spawner._ingredientSprite.clone(), \n                                                           this.spawner._ingredientName, \n                                                           this.spawner.pos.x, \n                                                           this.spawner.pos.y)\n                Resources.CookPop1.play(0.75);\n            }\n        } else {\n            LevelBuildingHelper.createIngredientAtPosition(this.scene, \n                                                           this._ingredientSprite.clone(), \n                                                           this._ingredientName, \n                                                           this.pos.x, \n                                                           this.pos.y)\n        }\n    }\n}\n\nexport class IngredientTimer extends Timer {\n    public spawner:IngredientSpawner;\n}","import { Collider, CollisionStartEvent, CollisionType, Engine, Shape, Vector, Animation, isCollider, resetObsoleteCounter, Sound, Sprite, vec } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { ItemIconSprites } from \"../../util/spritesheet_wrappers/itemIconSprites\";\nimport { Customer } from \"../characters/customer\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Item } from \"./item\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { AnimationHelper } from \"excalibur-bootstraps\";\n\nexport class Pan extends Item {\n    private cookTimeMultiplier: number = 3000; // ms per ingredient\n    private isOnStove: boolean = false;\n\n    public ingredients: string[] = [];\n    public attackAnimation: Animation;\n    public isAttacking: boolean = false;\n\n    public cookTime: number = 0;\n    public isDone: boolean = false;\n    public isBurned: boolean = false;\n\n    private cookingSounds:Sound[] = [Resources.CookPop1, Resources.CookPop2, Resources.CookPop3];\n    private soundDelay:number = 0;\n    private burnTimeMultiplier: number = 3;\n\n    public onPreDraw (ctx: CanvasRenderingContext2D, _delta: number) {\n        if (this.cookTime === 0) {\n            for (let i = 0; i < this.ingredients.length; i++) {\n                let ispr = ItemIconSprites[this.ingredients[i]] as Sprite;\n                ispr.scale = vec(1.5, 1.5);\n                ispr.draw(ctx,i * 16, -9)\n            }\n        } else if (!this.isDone && this.isOnStove) {\n            // Draw progress bar\n            AnimationHelper.drawLine(ctx, vec(0,-6), vec(this.width, -6), 6, '#666666');\n\n            let pDone = this.cookTime / (this.ingredients.length * this.cookTimeMultiplier);\n            let start = vec(0, -6);\n            let end = vec(pDone * this.width, -6);\n            AnimationHelper.drawLine(ctx, start, end, 6, '#00ff00')\n        } else if (!this.isBurned && this.isOnStove) {\n            // Draw progress bar\n            AnimationHelper.drawLine(ctx, vec(0,-6), vec(this.width, -6), 6, '#00ff00');\n\n            let doneBase = this.ingredients.length * this.cookTimeMultiplier\n            let pBurn = (this.cookTime - doneBase) / ((this.ingredients.length * this.cookTimeMultiplier * this.burnTimeMultiplier) - doneBase);\n\n            let start = vec(0, -6);\n            let end = vec(pBurn * this.width, -6);\n            AnimationHelper.drawLine(ctx, start, end, 6, '#ff0000')\n        }\n    }\n\n    public onInitialize(engine: Engine) {\n        super.onInitialize(engine);\n\n        this.body.collider.type = CollisionType.Passive;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight, LevelBuildingHelper.tileHeight);\n\n        // TODO refactor this to use onPreUpdate or something with a delta\n        // Currently it takes longer to cook stuff on slower machines\n        this.body.collider.on(\"precollision\", (e: CollisionStartEvent<Collider>) => {\n            let otherActor = e.other.body.actor;\n\n            if (this.isAttacking) {\n                /////////////////////////////////\n                ////////// Plate Meal ///////////\n                /////////////////////////////////\n                if ( this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.ServingPlate &&\n                        this.isDone &&\n                        !otherActor.isOccupied ) {\n                    let product:Recipe;\n\n                    for (let r in Recipes) {\n                        if (Recipes[r].ingredientsEqual(this.ingredients)) {\n                            product = Recipes[r];\n                        }\n                    }\n\n                    if (product && !this.isBurned) {\n                        LevelBuildingHelper.createMeal(this.scene, product.resultSprite, product.resultName, otherActor.pos);\n                    } else {\n                        LevelBuildingHelper.createMeal(this.scene, ItemIconSprites.Trash, \"inedible mush\", otherActor.pos);\n                    }\n\n                    this.reset();\n                }\n\n                if (this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.Trashcan) {\n                    this.reset();\n                }\n            }\n            /////////////////////////////////\n            ///////// Hit Customer //////////\n            /////////////////////////////////\n            if (otherActor instanceof Customer && this.isAttacking && otherActor.isAttacking) {\n                (this.scene as LevelBase).removeCustomer(otherActor);\n                Resources.Bonk1.play(0.3);\n                otherActor.kill();\n                this.reset();\n            }\n        });\n    }\n\n    private tickCook(delta: number) {\n        let stoves = this.scene.actors.filter(x => x instanceof Appliance &&\n                                                   x.applianceType === ApplianceType.Stove &&\n                                                   this.body.collider.collide(x.body.collider) &&\n                                                   this.ingredients.length > 0 &&\n                                                   this.isHeld === false);\n\n        if (stoves.length > 0) {\n            // find a free stove\n            let otherPans = this.scene.actors.filter(x => x instanceof Pan && x != this);\n            let foundStove = false;\n\n            stoves.forEach(stove => {\n                let stoveIsFree = true;\n                \n                otherPans.forEach(pan => {\n                    if (stove.contains(pan.pos.x, pan.pos.y)) {\n                        stoveIsFree = false;\n                    }\n                });\n\n                if (stoveIsFree) {\n                    this.pos = stove.pos.clone();\n                    foundStove = true;\n                }\n            });\n\n            if (!foundStove) {\n                return;\n            }\n            \n            this.isOnStove = true;\n\n            this.cookTime += delta;\n\n            if (!this.isDone && this.soundDelay <= 0) {\n                let sr = Math.floor(Math.random() * this.cookingSounds.length);\n                this.cookingSounds[sr].play(0.1);\n                this.soundDelay = 100;\n            } else if (this.soundDelay > 0) {\n                this.soundDelay -= delta\n            }\n\n            if (!this.isDone &&\n                this.cookTime > this.ingredients.length * this.cookTimeMultiplier) {\n                this.isDone = true;\n                Resources.MealDone.play();\n            }\n\n            if (this.isDone && !this.isBurned &&\n                this.cookTime > this.ingredients.length * this.cookTimeMultiplier * this.burnTimeMultiplier) {\n                this.isBurned = true;\n                Resources.MealBurned.play();\n            }\n        } else {\n            this.isOnStove = false;\n        }\n    }\n    \n    private reset() {\n        this.ingredients = [];\n        this.isBurned = false;\n        this.isDone = false;\n        this.cookTime = 0;\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        this.tickCook(delta);\n\n        // Render\n        if (!this.isAttacking) {\n            if (this.isBurned) {\n                this.setDrawing(\"burned\");\n            } else if (this.isDone) {\n                this.setDrawing(\"done\");\n            } else if (this.cookTime > 0 && this.isOnStove) {\n                this.setDrawing(\"cooking\");\n            } else if (this.ingredients.length > 0) {\n                this.setDrawing(\"filled\");\n            } else {\n                this.setDrawing(\"empty\");\n            }\n        } else {\n            if (this.attackAnimation.isDone()) {\n                this.isAttacking = false;\n            }\n        }\n    }\n\n    public attack(pos: Vector, facing: string) {\n        this.isAttacking = true;\n        this.pos = pos;\n        this.setDrawing(\"attack\");\n        Resources.SwingPan.play();\n\n        switch (facing) {\n            case \"r\":\n                this.attackAnimation.flipHorizontal = true;\n                break;\n            default:\n                this.attackAnimation.flipHorizontal = false;\n        }\n    }\n}\n","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideTileSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.InsideTilesB,\n        rows: 16,\n        columns: 16,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get CounterVerticalFull () {\n        return this.iconSheet.getSprite(16);\n    }\n\n    public static get CounterCornerBottomLeft () {\n        return this.iconSheet.getSprite(17);\n    }\n\n    public static get CounterBottomCentral () {\n        return this.iconSheet.getSprite(18);\n    }\n    \n    public static get CounterBottomCornerRight () {\n        return this.iconSheet.getSprite(19);\n    }\n \n    public static get CounterStandalone () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get CounterCornerTopLeft () {\n        return this.iconSheet.getSprite(33);\n    }\n\n    public static get CounterMiddleFull () {\n        return this.iconSheet.getSprite(34);\n    }\n\n    public static get CounterCornerTopRight () {\n        return this.iconSheet.getSprite(35);\n    }\n\n    public static get CounterFaceStandalone () {\n        return this.iconSheet.getSprite(48);\n    }\n    public static get CounterFaceLeft () {\n        return this.iconSheet.getSprite(49);\n    }\n\n    public static get CounterFaceCenter () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get CounterFaceRight () {\n        return this.iconSheet.getSprite(51);\n    }\n\n    public static get Table_V_TopSmall () {\n        return this.iconSheet.getSprite(88);\n    }\n\n    public static get Table_H_TopLeft () {\n        return this.iconSheet.getSprite(89);\n    }\n    \n    public static get Table_H_TopMid () {\n        return this.iconSheet.getSprite(90);\n    }\n\n    public static get Table_H_TopRight () {\n        return this.iconSheet.getSprite(91);\n    }\n\n    public static get Table_V_TopLarge () {\n        return this.iconSheet.getSprite(104);\n    }\n\n    public static get Table_H_BottomLeftLeg () {\n        return this.iconSheet.getSprite(105);\n    }\n\n    public static get Table_H_BottomMidNoLeg () {\n        return this.iconSheet.getSprite(106);\n    }\n\n    public static get Table_H_BottomRightLeg () {\n        return this.iconSheet.getSprite(107);\n    }\n\n    public static get Table_V_Mid () {\n        return this.iconSheet.getSprite(120);\n    }\n\n    public static get StoolTopRed () {\n        return this.iconSheet.getSprite(121);\n    }\n\n    public static get Table_V_BottomLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get Table_H_MidLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get StoolBottomRed() {\n        return this.iconSheet.getSprite(137);\n    }\n    public static get StoolTopGrey() {\n        return this.iconSheet.getSprite(153);\n    }\n    public static get StoolBottomGrey() {\n        return this.iconSheet.getSprite(169);\n    }\n\n    public static get RedStool () {\n        return this.iconSheet.getSprite(152);\n    }\n\n    public static get GreyStool () {\n        return this.iconSheet.getSprite(168);\n    }\n\n    public static get TrashCanTopLid () {\n        return this.iconSheet.getSprite(172);\n    }\n\n    public static get TrashCanTopEmpty () {\n        return this.iconSheet.getSprite(173);\n    }\n\n    public static get TrashCanTopTrash () {\n        return this.iconSheet.getSprite(174);\n    }\n\n    public static get TrashCanTopBag () {\n        return this.iconSheet.getSprite(175);\n    }\n\n    public static get TrashCanBottom () {\n        return this.iconSheet.getSprite(188);\n    }\n\n    public static get Tray () {\n        return this.iconSheet.getSprite(110);\n    }\n}","import { Actor, CollisionType, Color, Engine, Label, Scene, Shape, Sprite, SpriteSheet, TextAlign, vec, Vector } from \"excalibur\";\nimport { AnimationHelper } from \"excalibur-bootstraps\";\nimport { Game } from \"../..\";\nimport { Customer } from \"../../actors/characters/customer\";\nimport { Appliance, ApplianceType } from \"../../actors/objects/appliance\";\nimport { Ingredient } from \"../../actors/objects/ingredient\";\nimport { IngredientSpawner } from \"../../actors/objects/ingredientSpawner\";\nimport { Meal } from \"../../actors/objects/meal\";\nimport { Pan } from \"../../actors/objects/pan\";\nimport { Seat } from \"../../actors/objects/seat\";\nimport { Resources } from \"../../resources\";\nimport { InsideTileSprites } from \"../spritesheet_wrappers/insideTileSprites\";\nimport { ItemIconSprites } from \"../spritesheet_wrappers/itemIconSprites\";\n\nexport abstract class LevelBuildingHelper {\n    static tileWidth = 50;\n    static tileHeight = 50;\n\n    public static createLabelAcrossTiles (scene:Scene, text:string, xPos:number, yPos:number, width:number, color:Color):Label {\n        let label = new Label(text, xPos * this.tileWidth, yPos * this.tileHeight);\n        label.maxWidth = width * this.tileWidth;\n        label.textAlign = TextAlign.Center;\n        label.color = color;\n        label.fontSize = 20;     \n        //label.useTextShadow(true);\n        \n        scene.add(label);\n        \n        return label;\n    }\n\n    public static createWallTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number): Actor {\n        return this.createTile(scene, display, xPos, yPos, true, 1);\n    }\n\n    public static createBackgroundTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number): Actor {\n        return this.createTile(scene, display, xPos, yPos, false, -1);\n    }\n\n    public static createSeat(scene: Scene, sprite: Sprite, facing:string, xPos: number, yPos: number): Seat {\n        let s = this.createTile(scene, sprite, xPos, yPos, false, -1) as Seat;\n        s.facing = facing;\n        return s;\n    }\n\n    private static createTile(scene: Scene, \n                              display: Color|Sprite, \n                              xPos: number, yPos: number, \n                              hasCollision: boolean, \n                              z: number): Actor {\n        let a = new Actor({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (display instanceof Color) {\n            a.color = display;\n        } else {\n            let scaleX = this.tileWidth / display.width;\n            let scaleY = this.tileHeight / display.height;\n            display.scale = vec(scaleX, scaleY);\n            a.addDrawing(display);\n        }\n\n        scene.add(a);\n        a.setZIndex(z);\n\n        if (hasCollision) {\n            a.body.collider.type = CollisionType.Fixed;\n        }\n\n        return a;\n    }\n\n    public static createIngrediantSpawnerOnTile(scene: Scene, \n                                                xPos: number, \n                                                yPos: number, \n                                                ingredientName:string, \n                                                spawnerSprite?: Sprite): IngredientSpawner {\n        \n        if (Game.debugMode) {\n            console.log(\"adding spawner for: \" + ingredientName);\n        }\n        \n        let a = new IngredientSpawner({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (spawnerSprite) {\n            let scaleX = this.tileWidth / spawnerSprite.width;\n            let scaleY = this.tileHeight / spawnerSprite.height;\n            spawnerSprite.scale = vec(scaleX, scaleY);\n            a.addDrawing(spawnerSprite);\n        }\n\n        a.setupSpawner(ingredientName, ItemIconSprites[ingredientName]);\n\n        scene.add(a);\n        return a;\n    }\n\n    public static createIngredientAtPosition (scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        const itemScale = 0.75;\n        \n        let a = new Ingredient({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos, yPos)\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let spr = AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(spr);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createIngredientOnTile(scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        let xPosTile = xPos * this.tileWidth, yPosTile = yPos * this.tileHeight;\n        return this.createIngredientAtPosition (scene, sprite, name, xPosTile, yPosTile);\n    }\n\n    public static createMeal(scene: Scene, sprite:Sprite, name:string, position:Vector): Meal {\n        const itemScale = 0.8;\n        \n        let a = new Meal({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let spr = AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(spr);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createApplianceOnTile(scene: Scene, type:ApplianceType, xPos: number, yPos: number): Appliance {\n        const itemScale = 0.75;\n\n        let sprite:Sprite;\n        let a = new Appliance({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        switch (type) {\n            case ApplianceType.Stove:\n                sprite = Resources.Stove.asSprite();\n                break;\n            case ApplianceType.ServingPlate:\n                sprite = InsideTileSprites.Tray;\n                break;\n            case ApplianceType.Trashcan:\n                sprite = Resources.Trashcan.asSprite();\n                a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n                a.body.collider.type = CollisionType.Fixed;\n                break;\n            default:\n                throw new Error(\"unsupported appliance type: \" + type);\n        }\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let spr = AnimationHelper.getScaledSprite(sprite, itemScale);\n        \n        a.addDrawing(spr);\n        a.applianceType = type;\n\n        return a;\n    }\n\n    public static createPanOnTile(scene: Scene, engine:Engine, xPos: number, yPos: number): Pan {\n        const itemScale = 0.75;\n        \n        let a = new Pan({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        scene.add(a);\n        a.setZIndex(35);\n\n        let panAttackSprites = new SpriteSheet({\n            image: Resources.PanAttack,\n            rows: 1,\n            columns: 3,\n            spWidth: 18,\n            spHeight: 18\n        });\n\n        let attackAnimation = AnimationHelper.getScaledAnimation(engine, panAttackSprites, 0,3, itemScale, 150);\n        attackAnimation.loop = false;\n        a.attackAnimation = attackAnimation;\n\n        let eSpr = AnimationHelper.getScaledSprite(Resources.PanEmpty.asSprite(), itemScale);\n        let fSpr = AnimationHelper.getScaledSprite(Resources.PanFilled.asSprite(), itemScale);\n        let dSpr = AnimationHelper.getScaledSprite(Resources.PanDone.asSprite(), itemScale);\n        let bSpr = AnimationHelper.getScaledSprite(Resources.PanBurned.asSprite(), itemScale);\n        \n        let cookingSheet = new SpriteSheet({\n            image: Resources.PanCooking ,\n            rows:1,\n            columns:3,\n            spWidth:18,\n            spHeight:9\n        });\n\n        let cAnim = AnimationHelper.getScaledAnimation(engine, cookingSheet, 0,3,itemScale,50);\n\n        a.addDrawing(\"empty\", eSpr);\n        a.addDrawing(\"filled\", fSpr);\n        a.addDrawing(\"attack\", attackAnimation);\n        a.addDrawing(\"cooking\", cAnim);\n        a.addDrawing(\"burned\", bSpr);\n        a.addDrawing(\"done\", dSpr);\n        \n        return a;\n    }\n\n    public static createCustomer(scene: Scene, position:Vector): Customer {\n        let a = new Customer({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        return a;\n    }\n}","import { Actor, CollisionType, Color, Engine, Input, vec, Shape, SpriteSheet, Animation, Vector, Resource } from 'excalibur';\nimport { Game } from '../..';\nimport { Resources } from '../../resources';\nimport { DeathScreen } from '../../scenes/menu/death';\nimport { LevelBase } from '../../scenes/levels/levelBase';\nimport { Appliance, ApplianceType } from '../objects/appliance';\nimport { Ingredient } from '../objects/ingredient';\nimport { Item } from '../objects/item';\nimport { Meal } from '../objects/meal';\nimport { Pan } from '../objects/pan';\nimport { Recipes } from '../../util/config/recipes';\nimport { Humanoid } from './humanoid';\nimport { LevelBuildingHelper } from '../../util/helpers/levelBuildingHelper';\nimport {AnimationHelper, TopDownMovementHelper} from 'excalibur-bootstraps';\n\nexport class Player extends Humanoid {\n    constructor() {\n        super({\n            pos: vec(150, 150),\n            width: 25,\n            height: 25,\n            color: new Color(100, 255, 100)\n        });\n    }\n\n    protected spriteScale: number = 0.9;\n\n    private hitboxScale: number = 0.8;\n    private heldItem: Item;\n    private immunityTime = 0;\n    private boostTime = 0;\n    private movementHelper:TopDownMovementHelper;\n\n    public hp:number = 3;\n    \n    onInitialize(engine: Engine) {\n        this.sprites = Resources.PlayerSprites;\n\n        this.body.collider.type = CollisionType.Active;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight * this.hitboxScale, LevelBuildingHelper.tileHeight * this.hitboxScale);\n        \n        super.onInitialize(engine);\n\n        this.movementHelper = new TopDownMovementHelper(this, \n            this.baseSpeed, \n            [Input.Keys.W,Input.Keys.Up], \n            [Input.Keys.S, Input.Keys.Down], \n            [Input.Keys.A, Input.Keys.Left], \n            [Input.Keys.D, Input.Keys.Right]);\n    }\n\n    public hurt() {\n        if (this.immunityTime <= 0) {\n\n            this.immunityTime = 1000;\n            this.hp -= 1\n            this.actions.blink(40,10,this.immunityTime/50);\n            Resources.PlayerHurt.play();\n\n            if (this.hp <= 0) {\n                let deathScene = Game.CurrentGame.scenes[\"death\"];\n                \n                if (deathScene instanceof DeathScreen) {\n                    deathScene.lastLevel = this.scene as LevelBase;\n                    Game.CurrentGame.goToScene(\"death\");\n                }\n            }\n        }\n    }\n\n    public onPreDraw (ctx: CanvasRenderingContext2D, delta:number) {\n        if (this.boostTime > 0) {\n            AnimationHelper.drawLine(ctx, vec(0,this.height + 20), vec(this.boostTime / 500, this.height + 20), 6, '#00FFFF')\n        }\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        if (this.boostTime > 0) {\n            this.boostTime -= delta;\n        }\n\n        super.onPreUpdate(engine, delta);\n\n        if (this.immunityTime > 0) {\n            this.immunityTime -= delta;\n        }\n\n        let attacking = false;\n\n        if (this.heldItem instanceof Pan) {\n            attacking = this.heldItem.isAttacking;\n        }\n\n        if (!attacking) {\n            this.doMovement(engine);\n            // force facing here, otherwise it can get janky when a solid object blocks\n            // movement (and therefor facing).\n            this.doFacing();\n        } else {\n            this.vel = vec(0, 0);\n        }\n\n        /////////////////////////////////\n        /////// Object Interaction //////\n        /////////////////////////////////\n        if (!attacking) {\n            if (this.heldItem) {\n                this.heldItem.pos = vec(this.pos.x, this.pos.y - 40);\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Space)) {\n                if (!this.heldItem) {\n                    this.tryPickupItem();\n                } else {\n                    this.trySetDownItem();\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.E)) {\n                if (this.heldItem instanceof Pan) {\n                    this.heldItem.attack(this.getFacingTargetPos(0.7), this.facing);\n                }\n\n                if (this.heldItem instanceof Meal) {\n                    if (this.heldItem.name != \"inedible mush\") {\n                        this.boostTime += 5000 * Recipes[this.heldItem.name].ingredients.length;\n                        this.heldItem.kill();\n                        this.heldItem = null;\n                        Resources.CustomerBite.play();\n                    }\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Q)) {\n                this.examine();\n            }\n        }\n\n        /////////////////////////////////\n        ////////////// DEBUG ////////////\n        /////////////////////////////////\n        if (engine.input.keyboard.wasPressed(Input.Keys.Semicolon)) {\n            let val = prompt(\"goto level\", \"level_\");\n            if (val) {\n                engine.goToScene(val);\n            }\n        }\n\n        if (engine.input.keyboard.wasPressed(Input.Keys.L)) {\n            this.hurt();\n        }\n    }\n    \n\n    private doMovement(engine: Engine) {\n        this.vel = this.movementHelper.GetVelocityKeyboard(engine);\n    }\n\n    private trySetDownItem() {\n        let tPos = this.getFacingTargetPos(1.0);\n\n        // check for trashcan first\n        let tc = this.scene.actors.filter(x => x instanceof Appliance &&\n                                               x.applianceType === ApplianceType.Trashcan &&\n                                               x.contains(tPos.x, tPos.y));\n\n        if (tc.length > 0 && this.heldItem.canBeTrashed) {\n            this.heldItem.kill();\n            this.heldItem = null;\n            Resources.Trash.play();\n            return;\n        }\n\n        // Now check for pans\n        let pans = this.scene.actors.filter(x => x instanceof Pan &&\n                                                 x.cookTime === 0 &&\n                                                 x.contains(tPos.x, tPos.y));   \n        \n        if (this.heldItem instanceof Ingredient && pans.length > 0) {\n            let p = pans[0] as Pan;\n            \n            if (p.ingredients.length < 4) {\n                p.ingredients.push(this.heldItem.name);\n                this.heldItem.kill();\n                this.heldItem = null;\n                Resources.CookPop3.play(0.45);\n            }\n            return;\n        }\n\n        var targets = this.scene.actors.filter(x => (x instanceof Item ||\n            x instanceof Pan) &&\n            !(x === this.heldItem) &&\n            x.contains(tPos.x, tPos.y));\n\n        if (targets.length === 0) {\n            this.heldItem.pos = tPos\n            this.heldItem.isHeld = false;\n            this.heldItem = null;\n        }\n    }\n\n    private tryPickupItem() {\n        let tPos = [this.getFacingTargetPos(0.55), this.getFacingTargetPos(0.25), this.getFacingTargetPos(0.75)]\n\n        tPos.forEach(pos => {\n            var targets = this.scene.actors.filter(x => x instanceof Item &&\n                x.contains(pos.x, pos.y));\n    \n            if (targets.length > 0) {\n                this.heldItem = targets[0] as Item;\n                this.heldItem.isHeld = true;\n                return\n            } \n        });\n    }\n\n    private examine() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => (x instanceof Item || x instanceof Appliance) &&\n            x.contains(tPos.x, tPos.y));\n\n        let item = targets[0];\n\n        if (item) {\n            if (item instanceof Pan) {\n                alert(\"Pan with contents: \" + JSON.stringify(item.ingredients));\n            }\n\n            if (item instanceof Ingredient) {\n                alert(\"Ingredient: \" + item.name);\n            }\n\n            if (item instanceof Appliance) {\n                alert(\"Appliance: \" + item.applianceType);\n            }\n\n            if (item instanceof Meal) {\n                alert(\"Meal: \" + item.name);\n            }\n        }\n    }\n}\n","import { Actor, Color, Engine, Scene, Sound, Sprite, TileMap, Timer, vec } from \"excalibur\";\nimport { RecipeCard, UIHelper } from \"../../util/helpers/uiHelper\";\nimport { Player } from \"../../actors/characters/player\";\nimport { Resources } from \"../../resources\";\nimport { Customer } from \"../../actors/characters/customer\";\nimport { Seat } from \"../../actors/objects/seat\";\nimport { Recipe } from \"../../util/config/recipes\";\nimport { Game } from \"../..\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { UITimer } from \"excalibur-bootstraps\";\n\nexport abstract class LevelBase extends Scene {\n    private uiInitialized:boolean = false;\n    private uiTimer:UITimer;\n\n    protected suppressBorder:boolean = false;\n    protected musicTrack: Sound;\n    protected customerSeats:Seat[] = [];\n    protected doors:Actor[] = [];\n    public customers:Customer[] = [];\n    protected customerSpawnSpeed:number = 8000; // average number of seconds before a new customer spawns\n    protected customerFrustratedTime = 10000; // ms\n    protected customerAttackTime = 25000; // ms\n\n    protected abstract borderWidth:number;\n    protected abstract borderHeight:number;\n    \n    protected abstract availableMeals:Recipe[];\n    \n    public abstract nextLevel:string;\n    public player: Player;\n    public abstract levelName:string;\n    public isTutorial:boolean = false;\n    public customersToServe:number;\n    protected abstract initialCustomersToServe:number;\n\n    removeCustomer(customer: Customer) {\n        this.customers = this.customers.filter( x => x != customer);\n    }\n\n    public onDeactivate (oldScene:Scene, newScene:Scene) {\n        super.onDeactivate(oldScene, newScene);\n        this.musicTrack.stop();\n    }\n\n    public onInitialize(engine: Engine) {\n        this.actors.forEach(a => {\n            a.kill();\n            this.remove(a);\n        });\n\n        if (!this.uiInitialized) {\n            this.uiTimer = UIHelper.addLevelUI(this);\n            this.uiInitialized = true;\n        }\n\n        this.customersToServe = this.initialCustomersToServe;\n        \n        this.player = new Player;\n        this.add(this.player);\n\n        this.camera.strategy.lockToActor(this.player);\n        this.musicTrack = Resources.LevelLoop1;\n        this.musicTrack.loop = true;\n        \n        if (!Game.muteMusic) {\n            this.musicTrack.play(0.3);\n        }\n\n        if (!this.suppressBorder) {\n            this.createLevelBorder();\n        }\n\n        this.addBackgroundTiles();\n        this.addForegroundTiles();\n        this.addAppliances();\n        this.addPans(engine);\n        this.addItems();\n        this.addSeatsAndDoors();\n\n        for (let i = 0; i < this.availableMeals.length; i++) {\n            if (Game.debugMode) {\n                console.log(\"adding card for \" + this.availableMeals[i].resultName);\n            }\n\n            let a = new RecipeCard ();\n            a.x = 25 + i * -100;\n            a.y = 50;\n            a.xRelativeTo = \"center\"\n\n            a.setRecipe(this.availableMeals[i]);\n            this.uiTimer.uiElements.push(a);\n\n            this.add(a);\n        }\n\n        engine.backgroundColor = new Color(245, 242, 254);\n    }\n\n    public onPreUpdate(engine:Engine, delta:number) {\n        if (this.customers.length < this.customerSeats.length) {\n            if (Game.debugMode) {\n                console.log(\"Found \" + (this.customerSeats.length - this.customers.length) + \" empty seats\")\n            }\n\n            let b = this.customerSpawnSpeed / 3;\n            let v = this.customerSpawnSpeed * (4/3);\n            let i = b + Math.random() * v;\n\n            let di = Math.floor(Math.random() * this.doors.length);\n            let door = this.doors[di];\n\n            let customer = LevelBuildingHelper.createCustomer(this, door.pos);\n            let nextFreeSeat = this.customerSeats.filter(x => !this.customers.some(c => c.seat === x))[0];\n            customer.seat = nextFreeSeat;\n            customer.visible = false;\n\n            let mi = Math.floor(Math.random() * this.availableMeals.length);\n            customer.wantsMeal = this.availableMeals[mi];\n            customer.frustratedTime = this.customerFrustratedTime;\n            customer.attackTime = this.customerAttackTime;\n\n            this.customers.push(customer);\n\n            let spawnTimer = new LevelTimer({\n                interval:i,\n                repeats:false,\n                fcn:this.spawnCustomer\n            });\n\n            spawnTimer.level = this;\n            spawnTimer.customer = customer;\n\n            this.add(spawnTimer);\n\n            if (this.nextLevel != null) {\n                if (this.customersToServe <= 0) {\n                    this.musicTrack.stop();\n\n                    Resources.LevelWin.play(1).then (() => {\n                        engine.goToScene(this.nextLevel);\n                    });\n                }\n            }\n        }\n    }\n\n    protected abstract addBackgroundTiles();\n    protected abstract addForegroundTiles();\n    protected abstract addAppliances();\n    protected abstract addPans(engine:Engine);\n    protected abstract addItems();\n    protected abstract addSeatsAndDoors();\n\n    private createLevelBorder() {\n        let border = Resources.WarningSquare.asSprite();\n\n        for (let i = 0; i <= this.borderWidth; i++) {\n            LevelBuildingHelper.createWallTile(this, border, i, 0);\n            LevelBuildingHelper.createWallTile(this, border, i, this.borderHeight);\n        }\n\n        for (let i = 0; i < this.borderHeight; i++) {\n            LevelBuildingHelper.createWallTile(this, border, 0, i);\n            LevelBuildingHelper.createWallTile(this, border, this.borderWidth, i);\n        }\n    }\n\n    public toggleMusic() {\n        Game.muteMusic = !Game.muteMusic;\n        \n        if (Game.muteMusic) {\n            this.musicTrack.stop();\n        } else {\n            this.musicTrack.play();\n        }\n    }\n\n    protected spawnCustomer () {\n        let timer = (this as unknown as LevelTimer);\n\n        if (timer) {\n            timer.level.add(timer.customer);\n            timer.customer.walkToSeat();\n            timer.customer.visible = true;\n            Resources.NewCustomer.play();\n        }\n    }\n}\n\nexport class LevelTimer extends Timer {\n    public level:LevelBase;\n    public customer:Customer;\n}","import { Actor, Color, Engine, Resource, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTest extends LevelBase {\n    public nextLevel: string = this.levelName;\n    \n    protected borderWidth: number = 15;\n    protected borderHeight: number = 20;\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg];\n\n    protected customerFrustratedTime = 1000; // ms\n    protected customerAttackTime = 3000; // ms\n    protected customerSpawnSpeed = 1;\n\n    public levelName = \"level_test\";\n    protected initialCustomersToServe: number = 9001;\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n\n        // TODO something less shithouse\n        alert(\"Controls:\\nWASD - Movement\\nSpace - Pick up/put down\\nE - Swing pan\\nQ - Examine\\n\\nSwing a pan with cooked food (yellow) or burned food (red/grey) onto the brown serving tray to create a meal. Serve meals to customers.\");\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 6, 12);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 8, 12);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 10, 12);\n    }\n\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 6, 11);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 8, 11);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 10, 11);\n        \n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 7, 4);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"FlourBag\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"Banana\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"Poison\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"EggRaw\")\n    }\n\n    protected addSeatsAndDoors() {\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 10, 12));\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 8, 12));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"r\", 5, 11.5));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Bag.asSprite(), 3, 12));\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Bag.asSprite(), 14, 14));\n    }\n}\n","import { Actor, Color, Engine, Scene } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe } from \"../../util/config/recipes\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { ItemIconSprites } from \"../../util/spritesheet_wrappers/itemIconSprites\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTestRay extends LevelBase {\n    public nextLevel: string;\n    protected borderWidth: number;\n    protected borderHeight: number;\n    protected availableMeals: Recipe[];\n    public levelName = \"level_testray\";\n    protected initialCustomersToServe: number = 9001;\n    \n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n    }\n\n    protected addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopGrey, 2, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 3, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopLeft, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 2, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopRight, 3, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomLeftLeg, 1, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 2, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomRightLeg, 3, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 1, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.RedStool, 2, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 3, 10);\n        \n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopEmpty, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 4, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopLid, 10, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 10, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Poison )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n    }\n\n    protected addSeatsAndDoors(): Actor[] {\n        throw new Error(\"not implimented\");\n    }\n}","import { Actor, Engine } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level1 extends LevelBase {\n    public nextLevel: string = \"level_2\";\n\n    protected borderWidth: number = 10;\n    protected borderHeight: number = 10;\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg, Recipes.Cookie, Recipes.MonsterPie];\n    public levelName = \"level_1\";\n    protected customerFrustratedTime = 45000;\n    protected customerAttackTime = 65000;\n    protected customerSpawnSpeed = 18000;\n    \n    public initialCustomersToServe = 5;\n\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 4, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 6, 8));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 10, 9));\n    }\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 4, 8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 6, 8);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 1, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 2, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 3, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 4, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 5, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 6, 5);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceStandalone, 9, 7);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 4, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 6, 7);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 1, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 2, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 3, 4);        \n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 5, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 6, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterStandalone, 6, 3);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterStandalone, 9, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        \n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 2.5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 3.3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 6);\n        \n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 4, 1);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,1)\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,2)\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,3)\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"FlourBag\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 3, 4, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 4, 4, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 4, \"Poison\" )\n    }\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n}","import { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { Level1 } from \"./level_1\";\n\nexport class Level1a extends Level1 {\n    public levelName = \"level_1a\";\n    protected availableMeals: Recipe[] = [Recipes.BananaPie, Recipes.BananaCandy, Recipes.Cookie ];\n    protected customerFrustratedTime = 45000;\n    protected customerAttackTime = 63000;\n    protected customerSpawnSpeed = 15000;\n    public nextLevel:string = \"level_2a\";\n    \n    public initialCustomersToServe = 10;\n\n    protected addItems () {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"FlourBag\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 3, 4, \"Banana\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 4, 4, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 4, \"SyringeYellow\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 6, 3, \"WhiteGem\")\n    }\n}","import { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { Level1 } from \"./level_1\";\n\nexport class Level1b extends Level1 {\n    public levelName = \"level_1b\";\n    protected availableMeals: Recipe[] = [Recipes.Taco, Recipes.Pizza, Recipes.PepperoniPizza ];\n    protected customerSpawnSpeed = 10000;\n    public nextLevel:string = \"level_2b\";\n    protected customerFrustratedTime = 40000;\n    protected customerAttackTime = 50000;\n    public initialCustomersToServe = 12;\n\n    protected addItems () {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"FlourBag\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 3, 4, \"Meat\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 4, 4, \"GreenLeaf\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 4, \"Cheese\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 6, 3, \"RedPot\")\n    }\n}","import { Actor, Engine } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level2 extends LevelBase {\n    public nextLevel: string = \"level_3\";\n\n    protected borderWidth: number = 0;\n    protected borderHeight: number = 0;\n    protected suppressBorder:boolean = true;\n\n    protected availableMeals: Recipe[] = [Recipes.Cookie, Recipes.CrunchyCake, Recipes.IceCream, Recipes.SpecialCrunchPie];\n    public levelName = \"level_2\";\n    protected customerFrustratedTime = 45000;\n    protected customerAttackTime = 65000;\n    protected customerSpawnSpeed = 17000;\n    \n    public initialCustomersToServe = 8;\n\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 3, 8));\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 4, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 5, 8));\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 6, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 7, 8));\n        \n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 5, 10.35));\n    }\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 1, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 2, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 3, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 4, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 5, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 1);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 9, 1);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 1, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 2, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 3, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 4, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 9, 11);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 0, 11);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 10, 11);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_H_BottomLeftLeg, 3,8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 4,8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 5,8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 6,8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_H_BottomRightLeg, 7,8);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 3, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 4, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 5, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 7, 5);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopLeft, 3, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 4, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 6, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopRight, 7, 7);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerTopLeft, 0, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 1, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 2, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 3, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 4, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 5, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 6, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 7, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 8, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 9, 0);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerTopRight, 10, 0);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 0, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 10, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 0, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 1, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 2, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 3, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 4, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 5, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 6, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 7, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 8, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 9, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 10, 10);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerTopLeft, 3, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 5, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterMiddleFull, 6, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerTopRight, 7, 4);\n\n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 0, 3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 0, 4);\n\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 2, 0);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 3, 0);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 4, 0);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 5, 0);\n\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 1, 9);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 0,1);\n        LevelBuildingHelper.createPanOnTile(this,engine, 0,2);\n        LevelBuildingHelper.createPanOnTile(this,engine, 0,5);\n        LevelBuildingHelper.createPanOnTile(this,engine, 0,6);\n\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 2, \"FlourBag\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 3, \"FlourBag\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 4, \"EggRaw\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 5, \"Skull\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 6, \"YellowPot\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 7, \"WhiteGem\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 8, \"PurpleGem\" );\n    }\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n}","import { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { Level2 } from \"./level_2\";\n\nexport class Level2a extends Level2 {\n    public nextLevel: string = \"level_3a\";\n\n    protected borderWidth: number = 0;\n    protected borderHeight: number = 0;\n    protected suppressBorder:boolean = true;\n\n    protected availableMeals: Recipe[] = [Recipes.Drumstick, Recipes.FlipPhone, Recipes.Hotdog, Recipes.EnergyDrink];\n    public levelName = \"level_2a\";\n    protected customerFrustratedTime = 45000;\n    protected customerAttackTime = 60000;\n    protected customerSpawnSpeed = 14000;\n    public initialCustomersToServe = 10;\n\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 3, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 4, 8));\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 5, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 6, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 7, 8));\n        \n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 5, 10.35));\n    }\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 2, \"Poison\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 3, \"ToiletPaper\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 4, \"Drumstick\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 5, \"StormCloud\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 6, \"FloppyDisk\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 7, \"ToiletPaper\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 8, \"Meat\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 9, \"Bread\" );\n    }\n}","import { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { Level2 } from \"./level_2\";\n\nexport class Level2b extends Level2 {\n    public nextLevel: string = \"level_3b\";\n\n    protected borderWidth: number = 0;\n    protected borderHeight: number = 0;\n    protected suppressBorder:boolean = true;\n\n    protected availableMeals: Recipe[] = [Recipes.EnergyDrink, Recipes.MonsterPie, Recipes.Cookie, Recipes.FriedEgg, Recipes.BananaPie, Recipes.SpecialCrunchPie];\n    public levelName = \"level_2b\";\n    protected customerFrustratedTime = 42000;\n    protected customerAttackTime = 50000;\n    protected customerSpawnSpeed = 5000;\n    public initialCustomersToServe = 15;\n\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 3, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 4, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 5, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 6, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.GreyStool, \"u\", 7, 8));\n        \n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 5, 10.35));\n    }\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 1, \"PurpleGem\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 2, \"Poison\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 3, \"StormCloud\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 4, \"FlourBag\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 5, \"Apple\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 6, \"Banana\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 7, \"EggRaw\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 8, \"YellowPot\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 10, 9, \"WhiteGem\" );\n    }\n}","import { Actor, Color, Engine, Resource, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level3 extends LevelBase {\n    public nextLevel: string = \"level_1a\";\n    \n    protected borderWidth: number = 13;\n    protected borderHeight: number = 10;\n    protected availableMeals: Recipe[] = [Recipes.MonsterPie, Recipes.FlipPhone, Recipes.CowboyBoots];\n\n    protected customerFrustratedTime = 50000; // ms\n    protected customerAttackTime = 65000; // ms\n    protected customerSpawnSpeed = 16000;\n\n    public levelName = \"level_3\";\n    protected initialCustomersToServe: number = 10;\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n\n    protected addBackgroundTiles() {\n        // Left counter area\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 1, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 2, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 3, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 4, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 5, 5);\n        \n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceStandalone, 5, 2);\n\n        // Right counter area\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 8, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 9, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 10, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 11, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 12, 5);\n        \n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceStandalone, 8, 2);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 6, 8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 8, 8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 10, 8);\n    }\n\n    protected addForegroundTiles() {\n        // Left counter area\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 1, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerTopRight, 5, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 2, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 3, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 4, 4);\n\n        // Right counter area\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 12, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 12, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 12, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 12, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 8, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerTopLeft, 8, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 10, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 11, 4);\n\n        // Table Area\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 6, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 8, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 10, 7);\n        \n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 5, 1);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 8, 1);\n\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 4, 4);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 5, 4);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 8, 4);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 4);\n\n\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 7, 1);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 6, 1);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 3,4)\n        LevelBuildingHelper.createPanOnTile(this,engine, 10,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 1, \"Poison\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"FlourBag\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"Apple\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"FloppyDisk\" );\n        \n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 1, \"StormCloud\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 2, \"SyringeGreen\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 3, \"Meat\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 11, 4, \"Poison\" );\n    }\n\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 8, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"l\", 11, 7.5));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"r\", 5, 7.5));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 3, 10));\n    }\n}\n","import { Actor, Color, Engine, Resource, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\nimport { Level3 } from \"./level_3\";\n\nexport class Level3a extends Level3 {\n    public nextLevel: string = \"level_1b\";\n    \n    protected borderWidth: number = 13;\n    protected borderHeight: number = 10;\n    protected availableMeals: Recipe[] = [Recipes.Hotdog, Recipes.Cheesedog, Recipes.Drumstick, Recipes.Taco];\n\n    protected customerFrustratedTime = 50000; // ms\n    protected customerAttackTime = 60000; // ms\n    protected customerSpawnSpeed = 12000;\n\n    public levelName = \"level_3a\";\n    protected initialCustomersToServe: number = 10;\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 1, \"ToiletPaper\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"Meat\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"Bread\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"Cheese\" );\n        \n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 1, \"Stick\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 2, \"GreenLeaf\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 3, \"Meat\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 11, 4, \"Cheese\" );\n    }\n}\n","import { Actor, Color, Engine, Resource, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\nimport { Level3 } from \"./level_3\";\n\nexport class Level3b extends Level3 {\n    public nextLevel: string = null;\n    \n    protected borderWidth: number = 13;\n    protected borderHeight: number = 10;\n    protected availableMeals: Recipe[] = [Recipes.Pizza, Recipes.PepperoniPizza, Recipes.Burger, Recipes.Taco, Recipes.IceCream, Recipes.Cheesedog];\n\n    protected customerFrustratedTime = 50000; // ms\n    protected customerAttackTime = 60000; // ms\n    protected customerSpawnSpeed = 10000;\n\n    public levelName = \"level_3b\";\n    protected initialCustomersToServe: number = 0;\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 1, \"FlourBag\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"RedPot\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"Cheese\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"Meat\" );\n        \n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 1, \"Bread\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 2, \"GreenLeaf\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 12, 3, \"EggRaw\" );\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 11, 4, \"Meat\" );\n    }\n}\n","import { Color, Engine, Label } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { UIHelper } from \"../../util/helpers/uiHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Tutorial1 extends LevelBase {\n    public nextLevel: string = \"tutorial_2\";\n    protected borderWidth: number = 10;\n    protected borderHeight: number = 10;\n\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg, Recipes.MonsterPie];\n    public levelName: string = \"tutorial_1\";\n    public isTutorial = true;\n\n    protected initialCustomersToServe: number = 9001;\n\n    public onInitialize(engine:Engine) {\n        super.onInitialize(engine);\n\n        UIHelper.addTutorialButton(this, this.nextLevel);\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Use the space bar to\", -3, 2, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"pick up or set down items.\", -3, 2.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Ingredients will respawn\", -3, 4, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"if there is enough space.\", -3, 4.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Ingredients can be set\", -3, 7, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"down into pans.\", -3, 7.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Pans placed on ranges\", 13, 2.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"start to cook if they\", 13, 3, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"have ingredients.\", 13, 3.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"This is a serving board.\", 13, 7.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Swing a pan over it with E\", 13, 8, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"when the pan turns golden\", 13, 8.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to create a cooked meal.\", 13, 9, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Set down an ingredient or swing\", 4, 5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"a pan over the trash can \", 4, 5.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to throw away the ingredient(s).\", 4, 6, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Click the continue button\", 5, 12, 13, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to continue the tutorial.\", 5, 12.5, 4.5, Color.Magenta);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 9);\n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 2);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 4, 4);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,8)\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 4, \"Poison\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 5, \"FlourBag\" )\n    }\n    protected addSeatsAndDoors() {\n        //throw new Error(\"Method not implemented.\");\n    }\n\n}","import { Color, Engine, Label } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { Recipe, Recipes } from \"../../util/config/recipes\";\nimport { UIHelper } from \"../../util/helpers/uiHelper\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"./levelBase\";\nimport { LevelBuildingHelper } from \"../../util/helpers/levelBuildingHelper\";\nimport { InsideTileSprites } from \"../../util/spritesheet_wrappers/insideTileSprites\";\n\nexport class Tutorial2 extends LevelBase {\n    public nextLevel: string = \"level_1\";\n    protected borderWidth: number = 10;\n    protected borderHeight: number = 10;\n    \n    protected customerAttackTime:number = 120000;\n    protected customerFrustratedTime:number = 20000;\n\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg, Recipes.MonsterPie];\n    public levelName: string = \"tutorial_2\";\n    public isTutorial = true;\n\n    protected initialCustomersToServe: number = 1;\n    \n    public onInitialize(engine:Engine) {\n        super.onInitialize(engine);\n\n        UIHelper.addTutorialButton(this, this.nextLevel);\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Customers will want a\", -3, 2, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"specific meal. Make that\", -3, 2.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"meal and place it on the\", -3, 3, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"table in front of the customer.\", -3, 3.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Customers who have waited for\", -3, 4.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"a while will get frustrated,\", -3, 5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"indicated by their thought \", -3, 5.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"bubble starting to flash.\", -3, 6, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"If you wait too long to feed\", -3, 7, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"them, customers will try to eat\", -3, 7.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"you! Swing your pans at them (E)\", -3, 8, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to fend off angry customers!\", -3, 8.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Recipe cards are show on the\", 5, 2, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"top left of your UI, HP and\", 5, 2.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"remaining customers in this\", 5, 3, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"stage are in the top right.\", 5, 3.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 4, 8);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 4, 7);\n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 2);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 4, 4);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,8)\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 4, \"Poison\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 5, \"FlourBag\" )\n    }\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"r\", 3, 7.5));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 8, 10));\n    }\n\n}\n","import { Engine, Loader, DisplayMode, Color, Timer } from 'excalibur';\nimport { Player } from './actors/characters/player';\nimport { Resources } from './resources';\nimport { DeathScreen } from './scenes/menu/death';\nimport { LevelBase } from './scenes/levels/levelBase';\nimport { LevelTest } from './scenes/levels/levelTest';\nimport { LevelTestRay } from './scenes/levels/levelTestRay';\nimport { Level1 } from './scenes/levels/level_1';\nimport { Level1a } from './scenes/levels/level_1a';\nimport { Level1b } from './scenes/levels/level_1b';\nimport { Level2 } from './scenes/levels/level_2';\nimport { Level2a } from './scenes/levels/level_2a';\nimport { Level2b } from './scenes/levels/level_2b';\nimport { Level3 } from './scenes/levels/level_3';\nimport { Level3a } from './scenes/levels/level_3a';\nimport { Level3b } from './scenes/levels/level_3b';\nimport { Tutorial1 } from './scenes/levels/tutorial_1';\nimport { Tutorial2 } from './scenes/levels/tutorial_2';\n\n/**\n * Managed game class\n */\nexport class Game extends Engine {\n    public static CurrentGame:Game;\n    public static muteMusic:boolean = false;\n    public static debugMode = false;\n\n    constructor() {\n        super({ displayMode: DisplayMode.FullScreen });\n        Game.CurrentGame = this;\n    }\n\n    public start() {\n        if (window.location.host.startsWith(\"localhost\")) {\n            Game.debugMode = true;\n        }\n\n        this.addLevel(new LevelTest(this));\n        this.addLevel(new Level1(this));\n        this.addLevel(new LevelTestRay(this));\n        this.addLevel(new Tutorial1(this));\n        this.addLevel(new Tutorial2(this));\n        this.addLevel(new Level1a(this));\n        this.addLevel(new Level1b(this));\n        this.addLevel(new Level2(this));\n        this.addLevel(new Level2a(this));\n        this.addLevel(new Level2b(this));\n        this.addLevel(new Level3(this));\n        this.addLevel(new Level3a(this));\n        this.addLevel(new Level3b(this));\n\n        game.add('death', new DeathScreen(this));\n\n        // Automatically load all default resources\n        const loader = new Loader(Object.values(Resources));\n\n        // TODO add custom loader screen \n        loader.suppressPlayButton = false;\n\n        return super.start(loader);\n    }\n\n    private addLevel(level: LevelBase) {\n        game.add(level.levelName, level);\n    }\n}\n\nconst game = new Game();\n\ngame.start().then(() => {\n    game.goToScene('tutorial_1');\n});\n\ndocument.oncontextmenu = () => {\n    return false;\n};\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [657], () => (__webpack_require__(342)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}