{"version":3,"sources":["webpack://excalibur-webpack/webpack/runtime/chunk loaded","webpack://excalibur-webpack/./src/actors/objects/appliance.ts","webpack://excalibur-webpack/./src/resources.ts","webpack://excalibur-webpack/./src/actors/objects/insideFloorWallSprites.ts","webpack://excalibur-webpack/./src/actors/objects/insideTileSprites.ts","webpack://excalibur-webpack/./src/actors/objects/itemIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/animationHelper.ts","webpack://excalibur-webpack/./src/actors/characters/humanoid.ts","webpack://excalibur-webpack/./src/actors/characters/customer.ts","webpack://excalibur-webpack/./src/actors/objects/item.ts","webpack://excalibur-webpack/./src/actors/objects/ingredient.ts","webpack://excalibur-webpack/./src/actors/objects/ingredientSpawner.ts","webpack://excalibur-webpack/./src/actors/objects/meal.ts","webpack://excalibur-webpack/./src/actors/objects/recipes.ts","webpack://excalibur-webpack/./src/actors/objects/pan.ts","webpack://excalibur-webpack/./src/actors/objects/levelBuildingHelper.ts","webpack://excalibur-webpack/./src/actors/objects/balloonIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/uiHelper.ts","webpack://excalibur-webpack/./src/actors/characters/player.ts","webpack://excalibur-webpack/./src/scenes/levels/levelBase.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTest.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTestRay.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/global","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/publicPath","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"names":["deferred","ApplianceType","levelLoop1","Resources","Bag","Texture","bag","ItemIconSheet","PlayerSprites","LevelLoop1","Sound","BalloonIconSheet","PanAttack","PanEmpty","PanFilled","PanCooking","PanDone","PanBurned","InsideTilesB","InsideFloorsWalls","Stove","stove","Trashcan","trashcan","Customer1","Actor","this","sheet","getSprite","SpriteSheet","image","rows","columns","spWidth","spHeight","iconSheet","getScaledAnimation","engine","spritesheet","startIndex","endIndex","scaleFactor","speed","a","getAnimationBetween","scaleX","LevelBuildingHelper","tileHeight","width","scaleY","height","scale","vec","getScaledSprite","sprite","spriteScale","baseSpeed","onInitialize","sprites","setZIndex","addDrawing","AnimationHelper","onPreUpdate","delta","doFacing","vel","x","y","facing","setDrawing","walkToTile","target","actions","moveTo","Humanoid","isHeld","canBeTrashed","Item","setupSpawner","ingredientName","ingredientSprite","_ingredientName","_ingredientSprite","spawnIngredient","body","collider","on","e","otherActor","other","actor","Ingredient","name","newItemTimer","IngredientTimer","interval","repeats","fcn","spawner","scene","add","reset","createIngredientAtPosition","clone","pos","Timer","Recipes","MonsterPie","ingredients","resultName","resultSprite","ingredientsEqual","ingredientCheck","Array","isArray","length","arr1","concat","sort","arr2","i","ItemIconSprites","PieRed","cookTimeMultiplier","isAttacking","cookTime","isDone","isBurned","type","CollisionType","shape","Shape","push","kill","Appliance","applianceType","ServingPlate","product","r","createMeal","Trash","Customer","attackAnimation","attack","flipHorizontal","createWallTile","display","xPos","yPos","createTile","createBackgroundTile","hasCollision","z","tileWidth","Color","color","createIngrediantSpawnerOnTile","spawnerSprite","IngredientSpawner","itemScale","createIngredientOnTile","xPosTile","yPosTile","position","Meal","createApplianceOnTile","asSprite","InsideTileSprites","Tray","Error","createPanOnTile","Pan","panAttackSprites","loop","eSpr","fSpr","dSpr","bSpr","cookingSheet","cAnim","createCustomer","balloonSheet","createUIIcon","texture","se","ScreenElement","iconWidth","iconHeight","scaleSprite","s","createUIToggleButton","spriteOn","spriteOff","addLevelUI","musicToggle","BalloonIconSprites","MusicBalloon","MusicBalloonOff","event","toggleMusic","muteMusic","hp1","Heart","hp2","hp3","hitboxScale","attacking","heldItem","doMovement","input","keyboard","wasPressed","Input","trySetDownItem","tryPickupItem","getFacingTargetPos","examine","val","prompt","goToScene","velX","velY","vecMag","Math","sqrt","abs","adjustedVelY","adjustedVelX","tilePercent","xOffset","yOffset","tPos","actors","filter","contains","targets","item","alert","JSON","stringify","grid","UIHelper","player","Player","camera","strategy","lockToActor","musicTrack","play","addBackgroundTiles","addForegroundTiles","addAppliances","addPans","addItems","stop","Scene","baseTile","InsideFloorWallSprites","BlueTilePattern","CounterFaceLeft","CounterFaceCenter","CounterFaceRight","wallColor","CounterVerticalFull","CounterCornerBottomLeft","CounterBottomCornerRight","CounterBottomCentral","Apple","FlourBag","Mayo","Posion","Skull","c","repeatForever","wantsMeal","LevelBase","StoolTopRed","StoolTopGrey","Table_H_TopLeft","Table_H_TopMid","Table_H_TopRight","Table_H_BottomLeftLeg","Table_H_BottomMidNoLeg","Table_H_BottomRightLeg","GreyStool","RedStool","TrashCanTopEmpty","TrashCanBottom","TrashCanTopLid","game","displayMode","DisplayMode","start","LevelTest","Level1","LevelTestRay","loader","Loader","Object","values","suppressPlayButton","Engine","backgroundColor","then","document","oncontextmenu","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","g","globalThis","Function","window","o","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","replace","p","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"mappings":"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","file":"main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Actor } from \"excalibur\";\n\nexport class Appliance extends Actor {\n    public applianceType:ApplianceType;\n}\n\nexport enum ApplianceType {\n    Stove,\n    ServingPlate,\n    Trashcan\n}","import { Sound, SpriteSheet, Texture } from 'excalibur';\nimport bag from './images/bag.png';\nimport itemIcons from './images/item_icons.png';\nimport balloonIcons from './images/balloon_1.png';\nimport playerSprites from './images/player_sprites.png';\nimport panAttack from './images/pan_attack.png';\nimport panEmpty from './images/pan_empty.png';\nimport panFilled from './images/pan_filled.png';\nimport panCooking from './images/pan_cooking.png';\nimport panDone from './images/pan_done.png';\nimport panBurned from './images/pan_burned.png';\nimport insideTilesB from './images/tileB_inside4.png';\nimport insideFloorsWalls from './images/tileA5_inside.png';\nimport stove from './images/stove.png';\nimport trashcan from './images/trashcan.png';\nimport customer1 from './images/customer_1.png';\n\nconst levelLoop1 = require('./audio/level_loop1.wav');\n/**\n * Default global resource dictionary. This gets loaded immediately\n * and holds available assets for the game.\n */\n\nconst Resources = {\n    Bag: new Texture(bag),\n    ItemIconSheet: new Texture(itemIcons),\n    PlayerSprites: new Texture(playerSprites),\n    LevelLoop1: new Sound(levelLoop1),\n    BalloonIconSheet: new Texture(balloonIcons),\n    PanAttack: new Texture(panAttack),\n    PanEmpty: new Texture(panEmpty),\n    PanFilled: new Texture(panFilled),\n    PanCooking: new Texture(panCooking),\n    PanDone: new Texture(panDone),\n    PanBurned: new Texture(panBurned),\n    InsideTilesB: new Texture(insideTilesB),\n    InsideFloorsWalls: new Texture(insideFloorsWalls),\n    Stove: new Texture(stove),\n    Trashcan: new Texture(trashcan),\n    Customer1: new Texture(customer1)\n}\n\nexport { Resources }\n","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideFloorWallSprites {\n    private static sheet = new SpriteSheet({\n        image: Resources.InsideFloorsWalls,\n        rows: 16,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get BlueTilePattern () {\n        return this.sheet.getSprite(21);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideTileSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.InsideTilesB,\n        rows: 16,\n        columns: 16,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get CounterVerticalFull () {\n        return this.iconSheet.getSprite(16);\n    }\n\n    public static get CounterCornerBottomLeft () {\n        return this.iconSheet.getSprite(17);\n    }\n\n    public static get CounterBottomCentral () {\n        return this.iconSheet.getSprite(18);\n    }\n    \n    public static get CounterBottomCornerRight () {\n        return this.iconSheet.getSprite(19);\n    }\n \n    public static get CounterFaceLeft () {\n        return this.iconSheet.getSprite(49);\n    }\n\n    public static get CounterFaceCenter () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get CounterFaceRight () {\n        return this.iconSheet.getSprite(51);\n    }\n\n    public static get Table_V_TopSmall () {\n        return this.iconSheet.getSprite(88);\n    }\n\n    public static get Table_H_TopLeft () {\n        return this.iconSheet.getSprite(89);\n    }\n    \n    public static get Table_H_TopMid () {\n        return this.iconSheet.getSprite(90);\n    }\n\n    public static get Table_H_TopRight () {\n        return this.iconSheet.getSprite(91);\n    }\n\n    public static get Table_V_TopLarge () {\n        return this.iconSheet.getSprite(104);\n    }\n\n    public static get Table_H_BottomLeftLeg () {\n        return this.iconSheet.getSprite(105);\n    }\n\n    public static get Table_H_BottomMidNoLeg () {\n        return this.iconSheet.getSprite(106);\n    }\n\n    public static get Table_H_BottomRightLeg () {\n        return this.iconSheet.getSprite(107);\n    }\n\n    public static get Table_V_Mid () {\n        return this.iconSheet.getSprite(120);\n    }\n\n    public static get StoolTopRed () {\n        return this.iconSheet.getSprite(121);\n    }\n\n    public static get Table_V_BottomLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get Table_H_MidLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get StoolBottomRed() {\n        return this.iconSheet.getSprite(137);\n    }\n    public static get StoolTopGrey() {\n        return this.iconSheet.getSprite(153);\n    }\n    public static get StoolBottomGrey() {\n        return this.iconSheet.getSprite(169);\n    }\n\n    public static get RedStool () {\n        return this.iconSheet.getSprite(152);\n    }\n\n    public static get GreyStool () {\n        return this.iconSheet.getSprite(168);\n    }\n\n    public static get TrashCanTopLid () {\n        return this.iconSheet.getSprite(172);\n    }\n\n    public static get TrashCanTopEmpty () {\n        return this.iconSheet.getSprite(173);\n    }\n\n    public static get TrashCanTopTrash () {\n        return this.iconSheet.getSprite(174);\n    }\n\n    public static get TrashCanTopBag () {\n        return this.iconSheet.getSprite(175);\n    }\n\n    public static get TrashCanBottom () {\n        return this.iconSheet.getSprite(188);\n    }\n\n    public static get Tray () {\n        return this.iconSheet.getSprite(110);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class ItemIconSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.ItemIconSheet,\n        rows: 11,\n        columns: 16,\n        spWidth: 12,\n        spHeight: 12\n    });\n    \n    public static get Heart () {\n        return this.iconSheet.getSprite(1);\n    }\n\n    public static get Skull () {\n        return this.iconSheet.getSprite(6);\n    }\n\n    public static get FlourBag () {\n        return this.iconSheet.getSprite(9);\n    }\n\n    public static get RedGem () {\n        return this.iconSheet.getSprite(25);\n    }\n\n    public static get BlueGem () {\n        return this.iconSheet.getSprite(26);\n    }\n\n    public static get YellowGem () {\n        return this.iconSheet.getSprite(27);\n    }\n\n    public static get PurpleGem () {\n        return this.iconSheet.getSprite(28);\n    }\n\n    public static get GreenGem () {\n        return this.iconSheet.getSprite(29);\n    }\n\n    public static get WhiteGem () {\n        return this.iconSheet.getSprite(30);\n    }\n\n    public static get BlackGem () {\n        return this.iconSheet.getSprite(31);\n    }\n\n    public static get GreenLeaf () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get RedLeaf () {\n        return this.iconSheet.getSprite(33);\n    }\n\n    public static get RedPot () {\n        return this.iconSheet.getSprite(34);\n    }\n\n    public static get BluePot () {\n        return this.iconSheet.getSprite(35);\n    }\n\n    public static get YellowPot () {\n        return this.iconSheet.getSprite(36);\n    }\n    \n    public static get GreenPot () {\n        return this.iconSheet.getSprite(37);\n    }\n    \n    public static get Posion () {\n        return this.iconSheet.getSprite(39);\n    }\n    \n    public static get Apple () {\n        return this.iconSheet.getSprite(40);\n    }\n    \n    public static get Banana () {\n        return this.iconSheet.getSprite(42);\n    }\n\n    public static get Bread () {\n        return this.iconSheet.getSprite(44);\n    }\n    \n    public static get Cheese () {\n        return this.iconSheet.getSprite(45);\n    }\n    \n    public static get Drumstick () {\n        return this.iconSheet.getSprite(46);\n    }\n    \n    public static get Cookie () {\n        return this.iconSheet.getSprite(47);\n    }\n    \n    public static get Burger () {\n        return this.iconSheet.getSprite(48);\n    }\n    \n    public static get Fries () {\n        return this.iconSheet.getSprite(49);\n    }\n    \n    public static get Hotdog () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get PizzaPlain () {\n        return this.iconSheet.getSprite(52);\n    }\n    \n    public static get PizzaToppings () {\n        return this.iconSheet.getSprite(53);\n    }\n    \n    public static get Meat () {\n        return this.iconSheet.getSprite(54);\n    }\n    \n    public static get EggRaw () {\n        return this.iconSheet.getSprite(55);\n    }\n    \n    public static get EggCooked () {\n        return this.iconSheet.getSprite(56);\n    }\n\n    public static get Taco () {\n        return this.iconSheet.getSprite(57);\n    }\n    \n    public static get Burrito () {\n        return this.iconSheet.getSprite(58);\n    }\n\n    public static get Ketchup () {\n        return this.iconSheet.getSprite(61);\n    }\n\n    public static get Mayo () {\n        return this.iconSheet.getSprite(62);\n    }\n\n    public static get Relish () {\n        return this.iconSheet.getSprite(63);\n    }\n\n    public static get PieYellow () {\n        return this.iconSheet.getSprite(71);\n    }\n\n    public static get PieRed () {\n        return this.iconSheet.getSprite(72);\n    }\n    \n    public static get PiePurple () {\n        return this.iconSheet.getSprite(73);\n    }\n    \n    public static get Cake () {\n        return this.iconSheet.getSprite(74);\n    }\n\n    public static get IceCreamCone () {\n        return this.iconSheet.getSprite(75);\n    }\n\n    public static get FreezePopPink () {\n        return this.iconSheet.getSprite(76);\n    }\n\n    public static get FreezePopBlue () {\n        return this.iconSheet.getSprite(77);\n    }\n\n    public static get CandyRed () {\n        return this.iconSheet.getSprite(78);\n    }\n\n    public static get CandyYellow () {\n        return this.iconSheet.getSprite(79);\n    }\n\n    public static get Trash () {\n        return this.iconSheet.getSprite(109);\n    }\n    \n\n}","import { Engine, Sprite, SpriteSheet, vec, Animation } from \"excalibur\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport abstract class AnimationHelper {\n    public static getScaledAnimation (engine:Engine, spritesheet:SpriteSheet, startIndex:number, endIndex:number, scaleFactor:number = 1, speed:number = 100): Animation {\n        let a:Animation = spritesheet.getAnimationBetween(engine, startIndex, endIndex, speed);\n        \n        let scaleX = LevelBuildingHelper.tileHeight / a.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / a.height * scaleFactor;\n        a.scale = vec(scaleX, scaleY);\n\n        return a;\n    }\n\n    public static getScaledSprite (sprite:Sprite, scaleFactor:number = 1): Sprite {\n        let scaleX = LevelBuildingHelper.tileHeight / sprite.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / sprite.height * scaleFactor;\n        sprite.scale = vec(scaleX, scaleY);\n\n        return sprite;\n    }\n}","import { Actor, Engine, SpriteSheet, Texture } from \"excalibur\";\nimport { AnimationHelper } from \"../objects/animationHelper\";\n\nexport abstract class Humanoid extends Actor {\n    protected sprites: Texture;\n    protected spriteScale:number = 0.9;\n    protected facing:string;\n    protected baseSpeed: number = 200;\n\n    public onInitialize (engine:Engine) {\n        let sprites = new SpriteSheet({\n            image: this.sprites,\n            rows: 4,\n            columns: 3,\n            spWidth: this.sprites.width / 3,\n            spHeight: this.sprites.height / 4\n        });\n\n        this.setZIndex(1000);\n\n        this.addDrawing(\"standDown\", AnimationHelper.getScaledSprite(sprites.getSprite(1), this.spriteScale));\n        this.addDrawing(\"standLeft\", AnimationHelper.getScaledSprite(sprites.getSprite(4), this.spriteScale));\n        this.addDrawing(\"standRight\", AnimationHelper.getScaledSprite(sprites.getSprite(7), this.spriteScale));\n        this.addDrawing(\"standUp\", AnimationHelper.getScaledSprite(sprites.getSprite(10), this.spriteScale));\n\n        this.addDrawing(\"walkDown\", AnimationHelper.getScaledAnimation(engine, sprites, 0, 3, this.spriteScale));\n        this.addDrawing(\"walkLeft\", AnimationHelper.getScaledAnimation(engine, sprites, 3, 6, this.spriteScale));\n        this.addDrawing(\"walkRight\", AnimationHelper.getScaledAnimation(engine, sprites, 6, 9, this.spriteScale));\n        this.addDrawing(\"walkUp\", AnimationHelper.getScaledAnimation(engine, sprites, 9, 11, this.spriteScale));\n    }\n\n    public onPreUpdate (engine:Engine, delta:number) {\n        /////////////////////////////////\n        /////////// Animation ///////////\n        /////////////////////////////////\n        this.doFacing();\n        \n        if (this.vel.x === 0 && this.vel.y === 0) {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"standLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"standRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"standUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"standDown\");\n                    break;\n            }\n        } else {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"walkLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"walkRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"walkUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"walkDown\");\n                    break;\n            }\n        }\n    }\n\n    protected doFacing() {\n        if (this.vel.y > 0) {\n            this.facing = \"d\"\n        } else if (this.vel.x < 0) {\n            this.facing = \"l\";\n        } else if (this.vel.x > 0) {\n            this.facing = \"r\";\n        } else if (this.vel.y < 0) {\n            this.facing = \"u\";\n        }\n    }\n}","import { ActionContext, Engine, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { Humanoid } from \"./humanoid\";\n\nexport class Customer extends Humanoid {\n    private speed: number = 200;\n\n    public wantsMeal: string;\n    public frustratedTime: number;\n    public attackTime: number;\n\n    public onInitialize(engine: Engine) {\n        this.sprites = Resources.Customer1;\n        super.onInitialize(engine);\n    }\n\n    public walkToTile(target: Vector): ActionContext {\n        return this.actions.moveTo(target.x, target.y, this.speed);        \n    }\n}","import { Actor, Engine } from \"excalibur\";\n\nexport abstract class Item extends Actor {\n    public isHeld: boolean = false;\n    public canBeTrashed:boolean = false;\n}\n","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Ingredient extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Actor, Color, Engine, Sprite, Timer } from \"excalibur\";\nimport { Ingredient } from \"./ingredient\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport class IngredientSpawner extends Actor {\n    private newItemTimer:IngredientTimer;\n\n    private _ingredientName:string;\n    private _ingredientSprite:Sprite;\n\n    public setupSpawner(ingredientName:string, ingredientSprite:Sprite) {\n        this._ingredientName = ingredientName;\n        this._ingredientSprite = ingredientSprite;\n        \n        this.spawnIngredient();\n        \n        this.body.collider.on(\"collisionend\", (e) => {\n            let otherActor = e.other.body.actor;\n\n            if (otherActor instanceof Ingredient && otherActor.name === this._ingredientName) {\n                if (! this.newItemTimer) {\n                    this.newItemTimer = new IngredientTimer({\n                        interval: 5000, // ms\n                        repeats: false,\n                        fcn: this.spawnIngredient\n                    });\n                    this.newItemTimer.spawner = this;\n\n                    this.scene.add(this.newItemTimer);\n                }\n\n                this.newItemTimer.reset();\n            }\n        });\n    }\n\n    public spawnIngredient () {\n        if (this instanceof IngredientTimer) {\n            LevelBuildingHelper.createIngredientAtPosition(this.spawner.scene, \n                                                           this.spawner._ingredientSprite.clone(), \n                                                           this.spawner._ingredientName, \n                                                           this.spawner.pos.x, \n                                                           this.spawner.pos.y)\n        } else {\n            LevelBuildingHelper.createIngredientAtPosition(this.scene, \n                                                           this._ingredientSprite.clone(), \n                                                           this._ingredientName, \n                                                           this.pos.x, \n                                                           this.pos.y)\n        }\n    }\n}\n\nexport class IngredientTimer extends Timer {\n    public spawner:IngredientSpawner;\n}","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Meal extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Sprite } from \"excalibur\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport class Recipe {\n    public ingredients:string[];\n    public resultName:string;\n    public resultSprite:Sprite;\n\n    constructor (ingredients:string[], resultName:string, resultSprite:Sprite) {\n        this.ingredients = ingredients;\n        this.resultSprite = resultSprite;\n        this.resultName = resultName;\n    }\n\n    public ingredientsEqual(ingredientCheck:string[]) {\n        if (\n          !Array.isArray(this.ingredients)\n          || !Array.isArray(ingredientCheck)\n          || this.ingredients.length !== ingredientCheck.length\n          ) {\n            return false;\n          }\n        \n        // .concat() to not mutate arguments\n        const arr1 = this.ingredients.concat().sort();\n        const arr2 = ingredientCheck.concat().sort();\n        \n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n             }\n        }\n        \n        return true;\n    }\n}\n\nconst Recipes = {\n    MonsterPie: new Recipe ([\"poison\", \"flour\", \"apple\" ],\"monsterPie\",ItemIconSprites.PieRed)\n}\n\nexport {Recipes}","import { Collider, CollisionStartEvent, CollisionType, Engine, Shape, Vector, Animation, isCollider, resetObsoleteCounter } from \"excalibur\";\nimport { Customer } from \"../characters/customer\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Ingredient } from \"./ingredient\";\nimport { Item } from \"./item\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\nimport { Recipe, Recipes } from \"./recipes\";\n\nexport class Pan extends Item {\n    private cookTimeMultiplier: number = 1000;\n    public ingredients: string[] = [];\n    public attackAnimation: Animation;\n    public isAttacking: boolean = false;\n\n    private cookTime: number = 0;\n    private isDone: boolean = false;\n    private isBurned: boolean = false;\n\n    public onInitialize(engine: Engine) {\n        super.onInitialize(engine);\n\n        this.body.collider.type = CollisionType.Passive;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight, LevelBuildingHelper.tileHeight);\n\n        this.body.collider.on(\"precollision\", (e: CollisionStartEvent<Collider>) => {\n            let otherActor = e.other.body.actor;\n            \n            if (this.cookTime === 0 && otherActor instanceof Ingredient) {\n                if (!otherActor.isHeld && !this.isHeld) {\n                    this.ingredients.push(otherActor.name); // slice because byref strings are sadness\n                    otherActor.kill();\n                }\n            }\n\n            if (otherActor instanceof Appliance &&\n                otherActor.applianceType === ApplianceType.Stove &&\n                this.ingredients.length > 0 &&\n                this.isHeld === false) {\n\n                this.cookTime++;\n\n                if (!this.isDone &&\n                    this.cookTime > this.ingredients.length * this.cookTimeMultiplier) {\n                    this.isDone = true;\n                }\n\n                if (this.isDone && !this.isBurned &&\n                    this.cookTime > this.ingredients.length * this.cookTimeMultiplier * 3) {\n                    this.isBurned = true;\n                }\n            }\n\n            if (this.isAttacking) {\n                /////////////////////////////////\n                ////////// Plate Meal ///////////\n                /////////////////////////////////\n                if ( this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.ServingPlate &&\n                        this.isDone ) {\n                    let product:Recipe;\n\n                    for (let r in Recipes) {\n                        if (Recipes[r].ingredientsEqual(this.ingredients)) {\n                            product = Recipes[r];\n                        }\n                    }\n\n                    if (product && !this.isBurned) {\n                        LevelBuildingHelper.createMeal(this.scene, product.resultSprite, product.resultName, otherActor.pos);\n                    } else {\n                        LevelBuildingHelper.createMeal(this.scene, ItemIconSprites.Trash, \"inedible mush\", otherActor.pos);\n                    }\n\n                    this.reset();\n                }\n            }\n            /////////////////////////////////\n            ///////// Hit Customer //////////\n            /////////////////////////////////\n            if (otherActor instanceof Customer && this.isAttacking) {\n                otherActor.kill();\n                this.reset();\n            }\n        });\n    }\n    \n    private reset() {\n        this.ingredients = [];\n        this.isBurned = false;\n        this.isDone = false;\n        this.cookTime = 0;\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        // Render\n        if (!this.isAttacking) {\n            if (this.isBurned) {\n                this.setDrawing(\"burned\");\n            } else if (this.isDone) {\n                this.setDrawing(\"done\");\n            } else if (this.cookTime > 0) {\n                this.setDrawing(\"cooking\");\n            } else if (this.ingredients.length > 0) {\n                this.setDrawing(\"filled\");\n            } else {\n                this.setDrawing(\"empty\");\n            }\n        } else {\n            if (this.attackAnimation.isDone()) {\n                this.isAttacking = false;\n            }\n        }\n    }\n\n    public attack(pos: Vector, facing: string) {\n        this.isAttacking = true;\n        this.pos = pos;\n        this.setDrawing(\"attack\");\n\n        switch (facing) {\n            case \"r\":\n                this.attackAnimation.flipHorizontal = true;\n                break;\n            default:\n                this.attackAnimation.flipHorizontal = false;\n        }\n    }\n}\n","import { Actor, Body, Collider, CollisionType, Color, Engine, Scene, ScreenElement, Shape, Sprite, SpriteSheet, Texture, vec, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { AnimationHelper } from \"./animationHelper\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Customer } from \"../characters/customer\";\nimport { Ingredient } from \"./ingredient\";\nimport { IngredientSpawner } from \"./ingredientSpawner\";\nimport { InsideTileSprites } from \"./insideTileSprites\";\nimport { Item } from \"./item\";\nimport { Meal } from \"./meal\";\nimport { Pan } from \"./pan\";\n\nexport abstract class LevelBuildingHelper {\n    static tileWidth = 50;\n    static tileHeight = 50;\n\n\n    public static createWallTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number) {\n        this.createTile(scene, display, xPos, yPos, true, 1);\n    }\n\n    public static createBackgroundTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number) {\n        this.createTile(scene, display, xPos, yPos, false, -1);\n    }\n\n    private static createTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number, hasCollision: boolean, z: number) {\n        let a = new Actor({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (display instanceof Color) {\n            a.color = display;\n        } else {\n            let scaleX = this.tileWidth / display.width;\n            let scaleY = this.tileHeight / display.height;\n            display.scale = vec(scaleX, scaleY);\n            a.addDrawing(display);\n        }\n\n        scene.add(a);\n        a.setZIndex(z);\n\n        if (hasCollision) {\n            a.body.collider.type = CollisionType.Fixed;\n        }\n    }\n\n    public static createIngrediantSpawnerOnTile(scene: Scene, \n                                                xPos: number, \n                                                yPos: number, \n                                                ingredientName:string, \n                                                ingredientSprite:Sprite, \n                                                spawnerSprite?: Sprite): IngredientSpawner {\n        let a = new IngredientSpawner({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (spawnerSprite) {\n            let scaleX = this.tileWidth / spawnerSprite.width;\n            let scaleY = this.tileHeight / spawnerSprite.height;\n            spawnerSprite.scale = vec(scaleX, scaleY);\n            a.addDrawing(spawnerSprite);\n        }\n\n        a.setupSpawner(ingredientName, ingredientSprite);\n\n        scene.add(a);\n        return a;\n    }\n\n    public static createIngredientAtPosition (scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        const itemScale = 0.75;\n        \n        let a = new Ingredient({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos, yPos)\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(sprite);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createIngredientOnTile(scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        let xPosTile = xPos * this.tileWidth, yPosTile = yPos * this.tileHeight;\n        return this.createIngredientAtPosition (scene, sprite, name, xPosTile, yPosTile);\n    }\n\n    public static createMeal(scene: Scene, sprite:Sprite, name:string, position:Vector): Meal {\n        const itemScale = 0.75;\n        \n        let a = new Meal({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(sprite);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createApplianceOnTile(scene: Scene, type:ApplianceType, xPos: number, yPos: number): Appliance {\n        const itemScale = 0.75;\n\n        let sprite:Sprite;\n        let a = new Appliance({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        switch (type) {\n            case ApplianceType.Stove:\n                sprite = Resources.Stove.asSprite();\n                break;\n            case ApplianceType.ServingPlate:\n                sprite = InsideTileSprites.Tray;\n                break;\n            case ApplianceType.Trashcan:\n                sprite = Resources.Trashcan.asSprite();\n                a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n                a.body.collider.type = CollisionType.Fixed;\n                break;\n            default:\n                throw new Error(\"unsupported appliance type: \" + type);\n        }\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        AnimationHelper.getScaledSprite(sprite, itemScale);\n        \n        a.addDrawing(sprite);\n        a.applianceType = type;\n\n        return a;\n    }\n\n    public static createPanOnTile(scene: Scene, engine:Engine, xPos: number, yPos: number): Pan {\n        const itemScale = 0.75;\n        \n        let a = new Pan({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        scene.add(a);\n        a.setZIndex(35);\n\n        let panAttackSprites = new SpriteSheet({\n            image: Resources.PanAttack,\n            rows: 1,\n            columns: 3,\n            spWidth: 18,\n            spHeight: 18\n        });\n\n        let attackAnimation = AnimationHelper.getScaledAnimation(engine, panAttackSprites, 0,3, itemScale, 150);\n        attackAnimation.loop = false;\n        a.attackAnimation = attackAnimation;\n\n        let eSpr = AnimationHelper.getScaledSprite(Resources.PanEmpty.asSprite(), itemScale);\n        let fSpr = AnimationHelper.getScaledSprite(Resources.PanFilled.asSprite(), itemScale);\n        let dSpr = AnimationHelper.getScaledSprite(Resources.PanDone.asSprite(), itemScale);\n        let bSpr = AnimationHelper.getScaledSprite(Resources.PanBurned.asSprite(), itemScale);\n        \n        let cookingSheet = new SpriteSheet({\n            image: Resources.PanCooking ,\n            rows:1,\n            columns:3,\n            spWidth:18,\n            spHeight:9\n        });\n\n        let cAnim = AnimationHelper.getScaledAnimation(engine, cookingSheet, 0,3,itemScale,50);\n\n        a.addDrawing(\"empty\", eSpr);\n        a.addDrawing(\"filled\", fSpr);\n        a.addDrawing(\"attack\", attackAnimation);\n        a.addDrawing(\"cooking\", cAnim);\n        a.addDrawing(\"burned\", bSpr);\n        a.addDrawing(\"done\", dSpr);\n        \n        return a;\n    }\n\n    public static createCustomer(scene: Scene, position:Vector): Customer {\n        let a = new Customer({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        return a;\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class BalloonIconSprites {\n    private static balloonSheet = new SpriteSheet({\n        image: Resources.BalloonIconSheet,\n        rows: 11,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get MusicBalloon () {\n        return this.balloonSheet.getSprite(18);\n    }\n    \n    public static get MusicBalloonOff () {\n        return this.balloonSheet.getSprite(17);\n    }\n}","import { Scene, ScreenElement, Texture, vec, Sprite } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { BalloonIconSprites } from \"./balloonIconSprites\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport abstract class UIHelper {\n    private static iconWidth:number = 50;\n    private static iconHeight:number = 50;\n\n    private static createUIIcon(texture: Texture|Sprite, xPos: number, yPos: number) {\n        let se = new ScreenElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(this.scaleSprite(texture));\n\n        return se;\n    }\n\n    private static scaleSprite (texture: Texture|Sprite) : Sprite{\n        let s:Sprite;\n\n        if (typeof(texture) === typeof(Texture)) {\n            s = (texture as Texture).asSprite();\n        } else{\n            s = texture as Sprite;\n        }\n    \n        s.scale = vec(3,3);\n\n        return s;\n    }\n\n    private static createUIToggleButton (spriteOn:Sprite, spriteOff:Sprite, xPos:number, yPos:number): ScreenElement {\n        let se = new ScreenElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"on\", this.scaleSprite(spriteOn));\n        se.addDrawing(\"off\", this.scaleSprite(spriteOff));\n\n        return se;\n    }\n\n    public static addLevelUI (scene:LevelBase) {\n        let musicToggle = this.createUIToggleButton(BalloonIconSprites.MusicBalloon, BalloonIconSprites.MusicBalloonOff, 800, 50);\n        \n        musicToggle.on ('pointerup', (event) =>{\n            scene.toggleMusic();\n\n            if (scene.muteMusic) {\n                musicToggle.setDrawing(\"off\");\n            } else {\n                musicToggle.setDrawing(\"on\");\n            }\n        });\n\n        scene.add(musicToggle);\n\n        let hp1 = this.createUIIcon(ItemIconSprites.Heart, 900, 50);\n        let hp2 = this.createUIIcon(ItemIconSprites.Heart, 930, 50);\n        let hp3 = this.createUIIcon(ItemIconSprites.Heart, 960, 50);\n        \n        scene.add (hp1);\n        scene.add (hp2);\n        scene.add (hp3);\n\n    }\n}","import { Actor, CollisionType, Color, Engine, Input, vec, Shape, SpriteSheet, Animation, Vector, Resource } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { AnimationHelper } from '../objects/animationHelper';\nimport { Appliance, ApplianceType } from '../objects/appliance';\nimport { Ingredient } from '../objects/ingredient';\nimport { Item } from '../objects/item';\nimport { LevelBuildingHelper } from '../objects/levelBuildingHelper';\nimport { Meal } from '../objects/meal';\nimport { Pan } from '../objects/pan';\nimport { Humanoid } from './humanoid';\n\nexport class Player extends Humanoid {\n    constructor() {\n        super({\n            pos: vec(150, 150),\n            width: 25,\n            height: 25,\n            color: new Color(100, 255, 100)\n        });\n    }\n\n    protected spriteScale: number = 0.9;\n    private hitboxScale: number = 0.8;\n    private heldItem: Item;\n\n    onInitialize(engine: Engine) {\n        this.sprites = Resources.PlayerSprites;\n\n        this.body.collider.type = CollisionType.Active;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight * this.hitboxScale, LevelBuildingHelper.tileHeight * this.hitboxScale);\n        \n        super.onInitialize(engine);\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        super.onPreUpdate(engine, delta);\n\n        let attacking = false;\n\n        if (this.heldItem instanceof Pan) {\n            attacking = this.heldItem.isAttacking;\n        }\n\n        if (!attacking) {\n            this.doMovement(engine);\n            // force facing here, otherwise it can get janky when a solid object blocks\n            // movement (and therefor facing).\n            this.doFacing();\n        } else {\n            this.vel = vec(0, 0);\n        }\n\n        /////////////////////////////////\n        /////// Object Interaction //////\n        /////////////////////////////////\n        if (!attacking) {\n            if (this.heldItem) {\n                this.heldItem.pos = vec(this.pos.x, this.pos.y - 40);\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Space)) {\n                if (!this.heldItem) {\n                    this.tryPickupItem();\n                } else {\n                    this.trySetDownItem();\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.E)) {\n                if (this.heldItem instanceof Pan) {\n                    this.heldItem.attack(this.getFacingTargetPos(0.7), this.facing);\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Q)) {\n                this.examine();\n            }\n        }\n\n        /////////////////////////////////\n        ////////////// DEBUG ////////////\n        /////////////////////////////////\n        if (engine.input.keyboard.wasPressed(Input.Keys.Semicolon)) {\n            let val = prompt(\"goto level\", \"level_test\");\n            if (val) {\n                engine.goToScene(val);\n            }\n        }\n    }\n    \n\n    private doMovement(engine: Engine) {\n        let velX: number = 0, velY: number = 0;\n\n        if (engine.input.keyboard.isHeld(Input.Keys.W)) {\n            velY -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.S)) {\n            velY += 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.A)) {\n            velX -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.D)) {\n            velX += 1;\n        }\n\n        let vecMag = Math.sqrt(Math.abs(velX) + Math.abs(velY));\n\n        let adjustedVelY = velY / vecMag * this.baseSpeed;\n        let adjustedVelX = velX / vecMag * this.baseSpeed;\n\n        if (vecMag > 0) {\n            this.vel = vec(adjustedVelX, adjustedVelY);\n        } else {\n            this.vel = vec(0, 0);\n        }\n    }\n\n    private getFacingTargetPos(tilePercent: number): Vector {\n        let xOffset = 0, yOffset = 0;\n\n        switch (this.facing) {\n            case \"l\":\n                xOffset -= LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"r\":\n                xOffset += LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"u\":\n                yOffset -= LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n            case \"d\":\n                yOffset += LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n        }\n\n        return vec(this.pos.x + xOffset, this.pos.y + yOffset);\n    }\n\n    private trySetDownItem() {\n        let tPos = this.getFacingTargetPos(1.0);\n\n        // check for trashcan first\n        let tc = this.scene.actors.filter(x => x instanceof Appliance &&\n                                               x.applianceType === ApplianceType.Trashcan &&\n                                               x.contains(tPos.x, tPos.y));\n\n        if (tc.length > 0 && this.heldItem.canBeTrashed) {\n            this.heldItem.kill();\n            this.heldItem = null;\n            return;\n        }\n\n        var targets = this.scene.actors.filter(x => x instanceof Item &&\n            !(x instanceof Pan) &&\n            !(x === this.heldItem) &&\n            x.contains(tPos.x, tPos.y));\n\n        if (targets.length === 0) {\n            this.heldItem.pos = tPos\n            this.heldItem.isHeld = false;\n            this.heldItem = null;\n        }\n    }\n\n    private tryPickupItem() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => x instanceof Item &&\n            x.contains(tPos.x, tPos.y));\n\n        if (targets.length > 0) {\n            this.heldItem = targets[0] as Item;\n            this.heldItem.isHeld = true;\n        }\n    }\n\n    private examine() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => (x instanceof Item || x instanceof Appliance) &&\n            x.contains(tPos.x, tPos.y));\n\n        let item = targets[0];\n\n        if (item) {\n            if (item instanceof Pan) {\n                alert(\"Pan with contents: \" + JSON.stringify(item.ingredients));\n            }\n\n            if (item instanceof Ingredient) {\n                alert(\"Ingredient: \" + item.name);\n            }\n\n            if (item instanceof Appliance) {\n                alert(\"Appliance: \" + item.applianceType);\n            }\n\n            if (item instanceof Meal) {\n                alert(\"Meal: \" + item.name);\n            }\n        }\n    }\n}\n","import { Actor, Engine, Scene, Sound, Sprite, TileMap } from \"excalibur\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { Player } from \"../../actors/characters/player\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class LevelBase extends Scene {\n    protected grid: Actor[][] = [];\n    protected player: Actor;\n    protected musicTrack: Sound;\n    public muteMusic: boolean = false;\n    protected baseTile?: Sprite;\n\n    constructor(engine: Engine) {\n        super(engine);\n    }\n\n    public onInitialize(engine: Engine) {\n        UIHelper.addLevelUI(this);\n\n        this.player = new Player;\n        this.add(this.player);\n\n        this.camera.strategy.lockToActor(this.player);\n        this.musicTrack = Resources.LevelLoop1;\n        this.musicTrack.loop = true;\n        this.musicTrack.play();\n\n        // if (this.baseTile) {\n        //     for (let r = 0; r < 20; r++) {\n        //         for (let c = 0; c < 20; c++) {\n        //             // TODO background tiles as actors seems to nuke performance...\n        //             //LevelBuildingHelper.createBackgroundTile(this, this.baseTile, r, c);\n        //         }\n        //     }\n        // }\n\n        this.addBackgroundTiles();\n        this.addForegroundTiles();\n        this.addAppliances();\n        this.addPans(engine);\n        this.addItems();\n    }\n\n    protected abstract addBackgroundTiles();\n    protected abstract addForegroundTiles();\n    protected abstract addAppliances();\n    protected abstract addPans(engine:Engine);\n    protected abstract addItems();\n\n    public toggleMusic() {\n        this.muteMusic = !this.muteMusic;\n        if (this.muteMusic) {\n            this.musicTrack.stop();\n        } else {\n            this.musicTrack.play();\n        }\n    }\n}","import { Color, Engine, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideFloorWallSprites } from \"../../actors/objects/insideFloorWallSprites\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTest extends LevelBase {\n    public onInitialize(engine:Engine) { \n        this.baseTile = InsideFloorWallSprites.BlueTilePattern;\n        super.onInitialize(engine);\n\n        // TODO something less shithouse\n        alert(\"Controls:\\nWASD - Movement\\nSpace - Pick up/put down\\nE - Swing pan\\nQ - Examine\");\n    }\n\n    protected override addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n    };\n    protected override addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n    };\n    protected override addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 7, 4);\n    };\n    protected override addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected override addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Posion )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n\n        let c = LevelBuildingHelper.createCustomer(this, vec(500,500) );\n        c.actions.moveTo(500, 450, 200)\n                 .moveTo(400, 450, 200)\n                 .moveTo(400, 500, 200)\n                 .moveTo(500, 500, 200)\n                 .repeatForever();\n\n        c.wantsMeal=\"monsterPie\";\n    }\n}\n","import { Color, Engine } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTestRay extends LevelBase {\n    protected override addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n    };\n    protected override addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopGrey, 2, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 3, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopLeft, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 2, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopRight, 3, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomLeftLeg, 1, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 2, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomRightLeg, 3, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 1, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.RedStool, 2, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 3, 10);\n        \n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopEmpty, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 4, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopLid, 10, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 10, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n    };\n    protected override addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n    };\n    protected override addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected override addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Posion )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n    }\n}","import { Engine } from \"excalibur\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level1 extends LevelBase {\n    protected addBackgroundTiles() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addForegroundTiles() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addAppliances() {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addPans(engine: Engine) {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected addItems() {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n}","import { Engine, Loader, DisplayMode, Color } from 'excalibur';\nimport { Player } from './actors/characters/player';\nimport { Resources } from './resources';\nimport { LevelTest } from './scenes/levels/levelTest';\nimport { LevelTestRay } from './scenes/levels/levelTestRay';\nimport { Level1 } from './scenes/levels/level_1';\n\n/**\n * Managed game class\n */\nclass Game extends Engine {\n\n    constructor() {\n        super({ displayMode: DisplayMode.FullScreen });\n    }\n\n    public start() {\n\n        game.add('level_test', new LevelTest(this));\n        game.add('level_1', new Level1(this));\n        game.add('levelTestRay', new LevelTestRay(this));\n        // Automatically load all default resources\n        const loader = new Loader(Object.values(Resources));\n\n        // TODO add custom loader screen \n        loader.suppressPlayButton = false;\n\n        return super.start(loader);\n    }\n}\n\nconst game = new Game();\ngame.backgroundColor = new Color(245, 242, 254);\ngame.start().then(() => {\n    game.goToScene('level_test');\n});\n\ndocument.oncontextmenu = () => {\n    return false;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [325], () => (__webpack_require__(235)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}