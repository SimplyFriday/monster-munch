{"version":3,"sources":["webpack://excalibur-webpack/webpack/runtime/chunk loaded","webpack://excalibur-webpack/./src/actors/objects/appliance.ts","webpack://excalibur-webpack/./src/resources.ts","webpack://excalibur-webpack/./src/actors/objects/balloonIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/item.ts","webpack://excalibur-webpack/./src/actors/objects/meal.ts","webpack://excalibur-webpack/./src/actors/characters/humanoid.ts","webpack://excalibur-webpack/./src/actors/characters/customer.ts","webpack://excalibur-webpack/./src/actors/objects/ingredient.ts","webpack://excalibur-webpack/./src/actors/objects/ingredientSpawner.ts","webpack://excalibur-webpack/./src/actors/objects/insideTileSprites.ts","webpack://excalibur-webpack/./src/actors/objects/itemIconSprites.ts","webpack://excalibur-webpack/./src/actors/objects/recipes.ts","webpack://excalibur-webpack/./src/actors/objects/pan.ts","webpack://excalibur-webpack/./src/actors/objects/levelBuildingHelper.ts","webpack://excalibur-webpack/./src/actors/objects/animationHelper.ts","webpack://excalibur-webpack/./src/actors/objects/uiHelper.ts","webpack://excalibur-webpack/./src/scenes/levels/death.ts","webpack://excalibur-webpack/./src/actors/characters/player.ts","webpack://excalibur-webpack/./src/scenes/levels/levelBase.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTest.ts","webpack://excalibur-webpack/./src/scenes/levels/levelTestRay.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1.ts","webpack://excalibur-webpack/./src/scenes/levels/level_1a.ts","webpack://excalibur-webpack/./src/scenes/levels/tutorial_1.ts","webpack://excalibur-webpack/./src/scenes/levels/tutorial_2.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/define property getters","webpack://excalibur-webpack/webpack/runtime/global","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/publicPath","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"names":["deferred","ApplianceType","levelLoop1","bonk1","levelWin","Resources","Bag","Texture","bag","ItemIconSheet","PlayerSprites","LevelLoop1","Sound","BalloonIconSheet","PanAttack","PanEmpty","PanFilled","PanCooking","PanDone","PanBurned","InsideTilesB","InsideFloorsWalls","Stove","stove","Trashcan","trashcan","Customer1","CardFrame","Bonk1","RestartButton","WarningSquare","TutorialButton","Door","door","LevelWin","Actor","this","balloonSheet","getSprite","SpriteSheet","image","rows","columns","spWidth","spHeight","isHeld","canBeTrashed","onPreUpdate","engine","delta","body","collider","type","CollisionType","onInitialize","Item","spriteScale","baseSpeed","sprites","width","height","setZIndex","addDrawing","AnimationHelper","getScaledSprite","getScaledAnimation","doFacing","vel","x","y","facing","setDrawing","getFacingTargetPos","tilePercent","xOffset","yOffset","LevelBuildingHelper","tileWidth","tileHeight","vec","pos","speed","isHappy","tickSpeed","timeElapsed","attackTime","initialPosition","clone","wantsBalloon","BalloonIconSprites","EmptyBalloon","wantsSprite","wantsMeal","resultSprite","grumpyBubble","AngryBalloon","onPreDraw","ctx","_delta","isAttacking","drawGrumpy","frustratedTime","draw","walkToSeat","p","actions","moveTo","seat","asPromise","then","console","log","coreMealPos","mealCheckPos","actionTimer","CustomerTimer","interval","fcn","routine","repeats","customer","scene","add","leaveHappy","customersToServe","kill","a","isKilled","cancel","player","actionQueue","getActions","filter","isComplete","length","distance","hurt","forEach","actors","Meal","name","resultName","contains","removeCustomer","Humanoid","Timer","setupSpawner","ingredientName","ingredientSprite","_ingredientName","_ingredientSprite","spawnIngredient","on","e","other","actor","newItemTimer","IngredientTimer","spawner","reset","createIngredientAtPosition","iconSheet","ingredients","ingredientsEqual","ingredientCheck","JSON","stringify","Array","isArray","arr1","concat","sort","arr2","i","Recipes","MonsterPie","Recipe","ItemIconSprites","PieRed","Taco","Cookie","FriedEgg","EggCooked","Pizza","PizzaPlain","PepperoniPizza","PizzaToppings","BananaPie","PieYellow","SpecialCrunchPie","PiePurple","Burger","CrunchyCake","Cake","IceCream","IceCreamCone","Bone","CowboyBoots","FlipPhone","Hotdog","Fries","BananaCandy","CandyYellow","BluePopsicle","FreezePopBlue","PinkPopsicle","BananaPeel","cardTargetWidth","cardTargetHeight","ingredientSprites","setRecipe","recipe","cardFrame","asSprite","scale","push","ScreenElement","cookTimeMultiplier","cookTime","isDone","isBurned","shape","Shape","otherActor","Appliance","applianceType","ServingPlate","product","r","createMeal","Trash","Customer","play","tickCook","collide","attackAnimation","attack","flipHorizontal","createLabelAcrossTiles","text","xPos","yPos","color","label","Label","maxWidth","textAlign","TextAlign","fontSize","createWallTile","display","createTile","createBackgroundTile","createSeat","sprite","s","hasCollision","z","Color","scaleX","scaleY","createIngrediantSpawnerOnTile","spawnerSprite","IngredientSpawner","itemScale","Ingredient","spr","createIngredientOnTile","xPosTile","yPosTile","position","createApplianceOnTile","InsideTileSprites","Tray","Error","createPanOnTile","Pan","panAttackSprites","loop","eSpr","fSpr","dSpr","bSpr","cookingSheet","cAnim","createCustomer","spritesheet","startIndex","endIndex","scaleFactor","getAnimationBetween","nSpr","createUIIcon","texture","se","ViewportLockedUIElement","iconWidth","iconHeight","createUILabel","createUIToggleButton","spriteOn","spriteOff","addLevelUI","musicToggle","MusicBalloon","MusicBalloonOff","window","innerWidth","xRelativeTo","event","toggleMusic","Game","muteMusic","hp1","Heart","BlackHeart","hp2","hp3","feedLabel","timer","UITimer","uiElements","addTutorialButton","nextLevel","tutorialButton","innerHeight","yRelativeTo","CurrentGame","currentScene","goToScene","addDeathUI","restartButton","DeathScreen","lastLevel","levelName","updateUI","element","startsWith","pHP","hp","l","children","backgroundColor","UIHelper","Scene","hitboxScale","immunityTime","blink","deathScene","scenes","attacking","heldItem","doMovement","input","keyboard","wasPressed","Input","trySetDownItem","tryPickupItem","examine","val","prompt","velX","velY","vecMag","Math","sqrt","abs","adjustedVelY","adjustedVelX","tPos","pans","targets","item","alert","customerSeats","doors","customers","customerSpawnSpeed","customerFrustratedTime","customerAttackTime","isTutorial","onDeactivate","oldScene","newScene","musicTrack","stop","Player","camera","strategy","lockToActor","createLevelBorder","addBackgroundTiles","addForegroundTiles","addAppliances","addPans","addItems","addSeatsAndDoors","availableMeals","RecipeCard","b","v","random","di","floor","nextFreeSeat","some","c","visible","mi","spawnTimer","LevelTimer","spawnCustomer","level","borderColor","borderWidth","borderHeight","CounterFaceLeft","CounterFaceCenter","CounterFaceRight","Table_V_BottomLeg","CounterVerticalFull","CounterCornerBottomLeft","CounterBottomCornerRight","CounterBottomCentral","Table_V_TopLarge","RedStool","LevelBase","wallColor","StoolTopRed","StoolTopGrey","Table_H_TopLeft","Table_H_TopMid","Table_H_TopRight","Table_H_BottomLeftLeg","Table_H_BottomMidNoLeg","Table_H_BottomRightLeg","GreyStool","TrashCanTopEmpty","TrashCanBottom","TrashCanTopLid","Apple","FlourBag","Mayo","Poison","Skull","CounterFaceStandalone","CounterStandalone","Level1","displayMode","DisplayMode","start","addLevel","LevelTest","LevelTestRay","Tutorial1","Tutorial2","Level1a","game","loader","Loader","Object","values","suppressPlayButton","Engine","document","oncontextmenu","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","key","splice","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","replace","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"uBAAIA,E,yCCMQC,E,yLCgBNC,EAAa,EAAQ,KACrBC,EAAQ,EAAQ,KAChBC,EAAW,EAAQ,IAMnBC,EAAY,CACdC,IAAK,IAAI,EAAAC,QAAQC,GACjBC,cAAe,IAAI,EAAAF,QAAQ,GAC3BG,cAAe,IAAI,EAAAH,QAAQ,GAC3BI,WAAY,IAAI,EAAAC,MAAMV,GACtBW,iBAAkB,IAAI,EAAAN,QAAQ,GAC9BO,UAAW,IAAI,EAAAP,QAAQ,GACvBQ,SAAU,IAAI,EAAAR,QAAQ,GACtBS,UAAW,IAAI,EAAAT,QAAQ,GACvBU,WAAY,IAAI,EAAAV,QAAQ,GACxBW,QAAS,IAAI,EAAAX,QAAQ,GACrBY,UAAW,IAAI,EAAAZ,QAAQ,GACvBa,aAAc,IAAI,EAAAb,QAAQ,GAC1Bc,kBAAmB,IAAI,EAAAd,QAAQ,GAC/Be,MAAO,IAAI,EAAAf,QAAQgB,GACnBC,SAAU,IAAI,EAAAjB,QAAQkB,GACtBC,UAAW,IAAI,EAAAnB,QAAQ,GACvBoB,UAAW,IAAI,EAAApB,QAAQ,GACvBqB,MAAO,IAAI,EAAAhB,MAAMT,GACjB0B,cAAe,IAAI,EAAAtB,QAAQ,GAC3BuB,cAAe,IAAI,EAAAvB,QAAQ,GAC3BwB,eAAgB,IAAI,EAAAxB,QAAS,GAC7ByB,KAAM,IAAI,EAAAzB,QAAS0B,GACnBC,SAAU,IAAI,EAAAtB,MAAMR,I,kcDnDxB,2B,+CAEA,OAF+B,OAE/B,EAFA,CAA+B,EAAA+B,QAI/B,SAAYlC,GACR,qBACA,mCACA,2BAHJ,CAAYA,MAAa,KEHzB,+BAwBA,OAfI,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOmC,KAAKC,aAAaC,UAAU,K,gCAGvC,sBAAkB,oBAAe,C,IAAjC,WACI,OAAOF,KAAKC,aAAaC,UAAU,K,gCAGvC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAKC,aAAaC,UAAU,K,gCAGvC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAKC,aAAaC,UAAU,K,gCArBxB,EAAAD,aAAe,IAAI,EAAAE,YAAY,CAC1CC,MAAOnC,EAAUQ,iBACjB4B,KAAM,GACNC,QAAS,EACTC,QAAS,GACTC,SAAU,KAkBlB,EAxBA,G,ydCDA,yE,OACW,EAAAC,QAAkB,EAClB,EAAAC,cAAuB,E,EASlC,OAXmC,OAIxB,YAAAC,YAAP,SAAmBC,EAAeC,GAC1Bb,KAAKS,OACLT,KAAKc,KAAKC,SAASC,KAAO,EAAAC,cAAA,iBAE1BjB,KAAKc,KAAKC,SAASC,KAAO,EAAAC,cAAA,OAGtC,EAXA,CAAmC,EAAAlB,O,ydCCnC,2B,+CAOA,OAP0B,OAGf,YAAAmB,aAAP,SAAoBN,GAChBZ,KAAKU,cAAe,EACpB,YAAMQ,aAAY,UAACN,IAE3B,EAPA,CAA0BO,G,ydCC1B,yE,OAEc,EAAAC,YAAqB,GAErB,EAAAC,UAAoB,I,EA+FlC,OAnGuC,OAM5B,YAAAH,aAAP,SAAqBN,GACjB,IAAIU,EAAU,IAAI,EAAAnB,YAAY,CAC1BC,MAAOJ,KAAKsB,QACZjB,KAAM,EACNC,QAAS,EACTC,QAASP,KAAKsB,QAAQC,MAAQ,EAC9Bf,SAAUR,KAAKsB,QAAQE,OAAS,IAGpCxB,KAAKyB,UAAU,KAEfzB,KAAK0B,WAAW,YAAaC,GAAgBC,gBAAgBN,EAAQpB,UAAU,GAAIF,KAAKoB,cACxFpB,KAAK0B,WAAW,YAAaC,GAAgBC,gBAAgBN,EAAQpB,UAAU,GAAIF,KAAKoB,cACxFpB,KAAK0B,WAAW,aAAcC,GAAgBC,gBAAgBN,EAAQpB,UAAU,GAAIF,KAAKoB,cACzFpB,KAAK0B,WAAW,UAAWC,GAAgBC,gBAAgBN,EAAQpB,UAAU,IAAKF,KAAKoB,cAEvFpB,KAAK0B,WAAW,WAAYC,GAAgBE,mBAAmBjB,EAAQU,EAAS,EAAG,EAAGtB,KAAKoB,cAC3FpB,KAAK0B,WAAW,WAAYC,GAAgBE,mBAAmBjB,EAAQU,EAAS,EAAG,EAAGtB,KAAKoB,cAC3FpB,KAAK0B,WAAW,YAAaC,GAAgBE,mBAAmBjB,EAAQU,EAAS,EAAG,EAAGtB,KAAKoB,cAC5FpB,KAAK0B,WAAW,SAAUC,GAAgBE,mBAAmBjB,EAAQU,EAAS,EAAG,GAAItB,KAAKoB,eAGvF,YAAAT,YAAP,SAAoBC,EAAeC,GAM/B,GAFAb,KAAK8B,WAEc,IAAf9B,KAAK+B,IAAIC,GAA0B,IAAfhC,KAAK+B,IAAIE,EAC7B,OAAQjC,KAAKkC,QACT,IAAK,IACDlC,KAAKmC,WAAW,aAChB,MACJ,IAAK,IACDnC,KAAKmC,WAAW,cAChB,MACJ,IAAK,IACDnC,KAAKmC,WAAW,WAChB,MACJ,IAAK,IACDnC,KAAKmC,WAAW,kBAIxB,OAAQnC,KAAKkC,QACT,IAAK,IACDlC,KAAKmC,WAAW,YAChB,MACJ,IAAK,IACDnC,KAAKmC,WAAW,aAChB,MACJ,IAAK,IACDnC,KAAKmC,WAAW,UAChB,MACJ,IAAK,IACDnC,KAAKmC,WAAW,cAMtB,YAAAL,SAAV,WACQ9B,KAAK+B,IAAIE,EAAI,EACbjC,KAAKkC,OAAS,IACPlC,KAAK+B,IAAIC,EAAI,EACpBhC,KAAKkC,OAAS,IACPlC,KAAK+B,IAAIC,EAAI,EACpBhC,KAAKkC,OAAS,IACPlC,KAAK+B,IAAIE,EAAI,IACpBjC,KAAKkC,OAAS,MAIZ,YAAAE,mBAAV,SAA6BC,GACzB,IAAIC,EAAU,EAAGC,EAAU,EAE3B,OAAQvC,KAAKkC,QACT,IAAK,IACDI,GAAWE,GAAoBC,UAAYJ,EAC3C,MACJ,IAAK,IACDC,GAAWE,GAAoBC,UAAYJ,EAC3C,MACJ,IAAK,IACDE,GAAWC,GAAoBE,WAAaL,EAC5C,MACJ,IAAK,IACDE,GAAWC,GAAoBE,WAAaL,EAIpD,OAAO,IAAAM,KAAI3C,KAAK4C,IAAIZ,EAAIM,EAAStC,KAAK4C,IAAIX,EAAIM,IAEtD,EAnGA,CAAuC,EAAAxC,O,ydCOvC,yE,OACY,EAAA8C,MAAgB,IAOhB,EAAAC,SAAmB,EAOpB,EAAAC,UAAmB,I,EAqH9B,OApI8B,OAiB1B,sBAAW,0BAAW,C,IAAtB,WACI,OAAO/C,KAAKgD,aAAehD,KAAKiD,Y,gCAG7B,YAAA/B,aAAP,SAAoBN,GAChBZ,KAAKsB,QAAUrD,EAAUqB,UACzB,YAAM4B,aAAY,UAACN,GAEnBZ,KAAKkD,gBAAkBlD,KAAK4C,IAAIO,QAChCnD,KAAKoD,aAAezB,GAAgBC,gBAAgByB,EAAmBC,aAAc,IACrFtD,KAAKuD,YAAc5B,GAAgBC,gBAAgB5B,KAAKwD,UAAUC,aAAaN,QAAS,IAExFnD,KAAK0D,aAAe/B,GAAgBC,gBAAgByB,EAAmBM,aAAc,KAGlF,YAAAC,UAAP,SAAiBC,EAA+BC,GAC5C,IAAK9D,KAAK+D,cAAgB/D,KAAK8C,QAAS,CACpC,IAAIkB,GAAa,EAEbhE,KAAKgD,aAAehD,KAAKiE,iBACzBD,EAAahE,KAAKgD,YAAc,IAAO,KAGvCgB,EACAhE,KAAK0D,aAAaQ,KAAKL,EAAK,GAAI,KAEhC7D,KAAKoD,aAAac,KAAKL,EAAK,GAAI,IAChC7D,KAAKuD,YAAYW,KAAKL,EAAK,GAAI,OAMpC,YAAAM,WAAP,sBACQC,EAAIpE,KAAKqE,QAAQC,OAAOtE,KAAKuE,KAAK3B,IAAIZ,EAAGhC,KAAKuE,KAAK3B,IAAIX,EAAGjC,KAAK6C,OAAO2B,YAC1ExE,KAAKgD,YAAc,EAEnBoB,EAAEK,MAAK,WACHC,QAAQC,IAAI,4BACZ,EAAKzC,OAAS,EAAKqC,KAAKrC,OAExB,IAAI0C,EAAa,EAAKxC,mBAAmB,IAEzC,EAAKyC,aAAe,CAACD,GACA,IAAAjC,KAAIiC,EAAY5C,EAAoC,GAAhCQ,GAAoBC,UAAiBmC,EAAY3C,IACrE,IAAAU,KAAIiC,EAAY5C,EAAoC,GAAhCQ,GAAoBC,UAAiBmC,EAAY3C,IACrE,IAAAU,KAAIiC,EAAY5C,EAAGQ,GAAoBE,WAAakC,EAAY3C,EAAI,KACpE,IAAAU,KAAIiC,EAAY5C,EAAGQ,GAAoBE,WAAakC,EAAY3C,EAAI,KAEzF,EAAK6C,YAAc,IAAIC,EAAc,CACjCC,SAAU,EAAKjC,UACfkC,IAAK,EAAKC,QACVC,SAAS,IAGb,EAAKL,YAAYM,SAAW,EAC5B,EAAKC,MAAMC,IAAI,EAAKR,iBAIrB,YAAAS,WAAP,sBACIvF,KAAK8C,SAAU,EACd9C,KAAKqF,MAAoBG,mBAElBxF,KAAKqE,QAAQC,OAAOtE,KAAKkD,gBAAgBlB,EAAGhC,KAAKkD,gBAAgBjB,EAAGjC,KAAK6C,OAAO2B,YAEtFC,MAAK,WACH,EAAKgB,WAIL,YAAAP,QAAR,WACI,IAAIQ,EAAI1F,KAER,GAAI0F,EAAG,CACH,GAAIA,EAAEN,SAASO,WAEX,YADAD,EAAEE,SAIN,GAAKF,EAAEN,SAASrB,YAsBT,CACH,IAAI8B,EAAUH,EAAEN,SAASC,MAAoBQ,OAE+B,IAAxEH,EAAEN,SAASU,YAAYC,aAAaC,QAAO,SAAAhE,GAAG,OAACA,EAAEiE,cAAYC,QAC7DR,EAAEN,SAASf,QAAQC,OAAQuB,EAAOjD,IAAIZ,EAAG6D,EAAOjD,IAAIX,EAAGyD,EAAEN,SAASvC,OAGlE6C,EAAEN,SAASxC,IAAIuD,SAASN,EAAOjD,MAAQ,IAAM8C,EAAEN,SAASrB,aACxD8B,EAAOO,WA9Bc,CACzB,IAAI,EAAa,GAEjBV,EAAEN,SAASP,aAAawB,SAAQ,SAAAzD,GACxB,EAAEsD,OAAS,IAIf,EAAIR,EAAEN,SAASC,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,aAAauE,GACjDvE,EAAEwE,OAASd,EAAEN,SAAS5B,UAAUiD,aAC/BzE,EAAEvB,QACHuB,EAAE0E,SAAS9D,EAAIZ,EAAGY,EAAIX,UAG1B,EAAEiE,OAAS,GAEX,EAAE,GAAGT,OACJC,EAAEL,MAAoBsB,eAAejB,EAAEN,UACxCM,EAAEN,SAASG,cAEXG,EAAEN,SAASpC,aAAe0C,EAAEN,SAASrC,aAezD,EApIA,CAA8B6D,GAsI9B,2B,+CAEA,OAFmC,OAEnC,EAFA,CAAmC,EAAAC,O,ydC9InC,2B,+CAOA,OAPgC,OAGrB,YAAA3F,aAAP,SAAoBN,GAChBZ,KAAKU,cAAe,EACpB,YAAMQ,aAAY,UAACN,IAE3B,EAPA,CAAgCO,G,ydCEhC,2B,+CAqDA,OArDuC,OAM5B,YAAA2F,aAAP,SAAoBC,EAAuBC,GAA3C,WACIhH,KAAKiH,gBAAkBF,EACvB/G,KAAKkH,kBAAoBF,EAEzBhH,KAAKmH,kBAELnH,KAAKc,KAAKC,SAASqG,GAAG,gBAAgB,SAACC,GAClBA,EAAEC,MAAMxG,KAAKyG,iBAEJpG,IAChB,EAAKqG,eACP,EAAKA,aAAe,IAAIC,EAAgB,CACpCzC,SAAU,IACVG,SAAS,EACTF,IAAK,EAAKkC,kBAEd,EAAKK,aAAaE,QAAU,EAE5B,EAAKrC,MAAMC,IAAI,EAAKkC,eAGxB,EAAKA,aAAaG,aAKvB,YAAAR,gBAAP,WAEI,GAAInH,gBAAgByH,EAAiB,CACjC,IAAI,EAAUzH,KAAK0H,QAGS,IAFT,EAAQrC,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,EAAE0E,SAAS,EAAQ9D,IAAIZ,EAAG,EAAQY,IAAIX,IAAMD,aAAab,KAE5F+E,QACb1D,GAAoBoF,2BAA2B5H,KAAK0H,QAAQrC,MACjBrF,KAAK0H,QAAQR,kBAAkB/D,QAC/BnD,KAAK0H,QAAQT,gBACbjH,KAAK0H,QAAQ9E,IAAIZ,EACjBhC,KAAK0H,QAAQ9E,IAAIX,QAGhEO,GAAoBoF,2BAA2B5H,KAAKqF,MACLrF,KAAKkH,kBAAkB/D,QACvBnD,KAAKiH,gBACLjH,KAAK4C,IAAIZ,EACThC,KAAK4C,IAAIX,IAGpE,EArDA,CAAuC,EAAAlC,OAuDvC,2B,+CAEA,OAFqC,OAErC,EAFA,CAAqC,EAAA8G,OCzDrC,2BAqIA,OA5HI,sBAAkB,wBAAmB,C,IAArC,WACI,OAAO7G,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,4BAAuB,C,IAAzC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,yBAAoB,C,IAAtC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,6BAAwB,C,IAA1C,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,sBAAiB,C,IAAnC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,0BAAqB,C,IAAvC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAEpC,sBAAkB,oBAAe,C,IAAjC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,sBAAiB,C,IAAnC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,qBAAgB,C,IAAlC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,qBAAgB,C,IAAlC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,oBAAe,C,IAAjC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,qBAAgB,C,IAAlC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,qBAAgB,C,IAAlC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,0BAAqB,C,IAAvC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,2BAAsB,C,IAAxC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,2BAAsB,C,IAAxC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,sBAAiB,C,IAAnC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAEpC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAEpC,sBAAkB,oBAAe,C,IAAjC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,qBAAgB,C,IAAlC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,qBAAgB,C,IAAlC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAlIrB,EAAA2H,UAAY,IAAI,EAAA1H,YAAY,CACvCC,MAAOnC,EAAUe,aACjBqB,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,SAAU,KA+HlB,EArIA,GCAA,2BAgTA,OAvSI,sBAAkB,UAAK,C,IAAvB,WACI,OAAOR,KAAK6H,UAAU3H,UAAU,I,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,I,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,I,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,I,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,YAAO,C,IAAzB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,YAAO,C,IAAzB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,YAAO,C,IAAzB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,kBAAa,C,IAA/B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,YAAO,C,IAAzB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,YAAO,C,IAAzB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,kBAAa,C,IAA/B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,kBAAa,C,IAA/B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,aAAQ,C,IAA1B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,kBAAa,C,IAA/B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,kBAAa,C,IAA/B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,cAAS,C,IAA3B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,K,gCAGpC,sBAAkB,eAAU,C,IAA5B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,mBAAc,C,IAAhC,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,QAAG,C,IAArB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,QAAG,C,IAArB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,UAAK,C,IAAvB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,SAAI,C,IAAtB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,iBAAY,C,IAA9B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,WAAM,C,IAAxB,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,M,gCAGpC,sBAAkB,gBAAW,C,IAA7B,WACI,OAAOF,KAAK6H,UAAU3H,UAAU,I,gCA7SrB,EAAA2H,UAAY,IAAI,EAAA1H,YAAY,CACvCC,MAAOnC,EAAUI,cACjBgC,KAAM,GACNC,QAAS,GACTC,QAAS,GACTC,SAAU,KA0SlB,EAhTA,G,ydCEA,aAKI,WAAasH,EAAsBrB,EAAmBhD,GAClDzD,KAAK8H,YAAcA,EACnB9H,KAAKyD,aAAeA,EACpBzD,KAAKyG,WAAaA,EA0B1B,OAvBW,YAAAsB,iBAAP,SAAwBC,GAGpB,GAFAtD,QAAQC,IAAI,gBAAkBsD,KAAKC,UAAUF,KAG1CG,MAAMC,QAAQpI,KAAK8H,eAChBK,MAAMC,QAAQJ,IACfhI,KAAK8H,YAAY5B,SAAW8B,EAAgB9B,OAE7C,OAAO,EAOX,IAHA,IAAMmC,EAAOrI,KAAK8H,YAAYQ,SAASC,OACjCC,EAAOR,EAAgBM,SAASC,OAE7BE,EAAI,EAAGA,EAAIJ,EAAKnC,OAAQuC,IAC7B,GAAIJ,EAAKI,KAAOD,EAAKC,GACjB,OAAO,EAIf,OAAO,GAEf,EAlCA,GAoCMC,EAAU,CACZC,WAAY,IAAIC,EAAQ,CAAC,SAAU,WAAY,SAAS,cAAcC,EAAgBC,QACtFC,KAAM,IAAIH,EAAQ,CAAC,OAAQ,SAAU,aAAa,OAAOC,EAAgBE,MACzEC,OAAQ,IAAIJ,EAAQ,CAAC,WAAY,UAAU,SAASC,EAAgBG,QACpEC,SAAU,IAAIL,EAAQ,CAAC,UAAU,YAAYC,EAAgBK,WAC7DC,MAAO,IAAIP,EAAQ,CAAC,WAAY,SAAU,UAAU,QAAQC,EAAgBO,YAC5EC,eAAgB,IAAIT,EAAQ,CAAC,WAAY,SAAU,OAAO,UAAU,kBAAkBC,EAAgBS,eACtGC,UAAW,IAAIX,EAAQ,CAAC,SAAU,WAAY,UAAU,aAAaC,EAAgBW,WACrFC,iBAAkB,IAAIb,EAAQ,CAAC,SAAU,WAAY,aAAa,qBAAqBC,EAAgBa,WACvGC,OAAQ,IAAIf,EAAQ,CAAC,OAAQ,QAAS,YAAa,UAAU,SAASC,EAAgBc,QACtFC,YAAa,IAAIhB,EAAQ,CAAC,SAAU,WAAY,YAAa,YAAY,eAAeC,EAAgBgB,MACxGC,SAAU,IAAIlB,EAAQ,CAAC,YAAY,SAAU,YAAY,YAAYC,EAAgBkB,cACrFC,KAAM,IAAIpB,EAAQ,CAAC,SAAS,QAAQ,aAAa,OAAOC,EAAgBmB,MACxEC,YAAa,IAAIrB,EAAQ,CAAC,SAAS,eAAe,QAAQ,eAAeC,EAAgBoB,aACzFC,UAAW,IAAItB,EAAQ,CAAC,aAAa,aAAa,SAAS,aAAaC,EAAgBqB,WACxFC,OAAQ,IAAIvB,EAAQ,CAAC,cAAc,OAAO,SAAS,UAAUC,EAAgBsB,QAC7EC,MAAO,IAAIxB,EAAQ,CAAC,SAAS,eAAe,QAAQ,QAAQC,EAAgBuB,OAC5EC,YAAa,IAAIzB,EAAQ,CAAC,SAAS,gBAAgB,YAAY,eAAeC,EAAgByB,aAC9FC,aAAc,IAAI3B,EAAQ,CAAC,UAAU,UAAU,eAAe,gBAAgBC,EAAgB2B,eAC9FC,aAAc,IAAI7B,EAAQ,CAAC,SAAS,aAAa,aAAa,eAAeC,EAAgByB,aAC7FI,WAAY,IAAI9B,EAAQ,CAAC,SAAS,MAAM,iBAAiB,cAAcC,EAAgByB,cAQ3F,yE,OACY,EAAAK,gBAAkB,GAClB,EAAAC,iBAAmB,IAInB,EAAAC,kBAA6B,G,EAgCzC,OAtCgC,OAQrB,YAAAC,UAAP,SAAiBC,GAAjB,WACI/K,KAAKgL,UAAY/M,EAAUsB,UAAU0L,WACrCjL,KAAKgL,UAAUE,OAAQ,IAAAvI,KAAI3C,KAAK2K,gBAAkB3K,KAAKgL,UAAUzJ,MAAOvB,KAAK4K,iBAAmB5K,KAAKgL,UAAUxJ,QAE/GxB,KAAKyD,aAAc9B,GAAgBC,gBAAgBmJ,EAAOtH,aAAc,IAExEsH,EAAOjD,YAAYzB,SAAQ,SAAAoC,GACvB/D,QAAQC,IAAI,iCAAmC8D,GAC/C,EAAKoC,kBAAkBM,KAAKxJ,GAAgBC,gBAAgBiH,EAAgBJ,GAAI,SAIjF,YAAA7E,UAAP,SAAkBC,EAA+BC,GAC7C9D,KAAKgL,UAAU9G,KAAKL,EAAK,EAAE,GAC3B7D,KAAKyD,aAAaS,KAAKL,EAAK7D,KAAK2K,gBAAkB,EAAI3K,KAAKyD,aAAalC,MAAM,GAE/EvB,KAAK6K,kBAAkB,GAAG3G,KAAKL,EAAK,EAAE,IAElC7D,KAAK6K,kBAAkB3E,QAAU,GACjClG,KAAK6K,kBAAkB,GAAG3G,KAAKL,EAAK,GAAG,IAGvC7D,KAAK6K,kBAAkB3E,QAAU,GACjClG,KAAK6K,kBAAkB,GAAG3G,KAAKL,EAAK,EAAG,IAGvC7D,KAAK6K,kBAAkB3E,QAAU,GACjClG,KAAK6K,kBAAkB,GAAG3G,KAAKL,EAAK,GAAI,KAGpD,EAtCA,CAAgC,EAAAuH,e,ydC1DhC,0E,OACY,EAAAC,mBAA6B,IAE9B,EAAAvD,YAAwB,GAExB,EAAA/D,aAAuB,EAEvB,EAAAuH,SAAmB,EACnB,EAAAC,QAAkB,EAClB,EAAAC,UAAoB,E,EAyH/B,OAlIyB,OAWd,YAAAtK,aAAP,SAAoBN,GAApB,WACI,YAAMM,aAAY,UAACN,GAEnBZ,KAAKc,KAAKC,SAASC,KAAO,EAAAC,cAAA,QAC1BjB,KAAKc,KAAKC,SAAS0K,MAAQ,EAAAC,MAAA,IAAUlJ,GAAoBE,WAAYF,GAAoBE,YAIzF1C,KAAKc,KAAKC,SAASqG,GAAG,gBAAgB,SAACC,GACnC,IAAIsE,EAAatE,EAAEC,MAAMxG,KAAKyG,MAE9B,GAAI,EAAKxD,YAAa,CAIlB,GAAK,EAAK+D,YAAY5B,OAAS,GACvByF,aAAsBC,GACtBD,EAAWE,gBAAkBhO,EAAciO,cAC3C,EAAKP,OAAS,CAClB,IAAIQ,OAAO,EAEX,IAAK,IAAIC,KAAKtD,EACNA,EAAQsD,GAAGjE,iBAAiB,EAAKD,eACjCiE,EAAUrD,EAAQsD,IAItBD,IAAY,EAAKP,SACjBhJ,GAAoByJ,WAAW,EAAK5G,MAAO0G,EAAQtI,aAAcsI,EAAQtF,WAAYkF,EAAW/I,KAEhGJ,GAAoByJ,WAAW,EAAK5G,MAAOwD,EAAgBqD,MAAO,gBAAiBP,EAAW/I,KAGlG,EAAK+E,QAGL,EAAKG,YAAY5B,OAAS,GACtByF,aAAsBC,GACtBD,EAAWE,gBAAkBhO,EAAcuB,UAC/C,EAAKuI,QAMTgE,aAAsBQ,GAAY,EAAKpI,aAAe4H,EAAW5H,cAChE,EAAKsB,MAAoBsB,eAAegF,GACzC1N,EAAUuB,MAAM4M,KAAK,IACrBT,EAAWlG,OACX,EAAKkC,aAKT,YAAA0E,SAAR,SAAiBxL,GAAjB,WACiBb,KAAKqF,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,aAAa4J,GACb5J,EAAE6J,gBAAkBhO,EAAcqB,OAClC,EAAK4B,KAAKC,SAASuL,QAAQtK,EAAElB,KAAKC,WAClC,EAAK+G,YAAY5B,OAAS,IACV,IAAhB,EAAKzF,UAErCyF,OAAS,IAChBlG,KAAKsL,UAAYzK,GAEZb,KAAKuL,QACNvL,KAAKsL,SAAWtL,KAAK8H,YAAY5B,OAASlG,KAAKqL,qBAC/CrL,KAAKuL,QAAS,GAGdvL,KAAKuL,SAAWvL,KAAKwL,UACrBxL,KAAKsL,SAAWtL,KAAK8H,YAAY5B,OAASlG,KAAKqL,mBAAqB,IACpErL,KAAKwL,UAAW,KAKpB,YAAA7D,MAAR,WACI3H,KAAK8H,YAAc,GACnB9H,KAAKwL,UAAW,EAChBxL,KAAKuL,QAAS,EACdvL,KAAKsL,SAAW,GAGb,YAAA3K,YAAP,SAAmBC,EAAgBC,GAC/Bb,KAAKqM,SAASxL,GAGTb,KAAK+D,YAaF/D,KAAKuM,gBAAgBhB,WACrBvL,KAAK+D,aAAc,GAbnB/D,KAAKwL,SACLxL,KAAKmC,WAAW,UACTnC,KAAKuL,OACZvL,KAAKmC,WAAW,QACTnC,KAAKsL,SAAW,EACvBtL,KAAKmC,WAAW,WACTnC,KAAK8H,YAAY5B,OAAS,EACjClG,KAAKmC,WAAW,UAEhBnC,KAAKmC,WAAW,UASrB,YAAAqK,OAAP,SAAc5J,EAAaV,GAKvB,OAJAlC,KAAK+D,aAAc,EACnB/D,KAAK4C,IAAMA,EACX5C,KAAKmC,WAAW,UAERD,GACJ,IAAK,IACDlC,KAAKuM,gBAAgBE,gBAAiB,EACtC,MACJ,QACIzM,KAAKuM,gBAAgBE,gBAAiB,IAGtD,EAlIA,CAAyBtL,GCGzB,4BAkPA,OA9OkB,EAAAuL,uBAAd,SAAsCrH,EAAasH,EAAaC,EAAaC,EAAatL,EAAcuL,GACpG,IAAIC,EAAQ,IAAI,EAAAC,MAAML,EAAMC,EAAO5M,KAAKyC,UAAWoK,EAAO7M,KAAK0C,YAS/D,OARAqK,EAAME,SAAW1L,EAAQvB,KAAKyC,UAC9BsK,EAAMG,UAAY,EAAAC,UAAA,OAClBJ,EAAMD,MAAQA,EACdC,EAAMK,SAAW,GAGjB/H,EAAMC,IAAIyH,GAEHA,GAGG,EAAAM,eAAd,SAA6BhI,EAAciI,EAAuBV,EAAcC,GAC5E,OAAO7M,KAAKuN,WAAWlI,EAAOiI,EAASV,EAAMC,GAAM,EAAM,IAG/C,EAAAW,qBAAd,SAAmCnI,EAAciI,EAAuBV,EAAcC,GAClF,OAAO7M,KAAKuN,WAAWlI,EAAOiI,EAASV,EAAMC,GAAM,GAAQ,IAGjD,EAAAY,WAAd,SAAyBpI,EAAcqI,EAAgBxL,EAAe0K,EAAcC,GAChF,IAAIc,EAAI3N,KAAKuN,WAAWlI,EAAOqI,EAAQd,EAAMC,GAAM,GAAQ,GAE3D,OADAc,EAAEzL,OAASA,EACJyL,GAGI,EAAAJ,WAAf,SAA0BlI,EACAiI,EACAV,EAAcC,EACde,EACAC,GACtB,IAAInI,EAAI,IAAI,EAAA3F,MAAM,CACdsF,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,KAAK,IAAAD,KAAIiK,EAAO5M,KAAKyC,UAAWoK,EAAO7M,KAAK0C,cAGhD,GAAI4K,aAAmB,EAAAQ,MACnBpI,EAAEoH,MAAQQ,MACP,CACH,IAAIS,EAAS/N,KAAKyC,UAAY6K,EAAQ/L,MAClCyM,EAAShO,KAAK0C,WAAa4K,EAAQ9L,OACvC8L,EAAQpC,OAAQ,IAAAvI,KAAIoL,EAAQC,GAC5BtI,EAAEhE,WAAW4L,GAUjB,OAPAjI,EAAMC,IAAII,GACVA,EAAEjE,UAAUoM,GAERD,IACAlI,EAAE5E,KAAKC,SAASC,KAAO,EAAAC,cAAA,OAGpByE,GAGG,EAAAuI,8BAAd,SAA4C5I,EACAuH,EACAC,EACA9F,EACAmH,GAExCxJ,QAAQC,IAAI,uBAAyBoC,GAErC,IAAIrB,EAAI,IAAIyI,EAAkB,CAC1B9I,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,KAAK,IAAAD,KAAIiK,EAAO5M,KAAKyC,UAAWoK,EAAO7M,KAAK0C,cAGhD,GAAIwL,EAAe,CACf,IAAIH,EAAS/N,KAAKyC,UAAYyL,EAAc3M,MACxCyM,EAAShO,KAAK0C,WAAawL,EAAc1M,OAC7C0M,EAAchD,OAAQ,IAAAvI,KAAIoL,EAAQC,GAClCtI,EAAEhE,WAAWwM,GAMjB,OAHAxI,EAAEoB,aAAaC,EAAgB8B,EAAgB9B,IAE/C1B,EAAMC,IAAII,GACHA,GAGG,EAAAkC,2BAAd,SAA0CvC,EAAcqI,EAAelH,EAAaoG,EAAcC,GAC9F,IAAMuB,EAAY,IAEd1I,EAAI,IAAI2I,EAAW,CACnBhJ,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,KAAK,IAAAD,KAAIiK,EAAMC,KAGnBxH,EAAMC,IAAII,GACVA,EAAEjE,UAAU,IAEZ,IAAI6M,EAAM3M,GAAgBC,gBAAgB8L,EAAQU,GAOlD,OALA1I,EAAEhE,WAAW4M,GACb5I,EAAEc,KAAOA,EACTd,EAAE5E,KAAKC,SAAS0K,MAAQ,EAAAC,MAAA,IAAUhG,EAAEnE,MAAQ6M,EAAW1I,EAAElE,OAAS4M,GAClE1I,EAAE5E,KAAKC,SAASC,KAAO,EAAAC,cAAA,MAEhByE,GAGG,EAAA6I,uBAAd,SAAqClJ,EAAcqI,EAAelH,EAAaoG,EAAcC,GACzF,IAAI2B,EAAW5B,EAAO5M,KAAKyC,UAAWgM,EAAW5B,EAAO7M,KAAK0C,WAC7D,OAAO1C,KAAK4H,2BAA4BvC,EAAOqI,EAAQlH,EAAMgI,EAAUC,IAG7D,EAAAxC,WAAd,SAAyB5G,EAAcqI,EAAelH,EAAakI,GAC/D,IAEIhJ,EAAI,IAAIa,EAAK,CACblB,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,IAAK8L,IAGTrJ,EAAMC,IAAII,GACVA,EAAEjE,UAAU,IAEZ,IAAI6M,EAAM3M,GAAgBC,gBAAgB8L,EAZxB,IAmBlB,OALAhI,EAAEhE,WAAW4M,GACb5I,EAAEc,KAAOA,EACTd,EAAE5E,KAAKC,SAAS0K,MAAQ,EAAAC,MAAA,IAhBN,GAgBgBhG,EAAEnE,MAhBlB,GAgBqCmE,EAAElE,QACzDkE,EAAE5E,KAAKC,SAASC,KAAO,EAAAC,cAAA,MAEhByE,GAGG,EAAAiJ,sBAAd,SAAoCtJ,EAAcrE,EAAoB4L,EAAcC,GAChF,IAEIa,EAFEU,EAAY,IAGd1I,EAAI,IAAIkG,EAAU,CAClBvG,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,KAAK,IAAAD,KAAIiK,EAAO5M,KAAKyC,UAAWoK,EAAO7M,KAAK0C,cAGhD,OAAQ1B,GACJ,KAAKnD,EAAcqB,MACfwO,EAASzP,EAAUiB,MAAM+L,WACzB,MACJ,KAAKpN,EAAciO,aACf4B,EAASkB,EAAkBC,KAC3B,MACJ,KAAKhR,EAAcuB,SACfsO,EAASzP,EAAUmB,SAAS6L,WAC5BvF,EAAE5E,KAAKC,SAAS0K,MAAQ,EAAAC,MAAA,IAAUhG,EAAEnE,MAAQ6M,EAAW1I,EAAElE,OAAS4M,GAClE1I,EAAE5E,KAAKC,SAASC,KAAO,EAAAC,cAAA,MACvB,MACJ,QACI,MAAM,IAAI6N,MAAM,+BAAiC9N,GAGzDqE,EAAMC,IAAII,GACVA,EAAEjE,UAAU,IAEZ,IAAI6M,EAAM3M,GAAgBC,gBAAgB8L,EAAQU,GAKlD,OAHA1I,EAAEhE,WAAW4M,GACb5I,EAAEmG,cAAgB7K,EAEX0E,GAGG,EAAAqJ,gBAAd,SAA8B1J,EAAczE,EAAegM,EAAcC,GACrE,IAAMuB,EAAY,IAEd1I,EAAI,IAAIsJ,GAAI,CACZ3J,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,KAAK,IAAAD,KAAIiK,EAAO5M,KAAKyC,UAAWoK,EAAO7M,KAAK0C,cAGhD2C,EAAMC,IAAII,GACVA,EAAEjE,UAAU,IAEZ,IAAIwN,EAAmB,IAAI,EAAA9O,YAAY,CACnCC,MAAOnC,EAAUS,UACjB2B,KAAM,EACNC,QAAS,EACTC,QAAS,GACTC,SAAU,KAGV+L,EAAkB5K,GAAgBE,mBAAmBjB,EAAQqO,EAAkB,EAAE,EAAGb,EAAW,KACnG7B,EAAgB2C,MAAO,EACvBxJ,EAAE6G,gBAAkBA,EAEpB,IAAI4C,EAAOxN,GAAgBC,gBAAgB3D,EAAUU,SAASsM,WAAYmD,GACtEgB,EAAOzN,GAAgBC,gBAAgB3D,EAAUW,UAAUqM,WAAYmD,GACvEiB,EAAO1N,GAAgBC,gBAAgB3D,EAAUa,QAAQmM,WAAYmD,GACrEkB,EAAO3N,GAAgBC,gBAAgB3D,EAAUc,UAAUkM,WAAYmD,GAEvEmB,EAAe,IAAI,EAAApP,YAAY,CAC/BC,MAAOnC,EAAUY,WACjBwB,KAAK,EACLC,QAAQ,EACRC,QAAQ,GACRC,SAAS,IAGTgP,EAAQ7N,GAAgBE,mBAAmBjB,EAAQ2O,EAAc,EAAE,EAAEnB,EAAU,IASnF,OAPA1I,EAAEhE,WAAW,QAASyN,GACtBzJ,EAAEhE,WAAW,SAAU0N,GACvB1J,EAAEhE,WAAW,SAAU6K,GACvB7G,EAAEhE,WAAW,UAAW8N,GACxB9J,EAAEhE,WAAW,SAAU4N,GACvB5J,EAAEhE,WAAW,OAAQ2N,GAEd3J,GAGG,EAAA+J,eAAd,SAA6BpK,EAAcqJ,GACvC,IAAIhJ,EAAI,IAAIyG,EAAS,CACjB9G,MAAOA,EACP9D,MAAOvB,KAAKyC,UACZjB,OAAQxB,KAAK0C,WACbE,IAAK8L,IAMT,OAHArJ,EAAMC,IAAII,GACVA,EAAEjE,UAAU,IAELiE,GA/OJ,EAAAjD,UAAY,GACZ,EAAAC,WAAa,GAgPxB,EAlPA,GCXA,4BAmBA,OAlBkB,EAAAb,mBAAd,SAAkCjB,EAAe8O,EAAyBC,EAAmBC,EAAiBC,EAAwBhN,QAAxB,IAAAgN,MAAA,QAAwB,IAAAhN,MAAA,KAClI,IAAI6C,EAAcgK,EAAYI,oBAAoBlP,EAAQ+O,EAAYC,EAAU/M,GAE5EkL,EAASvL,GAAoBE,WAAagD,EAAEnE,MAAQsO,EACpD7B,EAASxL,GAAoBE,WAAagD,EAAElE,OAASqO,EAGzD,OAFAnK,EAAEwF,OAAQ,IAAAvI,KAAIoL,EAAQC,GAEftI,GAGG,EAAA9D,gBAAd,SAA+B8L,EAAemC,QAAA,IAAAA,MAAA,GAC1C,IAAI9B,EAASvL,GAAoBE,WAAagL,EAAOnM,MAAQsO,EACzD7B,EAASxL,GAAoBE,WAAagL,EAAOlM,OAASqO,EAC1DE,EAAOrC,EAAOvK,QAGlB,OAFA4M,EAAK7E,OAAQ,IAAAvI,KAAIoL,EAAQC,GAElB+B,GAEf,EAnBA,G,0dCQA,4BA2JA,OAvJmB,EAAAC,aAAf,SAA4BC,EAAiBrD,EAAcC,GACvD,IAAIqD,EAAK,IAAIC,GAAwB,CACjC5O,MAAMvB,KAAKoQ,UACX5O,OAAQxB,KAAKqQ,WACbzN,KAAK,IAAAD,KAAIiK,EAAKC,KAKlB,OAFAqD,EAAGxO,WAAW,UAAWC,GAAgBC,gBAAgBqO,EAAS,MAE3DC,GAGI,EAAAI,cAAf,SAA6B3D,EAAcC,EAAcC,EAAcI,GACnE,IAAIiD,EAAK,IAAIC,GAAwB,CACjC5O,MAAMvB,KAAKoQ,UACX5O,OAAQxB,KAAKqQ,WACbzN,KAAK,IAAAD,KAAIiK,EAAKC,KAGdE,EAAQ,IAAI,EAAAC,MAAML,EAAM,EAAG,GAK/B,OAJAI,EAAMK,SAAW,GACjBL,EAAME,SAAWA,EACjBiD,EAAG5K,IAAIyH,GAEAmD,GAGI,EAAAK,qBAAf,SAAqCC,EAAiBC,EAAkB7D,EAAaC,GACjF,IAAIqD,EAAK,IAAIC,GAAwB,CACjC5O,MAAMvB,KAAKoQ,UACX5O,OAAQxB,KAAKqQ,WACbzN,KAAK,IAAAD,KAAIiK,EAAKC,KAMlB,OAHAqD,EAAGxO,WAAW,KAAMC,GAAgBC,gBAAgB4O,EAAU,KAC9DN,EAAGxO,WAAW,MAAOC,GAAgBC,gBAAgB6O,EAAW,KAEzDP,GAGG,EAAAQ,WAAd,SAA0BrL,GACtB,IAAIsL,EAAc3Q,KAAKuQ,qBAAqBlN,EAAmBuN,aAAcvN,EAAmBwN,gBAAiBC,OAAOC,WAAa,IAAK,IAC1IJ,EAAYK,YAAc,QAC1BL,EAAY3O,GAAK,IACjB2O,EAAY1O,EAAI,GAEhB0O,EAAYvJ,GAAI,aAAa,SAAC6J,GAC1B5L,EAAM6L,cACNxM,QAAQC,IAAI,wBACRwM,GAAKC,UACLT,EAAYxO,WAAW,OAEvBwO,EAAYxO,WAAW,SAI/BkD,EAAMC,IAAIqL,GAENQ,GAAKC,WACLT,EAAYxO,WAAW,OAG3B,IAAIkP,EAAMrR,KAAKgQ,aAAanH,EAAgByI,MAAOR,OAAOC,WAAa,IAAK,IAC5EM,EAAIL,YAAc,QAClBK,EAAIrP,GAAK,IACTqP,EAAIpP,EAAI,GACRoP,EAAI7K,KAAO,MACX6K,EAAI3P,WAAW,OAAQC,GAAgBC,gBAAgBiH,EAAgB0I,WAAY,MAEnF,IAAIC,EAAMxR,KAAKgQ,aAAanH,EAAgByI,MAAOR,OAAOC,WAAa,GAAI,IAC3ES,EAAIR,YAAc,QAClBQ,EAAIxP,GAAK,GACTwP,EAAIvP,EAAI,GACRuP,EAAIhL,KAAO,MACXgL,EAAI9P,WAAW,OAAQC,GAAgBC,gBAAgBiH,EAAgB0I,WAAY,MAEnF,IAAIE,EAAMzR,KAAKgQ,aAAanH,EAAgByI,MAAOR,OAAOC,WAAa,GAAI,IAC3EU,EAAIT,YAAc,QAClBS,EAAIzP,GAAK,GACTyP,EAAIxP,EAAI,GACRwP,EAAIjL,KAAO,MACXiL,EAAI/P,WAAW,OAAQC,GAAgBC,gBAAgBiH,EAAgB0I,WAAY,MAEnFlM,EAAMC,IAAK+L,GACXhM,EAAMC,IAAKkM,GACXnM,EAAMC,IAAKmM,GAEX,IAAIC,EAAY1R,KAAKsQ,cAAc,mBAAoB,EAAG,EAAG,KAC7DoB,EAAUV,YAAc,QACxBU,EAAU1P,GAAK,IACf0P,EAAUzP,EAAI,IACdyP,EAAUlL,KAAO,YACjBnB,EAAMC,IAAIoM,GAEV,IAAIC,EAAQ,IAAIC,GAAQ,IACxBD,EAAME,WAAW1G,KAAKwF,GACtBgB,EAAME,WAAW1G,KAAKkG,GACtBM,EAAME,WAAW1G,KAAKqG,GACtBG,EAAME,WAAW1G,KAAKsG,GACtBE,EAAME,WAAW1G,KAAKuG,GAEtBrM,EAAMC,IAAIqM,GACVA,EAAMhK,SAGI,EAAAmK,kBAAd,SAAiCzM,EAAiB0M,GAC9C,IAAIC,EAAiBhS,KAAKgQ,aAAa/R,EAAU0B,eAAesL,WAAY6F,OAAOC,WAAa,EAAGD,OAAOmB,YAAc,GACxHD,EAAehB,YAAc,QAC7BgB,EAAeE,YAAc,SAC7BF,EAAe/P,GAAK,IACpB+P,EAAehQ,GAAK,IAEpBgQ,EAAe9G,OAAQ,IAAAvI,KAAI,EAAE,GAE7B0C,EAAMC,IAAI0M,GAEV,IAAIL,EAAQ,IAAIC,GAAQ,IACxBD,EAAME,WAAW1G,KAAK6G,GACtB3M,EAAMC,IAAIqM,GACVA,EAAMhK,QAENqK,EAAe5K,GAAG,aAAa,SAACC,GACxB2K,EAAe3M,QAAU8L,GAAKgB,YAAYC,eAC1CjB,GAAKgB,YAAYE,UAAUN,GAC3BrN,QAAQC,IAAI,gCAKV,EAAA2N,WAAd,SAA0BjN,EAAmBzE,GACzC,IAAI2R,EAAgBvS,KAAKgQ,aAAa/R,EAAUwB,cAAcwL,WAAY6F,OAAOC,WAAa,EAAGD,OAAOmB,YAAc,GACtHM,EAAcvB,YAAc,SAC5BuB,EAAcL,YAAc,SAC5BK,EAActQ,EAAI,GAElBsQ,EAAcrH,OAAQ,IAAAvI,KAAI,EAAE,GAE5B0C,EAAMC,IAAIiN,GACV,IAAIZ,EAAQ,IAAIC,GAAQ,IACxBD,EAAME,WAAW1G,KAAKoH,GACtBlN,EAAMC,IAAIqM,GACVA,EAAMhK,QAEN4K,EAAcnL,GAAG,aAAa,SAACC,GACvB8J,GAAKgB,YAAYC,wBAAwBI,KACzCnN,EAAMoN,UAAUvR,aAAaN,GAC7BA,EAAOyR,UAAUhN,EAAMoN,UAAUC,WACjChO,QAAQC,IAAI,+BAtJT,EAAAyL,UAAmB,GACnB,EAAAC,WAAoB,GAyJvC,EA3JA,GA6JA,0E,OACW,EAAArO,EAAW,EACX,EAAAC,EAAW,E,EAItB,OAN6C,QAM7C,EANA,CAA6C,EAAAmJ,eAO7C,eAGI,WAAapG,GAAb,MACI,YAAM,CACFA,SAASA,EACTG,SAAS,KACX,K,OANC,EAAA0M,WAAuC,GAQ1C,EAAKzK,GAAG,EAAKuL,U,EA+DrB,OAxE6B,QAYjB,YAAAA,SAAR,WACI3S,KAAK6R,WAAWxL,SAAQ,SAAAuM,GACpB,IAAIhG,EAAaC,EAEjB,GAAI+F,EAAQ5B,YACR,OAAO4B,EAAQ5B,aACX,IAAK,QACDpE,EAAOkE,OAAOC,WAAa6B,EAAQ5Q,EACnC,MACJ,IAAK,OACD4K,EAAOgG,EAAQ5Q,EACf,MACJ,IAAK,SACD4K,EAAQkE,OAAOC,WAAa,EAAM6B,EAAQrR,MAAQ,EAAKqR,EAAQ5Q,OAIvE4K,EAAOgG,EAAQ5Q,EAGnB,GAAI4Q,EAAQV,YACR,OAAOU,EAAQV,aACX,IAAK,SACDrF,EAAOiE,OAAOmB,YAAcW,EAAQ3Q,EACpC,MACJ,IAAK,MACD4K,EAAO+F,EAAQ3Q,EACf,MACJ,IAAK,SACD4K,EAAQiE,OAAOmB,YAAc,EAAMW,EAAQpR,OAAS,EAAKoR,EAAQ3Q,OAIzE4K,EAAO+F,EAAQ3Q,EAKnB,GAFA2Q,EAAQhQ,KAAM,IAAAD,KAAIiK,EAAMC,GAEpB+F,EAAQpM,MAAQoM,EAAQpM,KAAKqM,WAAW,MAAO,CAC/C,IAAIC,EAAOF,EAAQvN,MAAoBQ,OAAOkN,GAEzB,QAAjBH,EAAQpM,MAAkBsM,EAAM,GAEP,QAAjBF,EAAQpM,MAAkBsM,EAAM,EADxCF,EAAQzQ,WAAW,QAInByQ,EAAQzQ,WAAW,WAI3B,GAAqB,cAAjByQ,EAAQpM,KAAsB,CAC9B,IAAIwM,EAAIJ,EAAQK,SAAS,GAErBD,GAAKA,aAAa,EAAAhG,QAElBgG,EAAErG,KAAO,mBAAsBiG,EAAQvN,MAAoBG,uBAK/E,EAxEA,CAA6B,EAAAqB,O,0dC3K7B,4B,+CAYA,OAZiC,QAG7B,YAAA3F,aAAA,SAAaN,GACTA,EAAOsS,gBAAkB,EAAApF,MAAA,MAEzBqF,GAASb,WAAWtS,KAAMY,IAGvB,YAAAD,YAAP,SAAoBC,GAChBA,EAAOsS,gBAAkB,EAAApF,MAAA,OAEjC,EAZA,CAAiC,EAAAsF,O,0dCUjC,eACI,mBACI,YAAM,CACFxQ,KAAK,IAAAD,KAAI,IAAK,KACdpB,MAAO,GACPC,OAAQ,GACRsL,MAAO,IAAI,EAAAgB,MAAM,IAAK,IAAK,QAC7B,K,OAGI,EAAA1M,YAAsB,GAExB,EAAAiS,YAAsB,GAEtB,EAAAC,aAAe,EAEhB,EAAAP,GAAY,E,EAyMvB,OAzN4B,QAkBxB,YAAA7R,aAAA,SAAaN,GACTZ,KAAKsB,QAAUrD,EAAUK,cAEzB0B,KAAKc,KAAKC,SAASC,KAAO,EAAAC,cAAA,OAC1BjB,KAAKc,KAAKC,SAAS0K,MAAQ,EAAAC,MAAA,IAAUlJ,GAAoBE,WAAa1C,KAAKqT,YAAa7Q,GAAoBE,WAAa1C,KAAKqT,aAE9H,YAAMnS,aAAY,UAACN,IAGhB,YAAAwF,KAAP,WACI,GAAIpG,KAAKsT,cAAgB,IAErBtT,KAAKsT,aAAe,IACpBtT,KAAK+S,IAAM,EACX/S,KAAKqE,QAAQkP,MAAM,GAAG,GAAGvT,KAAKsT,aAAa,IAEvCtT,KAAK+S,IAAM,GAAG,CACd,IAAIS,EAAarC,GAAKgB,YAAYsB,OAAjB,MAEbD,aAAsBhB,KACtBgB,EAAWf,UAAYzS,KAAKqF,MAC5B8L,GAAKgB,YAAYE,UAAU,YAMpC,YAAA1R,YAAP,SAAmBC,EAAgBC,GAC/B,YAAMF,YAAW,UAACC,EAAQC,GAEtBb,KAAKsT,aAAe,IACpBtT,KAAKsT,cAAgBzS,GAGzB,IAAI6S,GAAY,EA6ChB,GA3CI1T,KAAK2T,oBAAoB3E,KACzB0E,EAAY1T,KAAK2T,SAAS5P,aAGzB2P,EAMD1T,KAAK+B,KAAM,IAAAY,KAAI,EAAG,IALlB3C,KAAK4T,WAAWhT,GAGhBZ,KAAK8B,YAQJ4R,IACG1T,KAAK2T,WACL3T,KAAK2T,SAAS/Q,KAAM,IAAAD,KAAI3C,KAAK4C,IAAIZ,EAAGhC,KAAK4C,IAAIX,EAAI,KAGjDrB,EAAOiT,MAAMC,SAASC,WAAW,EAAAC,MAAA,cAC5BhU,KAAK2T,SAGN3T,KAAKiU,iBAFLjU,KAAKkU,iBAMTtT,EAAOiT,MAAMC,SAASC,WAAW,EAAAC,MAAA,SAC7BhU,KAAK2T,oBAAoB3E,IACzBhP,KAAK2T,SAASnH,OAAOxM,KAAKoC,mBAAmB,IAAMpC,KAAKkC,QAI5DtB,EAAOiT,MAAMC,SAASC,WAAW,EAAAC,MAAA,SACjChU,KAAKmU,WAOTvT,EAAOiT,MAAMC,SAASC,WAAW,EAAAC,MAAA,gBAAuB,CACxD,IAAII,EAAMC,OAAO,aAAc,cAC3BD,GACAxT,EAAOyR,UAAU+B,KAMrB,YAAAR,WAAR,SAAmBhT,GACf,IAAI0T,EAAe,EAAGC,EAAe,EAEjC3T,EAAOiT,MAAMC,SAASrT,OAAO,EAAAuT,MAAA,UAC7BO,GAAQ,GAGR3T,EAAOiT,MAAMC,SAASrT,OAAO,EAAAuT,MAAA,UAC7BO,GAAQ,GAGR3T,EAAOiT,MAAMC,SAASrT,OAAO,EAAAuT,MAAA,UAC7BM,GAAQ,GAGR1T,EAAOiT,MAAMC,SAASrT,OAAO,EAAAuT,MAAA,UAC7BM,GAAQ,GAGZ,IAAIE,EAASC,KAAKC,KAAKD,KAAKE,IAAIL,GAAQG,KAAKE,IAAIJ,IAE7CK,EAAeL,EAAOC,EAASxU,KAAKqB,UACpCwT,EAAeP,EAAOE,EAASxU,KAAKqB,UAGpCrB,KAAK+B,IADLyS,EAAS,GACE,IAAA7R,KAAIkS,EAAcD,IAElB,IAAAjS,KAAI,EAAG,IAIlB,YAAAsR,eAAR,sBACQa,EAAO9U,KAAKoC,mBAAmB,GAOnC,GAJSpC,KAAKqF,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,aAAa4J,GACb5J,EAAE6J,gBAAkBhO,EAAcuB,UAClC4C,EAAE0E,SAASoO,EAAK9S,EAAG8S,EAAK7S,MAExDiE,OAAS,GAAKlG,KAAK2T,SAASjT,aAG/B,OAFAV,KAAK2T,SAASlO,YACdzF,KAAK2T,SAAW,MAKpB,IAAIoB,EAAO/U,KAAKqF,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,aAAagN,IACE,IAAfhN,EAAEsJ,UACFtJ,EAAE0E,SAASoO,EAAK9S,EAAG8S,EAAK7S,MAEjE,GAAIjC,KAAK2T,oBAAoBtF,GAAc0G,EAAK7O,OAAS,EAMrD,OALQ6O,EAAK,GACXjN,YAAYqD,KAAKnL,KAAK2T,SAASnN,MACjCxG,KAAK2T,SAASlO,YACdzF,KAAK2T,SAAW,MAUG,IALT3T,KAAKqF,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,aAAab,KACnDa,aAAagN,OACbhN,IAAM,EAAK2R,WACb3R,EAAE0E,SAASoO,EAAK9S,EAAG8S,EAAK7S,MAEhBiE,SACRlG,KAAK2T,SAAS/Q,IAAMkS,EACpB9U,KAAK2T,SAASlT,QAAS,EACvBT,KAAK2T,SAAW,OAIhB,YAAAO,cAAR,sBACe,CAAClU,KAAKoC,mBAAmB,KAAOpC,KAAKoC,mBAAmB,KAAOpC,KAAKoC,mBAAmB,MAE7FiE,SAAQ,SAAAzD,GACT,IAAIoS,EAAU,EAAK3P,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAAAA,aAAab,GACrDa,EAAE0E,SAAS9D,EAAIZ,EAAGY,EAAIX,MAE1B,GAAI+S,EAAQ9O,OAAS,EAGjB,OAFA,EAAKyN,SAAWqB,EAAQ,QACxB,EAAKrB,SAASlT,QAAS,OAM3B,YAAA0T,QAAR,WACI,IAAIW,EAAO9U,KAAKoC,mBAAmB,KAI/B6S,EAHUjV,KAAKqF,MAAMiB,OAAON,QAAO,SAAAhE,GAAK,OAACA,aAAab,GAAQa,aAAa4J,IAC3E5J,EAAE0E,SAASoO,EAAK9S,EAAG8S,EAAK7S,MAET,GAEfgT,IACIA,aAAgBjG,IAChBkG,MAAM,sBAAwBjN,KAAKC,UAAU+M,EAAKnN,cAGlDmN,aAAgB5G,GAChB6G,MAAM,eAAiBD,EAAKzO,MAG5ByO,aAAgBrJ,GAChBsJ,MAAM,cAAgBD,EAAKpJ,eAG3BoJ,aAAgB1O,GAChB2O,MAAM,SAAWD,EAAKzO,QAItC,EAzNA,CAA4BI,G,0dCJ5B,0E,OAEc,EAAAuO,cAAuB,GACvB,EAAAC,MAAgB,GACnB,EAAAC,UAAuB,GACpB,EAAAC,mBAA4B,IAC5B,EAAAC,uBAAyB,IACzB,EAAAC,mBAAqB,KAUxB,EAAAC,YAAqB,EACrB,EAAAjQ,iBAA0B,G,EAuIrC,OAzJwC,QAoBpC,YAAAmB,eAAA,SAAevB,GACXpF,KAAKqV,UAAYrV,KAAKqV,UAAUrP,QAAQ,SAAAhE,GAAK,OAAAA,GAAKoD,MAG/C,YAAAsQ,aAAP,SAAqBC,EAAgBC,GACjC,YAAMF,aAAY,UAACC,EAAUC,GAC7B5V,KAAK6V,WAAWC,QAGb,YAAA5U,aAAP,SAAoBN,GAChBZ,KAAKsG,OAAOD,SAAQ,SAAAX,GAChBA,EAAED,UAGN0N,GAASzC,WAAW1Q,MAEpBA,KAAK6F,OAAS,IAAIkQ,GAClB/V,KAAKsF,IAAItF,KAAK6F,QAEd7F,KAAKgW,OAAOC,SAASC,YAAYlW,KAAK6F,QACtC7F,KAAK6V,WAAa5X,EAAUM,WAC5ByB,KAAK6V,WAAW3G,MAAO,EAElBiC,GAAKC,WACNpR,KAAK6V,WAAWzJ,OAGpBpM,KAAKmW,oBACLnW,KAAKoW,qBACLpW,KAAKqW,qBACLrW,KAAKsW,gBACLtW,KAAKuW,QAAQ3V,GACbZ,KAAKwW,WACLxW,KAAKyW,mBAEL,IAAK,IAAIhO,EAAI,EAAGA,EAAIzI,KAAK0W,eAAexQ,OAAQuC,IAAK,CACjD/D,QAAQC,IAAI,mBAAqB3E,KAAK0W,eAAejO,GAAGhC,YAExD,IAAIf,EAAI,IAAIiR,EAAY,CACpB/T,KAAK,IAAAD,KAAI,GAAS,IAAJ8F,EAAS,MAG3B/C,EAAEoF,UAAU9K,KAAK0W,eAAejO,IAChCzI,KAAKsF,IAAII,GAGb9E,EAAOsS,gBAAkB,IAAI,EAAApF,MAAM,IAAK,IAAK,MAG1C,YAAAnN,YAAP,SAAmBC,EAAeC,GAAlC,WACI,GAAIb,KAAKqV,UAAUnP,OAASlG,KAAKmV,cAAcjP,OAAQ,CACnDxB,QAAQC,IAAI,UAAY3E,KAAKmV,cAAcjP,OAASlG,KAAKqV,UAAUnP,QAAU,gBAE7E,IAAI0Q,EAAI5W,KAAKsV,mBAAqB,EAC9BuB,EAAI7W,KAAKsV,oBAAsB,EAAE,GACjC7M,EAAImO,EAAInC,KAAKqC,SAAWD,EAExBE,EAAKtC,KAAKuC,MAAMvC,KAAKqC,SAAW9W,KAAKoV,MAAMlP,QAC3CrG,EAAOG,KAAKoV,MAAM2B,GAElB3R,EAAW5C,GAAoBiN,eAAezP,KAAMH,EAAK+C,KACzDqU,EAAejX,KAAKmV,cAAcnP,QAAO,SAAAhE,GAAK,OAAC,EAAKqT,UAAU6B,MAAK,SAAAC,GAAK,OAAAA,EAAE5S,OAASvC,QAAI,GAC3FoD,EAASb,KAAO0S,EAChB7R,EAASgS,SAAU,EAEnB,IAAIC,EAAK5C,KAAKuC,MAAMvC,KAAKqC,SAAW9W,KAAK0W,eAAexQ,QACxDd,EAAS5B,UAAYxD,KAAK0W,eAAeW,GACzCjS,EAASnB,eAAiBjE,KAAKuV,uBAC/BnQ,EAASnC,WAAajD,KAAKwV,mBAE3BxV,KAAKqV,UAAUlK,KAAK/F,GAEpB,IAAIkS,EAAa,IAAIC,GAAW,CAC5BvS,SAASyD,EACTtD,SAAQ,EACRF,IAAIjF,KAAKwX,gBAGbF,EAAWG,MAAQzX,KACnBsX,EAAWlS,SAAWA,EAEtBpF,KAAKsF,IAAIgS,GAELtX,KAAKwF,kBAAoB,IACzBxF,KAAK6V,WAAWC,OAEhB7X,EAAU6B,SAASsM,KAAK,GAAG3H,MAAM,WAC7B7D,EAAOyR,UAAU,EAAKN,iBAa9B,YAAAoE,kBAAR,WAGI,IAFA,IAAIuB,EAAczZ,EAAUyB,cAAcuL,WAEjCxC,EAAI,EAAGA,GAAKzI,KAAK2X,YAAalP,IACnCjG,GAAoB6K,eAAerN,KAAM0X,EAAajP,EAAG,GACzDjG,GAAoB6K,eAAerN,KAAM0X,EAAajP,EAAGzI,KAAK4X,cAGlE,IAASnP,EAAI,EAAGA,EAAIzI,KAAK4X,aAAcnP,IACnCjG,GAAoB6K,eAAerN,KAAM0X,EAAa,EAAGjP,GACzDjG,GAAoB6K,eAAerN,KAAM0X,EAAa1X,KAAK2X,YAAalP,IAIzE,YAAAyI,YAAP,WACIC,GAAKC,WAAaD,GAAKC,UAEnBD,GAAKC,UACLpR,KAAK6V,WAAWC,OAEhB9V,KAAK6V,WAAWzJ,QAId,YAAAoL,cAAV,WACI,IAAI7F,EAAS3R,KAET2R,IACAA,EAAM8F,MAAMnS,IAAIqM,EAAMvM,UACtBuM,EAAMvM,SAASjB,aACfwN,EAAMvM,SAASgS,SAAU,IAGrC,EAzJA,CAAwC,EAAAhE,OA2JxC,4B,+CAGA,OAHgC,QAGhC,EAHA,CAAgC,EAAAvM,O,0dC3JhC,0E,OACc,EAAAkL,UAAoB,EAAKW,UAEzB,EAAAiF,YAAsB,GACtB,EAAAC,aAAuB,GACvB,EAAAlB,eAA2B,CAAChO,EAAQO,UAEpC,EAAAsM,uBAAyB,IACzB,EAAAC,mBAAqB,IACrB,EAAAF,mBAAqB,EAExB,EAAA5C,UAAY,a,EAmEvB,OA9E+B,QAapB,YAAAxR,aAAP,SAAoBN,GAChB,YAAMM,aAAY,UAACN,GAGnBsU,MAAM,gOAGA,YAAAkB,mBAAV,WACI5T,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBiJ,gBAAiB,EAAG,GACrFrV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBmJ,iBAAkB,EAAG,GAEtFvV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBoJ,kBAAmB,EAAG,IACvFxV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBoJ,kBAAmB,EAAG,IACvFxV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBoJ,kBAAmB,GAAI,KAGlF,YAAA3B,mBAAV,WACI7T,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBsJ,wBAAyB,EAAG,GAEvF1V,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBuJ,yBAA0B,EAAG,GAExF3V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GAEpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkByJ,iBAAkB,EAAG,IAChF7V,GAAoB6K,eAAerN,KAAM4O,EAAkByJ,iBAAkB,EAAG,IAChF7V,GAAoB6K,eAAerN,KAAM4O,EAAkByJ,iBAAkB,GAAI,KAG3E,YAAA/B,cAAV,WACI9T,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,GACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAciO,aAAc,EAAG,GAC/EtJ,GAAoBmM,sBAAsB3O,KAAMnC,EAAcuB,SAAU,EAAG,IAErE,YAAAmX,QAAV,SAAkB3V,GACd4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,GACnD4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,IAG7C,YAAA4V,SAAV,WACIhU,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,SAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,YAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,WAGxD,YAAAyW,iBAAV,WAGIzW,KAAKmV,cAAchK,KAAK3I,GAAoBiL,WAAWzN,KAAM4O,EAAkB0J,SAAU,IAAK,EAAG,OAEjGtY,KAAKoV,MAAMjK,KAAK3I,GAAoB6K,eAAgBrN,KAAM/B,EAAUC,IAAI+M,WAAY,EAAG,KACvFjL,KAAKoV,MAAMjK,KAAK3I,GAAoB6K,eAAgBrN,KAAM/B,EAAUC,IAAI+M,WAAY,GAAI,MAEhG,EA9EA,CAA+BsN,I,0dCF/B,0E,OAKW,EAAA7F,UAAY,gB,EAsEvB,OA3EkC,QAOpB,YAAA0D,mBAAV,WACI5T,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBiJ,gBAAiB,EAAG,GACrFrV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBmJ,iBAAkB,EAAG,IAGhF,YAAA1B,mBAAV,WACI,IAAImC,EAAY,IAAI,EAAA1K,MAAM,IAAK,IAAK,KACpCtL,GAAoB6K,eAAerN,KAAMwY,EAAW,EAAG,GACvDhW,GAAoB6K,eAAerN,KAAMwY,EAAW,EAAG,GAEvDhW,GAAoB6K,eAAerN,KAAMwY,EAAW,EAAG,GACvDhW,GAAoB6K,eAAerN,KAAMwY,EAAW,EAAG,GAEvDhW,GAAoB6K,eAAerN,KAAM4O,EAAkB6J,YAAa,EAAG,GAC3EjW,GAAoB6K,eAAerN,KAAM4O,EAAkB8J,aAAc,EAAG,GAC5ElW,GAAoB6K,eAAerN,KAAM4O,EAAkB6J,YAAa,EAAG,GAC3EjW,GAAoB6K,eAAerN,KAAM4O,EAAkB+J,gBAAiB,EAAG,GAC/EnW,GAAoB6K,eAAerN,KAAM4O,EAAkBgK,eAAgB,EAAG,GAC9EpW,GAAoB6K,eAAerN,KAAM4O,EAAkBiK,iBAAkB,EAAG,GAChFrW,GAAoB6K,eAAerN,KAAM4O,EAAkBkK,sBAAuB,EAAG,GACrFtW,GAAoB6K,eAAerN,KAAM4O,EAAkBmK,uBAAwB,EAAG,GACtFvW,GAAoB6K,eAAerN,KAAM4O,EAAkBoK,uBAAwB,EAAG,GACtFxW,GAAoB6K,eAAerN,KAAM4O,EAAkBqK,UAAW,EAAG,IACzEzW,GAAoB6K,eAAerN,KAAM4O,EAAkB0J,SAAU,EAAG,IACxE9V,GAAoB6K,eAAerN,KAAM4O,EAAkBqK,UAAW,EAAG,IAEzEzW,GAAoB6K,eAAerN,KAAM4O,EAAkBsK,iBAAkB,EAAG,GAChF1W,GAAoB6K,eAAerN,KAAM4O,EAAkBuK,eAAgB,EAAG,GAC9E3W,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBsJ,wBAAyB,EAAG,GAGvF1V,GAAoB6K,eAAerN,KAAM4O,EAAkBwK,eAAgB,GAAI,GAC/E5W,GAAoB6K,eAAerN,KAAM4O,EAAkBuK,eAAgB,GAAI,GAC/E3W,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBuJ,yBAA0B,EAAG,GAExF3V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,IAE9E,YAAA9B,cAAV,WACI9T,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,GACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAciO,aAAc,EAAG,IAEzE,YAAAyK,QAAV,SAAkB3V,GACd4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,GACnD4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,IAG7C,YAAA4V,SAAV,WACIhU,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,QAAS6I,EAAgBwQ,OACvF7W,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,QAAS6I,EAAgByQ,UACvF9W,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,OAAQ6I,EAAgB0Q,MACtF/W,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,SAAU6I,EAAgB2Q,QACxFhX,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,QAAS6I,EAAgB4Q,QAGjF,YAAAhD,iBAAV,WACI,MAAM,IAAI3H,MAAM,oBAExB,EA3EA,CAAkCyJ,I,0dCAlC,0E,OACc,EAAAxG,UAAoB,WAEpB,EAAA4F,YAAsB,GACtB,EAAAC,aAAuB,GACvB,EAAAlB,eAA2B,CAAChO,EAAQO,SAAUP,EAAQM,OAAQN,EAAQC,YACzE,EAAA+J,UAAY,UACT,EAAA6C,uBAAyB,KACzB,EAAAC,mBAAqB,IACrB,EAAAF,mBAAqB,KAExB,EAAA9P,iBAAmB,E,EAiE9B,OA5E4B,QAad,YAAAiR,iBAAV,WACIzW,KAAKmV,cAAchK,KAAK3I,GAAoBiL,WAAWzN,KAAM4O,EAAkB0J,SAAU,IAAK,EAAG,IACjGtY,KAAKmV,cAAchK,KAAK3I,GAAoBiL,WAAWzN,KAAM4O,EAAkB0J,SAAU,IAAK,EAAG,IAEjGtY,KAAKoV,MAAMjK,KAAK3I,GAAoB6K,eAAgBrN,KAAM/B,EAAU2B,KAAKqL,WAAY,GAAI,KAEnF,YAAAmL,mBAAV,WACI5T,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBoJ,kBAAmB,EAAG,GACvFxV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBoJ,kBAAmB,EAAG,GAEvFxV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBkJ,kBAAmB,EAAG,GACvFtV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBmJ,iBAAkB,EAAG,GAEtFvV,GAAoBgL,qBAAqBxN,KAAM4O,EAAkB8K,sBAAuB,EAAG,IAErF,YAAArD,mBAAV,WACI7T,GAAoB6K,eAAerN,KAAM4O,EAAkByJ,iBAAkB,EAAG,GAChF7V,GAAoB6K,eAAerN,KAAM4O,EAAkByJ,iBAAkB,EAAG,GAEhF7V,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBsJ,wBAAyB,EAAG,GACvF1V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBwJ,qBAAsB,EAAG,GACpF5V,GAAoB6K,eAAerN,KAAM4O,EAAkBuJ,yBAA0B,EAAG,GACxF3V,GAAoB6K,eAAerN,KAAM4O,EAAkB+K,kBAAmB,EAAG,GAEjFnX,GAAoB6K,eAAerN,KAAM4O,EAAkB+K,kBAAmB,EAAG,GACjFnX,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,IAG7E,YAAA3B,cAAV,WACI9T,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,KACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,KACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAciO,aAAc,EAAG,KAC/EtJ,GAAoBmM,sBAAsB3O,KAAMnC,EAAciO,aAAc,EAAG,GAE/EtJ,GAAoBmM,sBAAsB3O,KAAMnC,EAAcuB,SAAU,EAAG,IAErE,YAAAmX,QAAV,SAAkB3V,GACd4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,GACnD4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,GACnD4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,IAE7C,YAAA4V,SAAV,WACIhU,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,YAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,SAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,WAG3D,YAAAkB,aAAP,SAAoBN,GAChB,YAAMM,aAAY,UAACN,IAE3B,EA5EA,CAA4B2X,I,0dCH5B,0E,OACW,EAAA7F,UAAY,WACT,EAAAgE,eAA2B,CAAChO,EAAQa,UAAWb,EAAQ2B,YAAa3B,EAAQM,QAC5E,EAAAsM,mBAAqB,IAExB,EAAA9P,iBAAmB,G,EAS9B,OAd6B,QAOf,YAAAgR,SAAV,WACIhU,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,YAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,iBAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,aAEtE,EAdA,CAA6B4Z,I,0dCG7B,0E,OACc,EAAA7H,UAAoB,aACpB,EAAA4F,YAAsB,GACtB,EAAAC,aAAuB,GAEvB,EAAAlB,eAA2B,CAAChO,EAAQO,SAAUP,EAAQC,YACzD,EAAA+J,UAAoB,aACpB,EAAA+C,YAAa,E,EA0ExB,OAjF+B,QASX,YAAAvU,aAAhB,SAA6BN,GACzB,YAAMM,aAAY,UAACN,GAEnBuS,GAASrB,kBAAkB9R,KAAMA,KAAK+R,YAGhC,YAAAqE,mBAAV,WACI5T,GAAoBkK,uBAAuB1M,KAAM,wBAAyB,EAAG,EAAG,IAAK,EAAA8N,MAAA,SACrFtL,GAAoBkK,uBAAuB1M,KAAM,8BAA+B,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAE7FtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,EAAG,EAAG,IAAK,EAAA8N,MAAA,SACzFtL,GAAoBkK,uBAAuB1M,KAAM,6BAA8B,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAE5FtL,GAAoBkK,uBAAuB1M,KAAM,0BAA2B,EAAG,EAAG,IAAK,EAAA8N,MAAA,SACvFtL,GAAoBkK,uBAAuB1M,KAAM,mBAAoB,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAElFtL,GAAoBkK,uBAAuB1M,KAAM,wBAAyB,GAAI,IAAK,IAAK,EAAA8N,MAAA,SACxFtL,GAAoBkK,uBAAuB1M,KAAM,wBAAyB,GAAI,EAAG,IAAK,EAAA8N,MAAA,SACtFtL,GAAoBkK,uBAAuB1M,KAAM,oBAAqB,GAAI,IAAK,IAAK,EAAA8N,MAAA,SAEpFtL,GAAoBkK,uBAAuB1M,KAAM,2BAA4B,GAAI,IAAK,IAAK,EAAA8N,MAAA,SAC3FtL,GAAoBkK,uBAAuB1M,KAAM,6BAA8B,GAAI,EAAG,IAAK,EAAA8N,MAAA,SAC3FtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,GAAI,IAAK,IAAK,EAAA8N,MAAA,SAC5FtL,GAAoBkK,uBAAuB1M,KAAM,2BAA4B,GAAI,EAAG,IAAK,EAAA8N,MAAA,SAEzFtL,GAAoBkK,uBAAuB1M,KAAM,kCAAmC,EAAG,EAAG,IAAK,EAAA8N,MAAA,SAC/FtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAC3FtL,GAAoBkK,uBAAuB1M,KAAM,mCAAoC,EAAG,EAAG,IAAK,EAAA8N,MAAA,SAEhGtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,EAAG,GAAI,GAAI,EAAA8N,MAAA,SACzFtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,EAAG,KAAM,IAAK,EAAA8N,MAAA,UAEtF,YAAAuI,mBAAV,WACI7T,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GAEnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,IAE7E,YAAA3B,cAAV,WACI9T,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,GACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,GACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAciO,aAAc,EAAG,GAC/EtJ,GAAoBmM,sBAAsB3O,KAAMnC,EAAcuB,SAAU,EAAG,IAErE,YAAAmX,QAAV,SAAkB3V,GACd4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,IAE7C,YAAA4V,SAAV,WACIhU,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,SAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,aAExD,YAAAyW,iBAAV,aAIJ,EAjFA,CAA+B8B,I,0dCC/B,0E,OACc,EAAAxG,UAAoB,UACpB,EAAA4F,YAAsB,GACtB,EAAAC,aAAuB,GAEvB,EAAApC,mBAA4B,KAC5B,EAAAD,uBAAgC,IAEhC,EAAAmB,eAA2B,CAAChO,EAAQO,SAAUP,EAAQC,YACzD,EAAA+J,UAAoB,aACpB,EAAA+C,YAAa,E,EAsExB,OAhF+B,QAYX,YAAAvU,aAAhB,SAA6BN,GACzB,YAAMM,aAAY,UAACN,GAEnBuS,GAASrB,kBAAkB9R,KAAMA,KAAK+R,YAGhC,YAAAqE,mBAAV,WACI5T,GAAoBkK,uBAAuB1M,KAAM,yBAA0B,EAAG,EAAG,IAAK,EAAA8N,MAAA,SACtFtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAC3FtL,GAAoBkK,uBAAuB1M,KAAM,4BAA6B,EAAG,EAAG,IAAK,EAAA8N,MAAA,SACzFtL,GAAoBkK,uBAAuB1M,KAAM,mCAAoC,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAElGtL,GAAoBkK,uBAAuB1M,KAAM,iCAAkC,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAChGtL,GAAoBkK,uBAAuB1M,KAAM,gCAAiC,EAAG,EAAG,IAAK,EAAA8N,MAAA,SAC7FtL,GAAoBkK,uBAAuB1M,KAAM,+BAAgC,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAC9FtL,GAAoBkK,uBAAuB1M,KAAM,6BAA8B,EAAG,EAAG,IAAK,EAAA8N,MAAA,SAE1FtL,GAAoBkK,uBAAuB1M,KAAM,gCAAiC,EAAG,EAAG,IAAK,EAAA8N,MAAA,SAC7FtL,GAAoBkK,uBAAuB1M,KAAM,mCAAoC,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAClGtL,GAAoBkK,uBAAuB1M,KAAM,oCAAqC,EAAG,EAAG,IAAK,EAAA8N,MAAA,SACjGtL,GAAoBkK,uBAAuB1M,KAAM,gCAAiC,EAAG,IAAK,IAAK,EAAA8N,MAAA,SAE/FtL,GAAoBgL,qBAAqBxN,KAAM4O,EAAkBoJ,kBAAmB,EAAG,IAEjF,YAAA3B,mBAAV,WACI7T,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GAEnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GACnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkBqJ,oBAAqB,EAAG,GAEnFzV,GAAoB6K,eAAerN,KAAM4O,EAAkByJ,iBAAkB,EAAG,IAE1E,YAAA/B,cAAV,WACI9T,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,GACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAcqB,MAAO,EAAG,GACxEsD,GAAoBmM,sBAAsB3O,KAAMnC,EAAciO,aAAc,EAAG,GAC/EtJ,GAAoBmM,sBAAsB3O,KAAMnC,EAAcuB,SAAU,EAAG,IAErE,YAAAmX,QAAV,SAAkB3V,GACd4B,GAAoBuM,gBAAgB/O,KAAKY,EAAQ,EAAE,IAE7C,YAAA4V,SAAV,WACIhU,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,SAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,UAC9DwC,GAAoByL,8BAA8BjO,KAAM,EAAG,EAAG,aAExD,YAAAyW,iBAAV,WACIzW,KAAKmV,cAAchK,KAAK3I,GAAoBiL,WAAWzN,KAAM4O,EAAkB0J,SAAU,IAAK,EAAG,MAEjGtY,KAAKoV,MAAMjK,KAAK3I,GAAoB6K,eAAgBrN,KAAM/B,EAAU2B,KAAKqL,WAAY,EAAG,MAGhG,EAhFA,CAA+BsN,I,0dCM/B,eAII,mBACI,YAAM,CAAEsB,YAAa,EAAAC,YAAA,cAAyB,K,OAC9C3I,EAAKgB,YAAc,E,EAyB3B,OA/B0B,QASf,YAAA4H,MAAP,WACI/Z,KAAKga,SAAS,IAAIC,GAAUja,OAC5BA,KAAKga,SAAS,IAAIJ,GAAO5Z,OACzBA,KAAKga,SAAS,IAAIE,GAAala,OAC/BA,KAAKga,SAAS,IAAIG,GAAUna,OAC5BA,KAAKga,SAAS,IAAII,GAAUpa,OAC5BA,KAAKga,SAAS,IAAIK,GAAQra,OAE1Bsa,GAAKhV,IAAI,QAAS,IAAIkN,GAAYxS,OAGlC,IAAMua,EAAS,IAAI,EAAAC,OAAOC,OAAOC,OAAOzc,IAKxC,OAFAsc,EAAOI,oBAAqB,EAErB,YAAMZ,MAAK,UAACQ,IAGf,YAAAP,SAAR,SAAiBvC,GACb6C,GAAKhV,IAAImS,EAAM/E,UAAW+E,IA3BhB,EAAArG,WAAoB,EA6BtC,EA/BA,CAA0B,EAAAwJ,QAiCpBN,GAAO,IAAInJ,GAEjBmJ,GAAKP,QAAQtV,MAAK,WACd6V,GAAKjI,UAAU,iBAGnBwI,SAASC,cAAgB,WACrB,OAAO,I,owCCtDPC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QAIfJ,EAAoBO,EAAID,E3BzBpB1d,EAAW,GACfod,EAAoBQ,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASrT,EAAI,EAAGA,EAAI7K,EAASsI,OAAQuC,IAAK,CAGzC,IAFA,IAAKiT,EAAUC,EAAIC,GAAYhe,EAAS6K,GACpCsT,GAAY,EACPC,EAAI,EAAGA,EAAIN,EAASxV,OAAQ8V,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAanB,OAAOwB,KAAKjB,EAAoBQ,GAAGU,OAAOC,GAASnB,EAAoBQ,EAAEW,GAAKT,EAASM,MAC9IN,EAASU,OAAOJ,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbne,EAASwe,OAAO3T,IAAK,GACrB,IAAIuD,EAAI2P,SACER,IAANnP,IAAiByP,EAASzP,IAGhC,OAAOyP,EAvBNG,EAAWA,GAAY,EACvB,IAAI,IAAInT,EAAI7K,EAASsI,OAAQuC,EAAI,GAAK7K,EAAS6K,EAAI,GAAG,GAAKmT,EAAUnT,IAAK7K,EAAS6K,GAAK7K,EAAS6K,EAAI,GACrG7K,EAAS6K,GAAK,CAACiT,EAAUC,EAAIC,I4BJ/BZ,EAAoBqB,EAAI,CAACjB,EAASkB,KACjC,IAAI,IAAIH,KAAOG,EACXtB,EAAoBuB,EAAED,EAAYH,KAASnB,EAAoBuB,EAAEnB,EAASe,IAC5E1B,OAAO+B,eAAepB,EAASe,EAAK,CAAEM,YAAY,EAAMC,IAAKJ,EAAWH,MCJ3EnB,EAAoB2B,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO5c,MAAQ,IAAI6c,SAAS,cAAb,GACd,MAAOxV,GACR,GAAsB,iBAAXyJ,OAAqB,OAAOA,QALjB,GCAxBkK,EAAoBuB,EAAI,CAACO,EAAKC,IAAUtC,OAAOuC,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCAlF,IAAII,EACAnC,EAAoB2B,EAAES,gBAAeD,EAAYnC,EAAoB2B,EAAEU,SAAW,IACtF,IAAIxC,EAAWG,EAAoB2B,EAAE9B,SACrC,IAAKsC,GAAatC,IACbA,EAASyC,gBACZH,EAAYtC,EAASyC,cAAcC,MAC/BJ,GAAW,CACf,IAAIK,EAAU3C,EAAS4C,qBAAqB,UACzCD,EAAQtX,SAAQiX,EAAYK,EAAQA,EAAQtX,OAAS,GAAGqX,KAK7D,IAAKJ,EAAW,MAAM,IAAIrO,MAAM,yDAChCqO,EAAYA,EAAUO,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF1C,EAAoB5W,EAAI+Y,G,SCVxB,IAAIQ,EAAkB,CACrBC,IAAK,GAaN5C,EAAoBQ,EAAEQ,EAAK6B,GAA0C,IAA7BF,EAAgBE,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGI/C,EAAU4C,GAHTnC,EAAUuC,EAAaC,GAAWF,EAGhBvV,EAAI,EAC3B,IAAIwS,KAAYgD,EACZjD,EAAoBuB,EAAE0B,EAAahD,KACrCD,EAAoBO,EAAEN,GAAYgD,EAAYhD,IAGhD,GAAGiD,EAAS,IAAIzC,EAASyC,EAAQlD,GAEjC,IADG+C,GAA4BA,EAA2BC,GACrDvV,EAAIiT,EAASxV,OAAQuC,IACzBoV,EAAUnC,EAASjT,GAChBuS,EAAoBuB,EAAEoB,EAAiBE,IAAYF,EAAgBE,IACrEF,EAAgBE,GAAS,KAE1BF,EAAgBjC,EAASjT,IAAM,EAEhC,OAAOuS,EAAoBQ,EAAEC,IAG1B0C,EAAqBC,KAAoC,8BAAIA,KAAoC,+BAAK,GAC1GD,EAAmB9X,QAAQyX,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBhT,KAAO2S,EAAqBO,KAAK,KAAMF,EAAmBhT,KAAKkT,KAAKF,K,GC3CvF,IAAIG,EAAsBtD,EAAoBQ,OAAEL,EAAW,CAAC,MAAM,IAAOH,EAAoB,OAC7FsD,EAAsBtD,EAAoBQ,EAAE8C,I","file":"main.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Actor } from \"excalibur\";\n\nexport class Appliance extends Actor {\n    public applianceType:ApplianceType;\n}\n\nexport enum ApplianceType {\n    Stove,\n    ServingPlate,\n    Trashcan\n}","import { Sound, Texture } from 'excalibur';\nimport bag from './images/bag.png';\nimport itemIcons from './images/item_icons.png';\nimport balloonIcons from './images/balloon_1.png';\nimport playerSprites from './images/player_sprites.png';\nimport panAttack from './images/pan_attack.png';\nimport panEmpty from './images/pan_empty.png';\nimport panFilled from './images/pan_filled.png';\nimport panCooking from './images/pan_cooking.png';\nimport panDone from './images/pan_done.png';\nimport panBurned from './images/pan_burned.png';\nimport insideTilesB from './images/tileB_inside4.png';\nimport insideFloorsWalls from './images/tileA5_inside.png';\nimport stove from './images/stove.png';\nimport trashcan from './images/trashcan.png';\nimport customer1 from './images/customer_1.png';\nimport cardFrame from './images/card_frame.png';\nimport restartButton from './images/restart_button.png';\nimport warningSquare from './images/warning_square.png';\nimport tutorialButton from './images/tutorial_button.png';\nimport door from './images/door.png';\n\nconst levelLoop1 = require('./audio/level_loop1.wav');\nconst bonk1 = require('./audio/bonk1.wav');\nconst levelWin = require('./audio/level_win.wav');\n/**\n * Default global resource dictionary. This gets loaded immediately\n * and holds available assets for the game.\n */\n\nconst Resources = {\n    Bag: new Texture(bag),\n    ItemIconSheet: new Texture(itemIcons),\n    PlayerSprites: new Texture(playerSprites),\n    LevelLoop1: new Sound(levelLoop1),\n    BalloonIconSheet: new Texture(balloonIcons),\n    PanAttack: new Texture(panAttack),\n    PanEmpty: new Texture(panEmpty),\n    PanFilled: new Texture(panFilled),\n    PanCooking: new Texture(panCooking),\n    PanDone: new Texture(panDone),\n    PanBurned: new Texture(panBurned),\n    InsideTilesB: new Texture(insideTilesB),\n    InsideFloorsWalls: new Texture(insideFloorsWalls),\n    Stove: new Texture(stove),\n    Trashcan: new Texture(trashcan),\n    Customer1: new Texture(customer1),\n    CardFrame: new Texture(cardFrame),\n    Bonk1: new Sound(bonk1),\n    RestartButton: new Texture(restartButton),\n    WarningSquare: new Texture(warningSquare),\n    TutorialButton: new Texture (tutorialButton),\n    Door: new Texture (door),\n    LevelWin: new Sound(levelWin)\n}\n\nexport { Resources }","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class BalloonIconSprites {\n    private static balloonSheet = new SpriteSheet({\n        image: Resources.BalloonIconSheet,\n        rows: 11,\n        columns: 8,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get MusicBalloon () {\n        return this.balloonSheet.getSprite(18);\n    }\n    \n    public static get MusicBalloonOff () {\n        return this.balloonSheet.getSprite(17);\n    }\n\n    public static get EmptyBalloon() {\n        return this.balloonSheet.getSprite(82)\n    }\n\n    public static get AngryBalloon() {\n        return this.balloonSheet.getSprite(34)\n    }\n}","import { Actor, CollisionType, Engine } from \"excalibur\";\n\nexport abstract class Item extends Actor {\n    public isHeld: boolean = false;\n    public canBeTrashed:boolean = false;\n\n    public onPreUpdate(engine:Engine, delta:number) {\n        if (this.isHeld) {\n            this.body.collider.type = CollisionType.PreventCollision;\n        } else {\n            this.body.collider.type = CollisionType.Fixed;\n        }\n    }\n}\n","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Meal extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Actor, Engine, SpriteSheet, Texture, vec, Vector } from \"excalibur\";\nimport { AnimationHelper } from \"../objects/animationHelper\";\nimport { LevelBuildingHelper } from \"../objects/levelBuildingHelper\";\n\nexport abstract class Humanoid extends Actor {\n    protected sprites: Texture;\n    protected spriteScale:number = 0.9;\n    protected facing:string;\n    protected baseSpeed: number = 200;\n\n    public onInitialize (engine:Engine) {\n        let sprites = new SpriteSheet({\n            image: this.sprites,\n            rows: 4,\n            columns: 3,\n            spWidth: this.sprites.width / 3,\n            spHeight: this.sprites.height / 4\n        });\n\n        this.setZIndex(1000);\n\n        this.addDrawing(\"standDown\", AnimationHelper.getScaledSprite(sprites.getSprite(1), this.spriteScale));\n        this.addDrawing(\"standLeft\", AnimationHelper.getScaledSprite(sprites.getSprite(4), this.spriteScale));\n        this.addDrawing(\"standRight\", AnimationHelper.getScaledSprite(sprites.getSprite(7), this.spriteScale));\n        this.addDrawing(\"standUp\", AnimationHelper.getScaledSprite(sprites.getSprite(10), this.spriteScale));\n\n        this.addDrawing(\"walkDown\", AnimationHelper.getScaledAnimation(engine, sprites, 0, 3, this.spriteScale));\n        this.addDrawing(\"walkLeft\", AnimationHelper.getScaledAnimation(engine, sprites, 3, 6, this.spriteScale));\n        this.addDrawing(\"walkRight\", AnimationHelper.getScaledAnimation(engine, sprites, 6, 9, this.spriteScale));\n        this.addDrawing(\"walkUp\", AnimationHelper.getScaledAnimation(engine, sprites, 9, 11, this.spriteScale));\n    }\n\n    public onPreUpdate (engine:Engine, delta:number) {\n        /////////////////////////////////\n        /////////// Animation ///////////\n        /////////////////////////////////\n        this.doFacing();\n        \n        if (this.vel.x === 0 && this.vel.y === 0) {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"standLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"standRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"standUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"standDown\");\n                    break;\n            }\n        } else {\n            switch (this.facing) {\n                case \"l\":\n                    this.setDrawing(\"walkLeft\");\n                    break;\n                case \"r\":\n                    this.setDrawing(\"walkRight\");\n                    break;\n                case \"u\":\n                    this.setDrawing(\"walkUp\");\n                    break;\n                case \"d\":\n                    this.setDrawing(\"walkDown\");\n                    break;\n            }\n        }\n    }\n\n    protected doFacing() {\n        if (this.vel.y > 0) {\n            this.facing = \"d\"\n        } else if (this.vel.x < 0) {\n            this.facing = \"l\";\n        } else if (this.vel.x > 0) {\n            this.facing = \"r\";\n        } else if (this.vel.y < 0) {\n            this.facing = \"u\";\n        }\n    }\n\n    protected getFacingTargetPos(tilePercent: number): Vector {\n        let xOffset = 0, yOffset = 0;\n\n        switch (this.facing) {\n            case \"l\":\n                xOffset -= LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"r\":\n                xOffset += LevelBuildingHelper.tileWidth * tilePercent;\n                break;\n            case \"u\":\n                yOffset -= LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n            case \"d\":\n                yOffset += LevelBuildingHelper.tileHeight * tilePercent;\n                break;\n        }\n\n        return vec(this.pos.x + xOffset, this.pos.y + yOffset);\n    }\n}","import { Actor, Animation, Engine, Sprite, SpriteSheet, Timer, vec, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { AnimationHelper } from \"../objects/animationHelper\";\nimport { BalloonIconSprites } from \"../objects/balloonIconSprites\";\nimport { LevelBuildingHelper } from \"../objects/levelBuildingHelper\";\nimport { Meal } from \"../objects/meal\";\nimport { Recipe } from \"../objects/recipes\";\nimport { Seat } from \"../objects/seat\";\nimport { Humanoid } from \"./humanoid\";\n\nexport class Customer extends Humanoid {\n    private speed: number = 160;\n    private actionTimer: CustomerTimer;\n    private mealCheckPos: Vector[];\n    private initialPosition: Vector;\n    private wantsBalloon: Sprite;\n    private wantsSprite: Sprite;\n    private grumpyBubble: Sprite;\n    private isHappy: boolean = false;\n\n    public wantsMeal: Recipe;\n    public frustratedTime: number;\n    public attackTime: number;\n    public seat: Seat;\n    public timeElapsed: number;\n    public tickSpeed:number = 100;\n    \n    public get isAttacking () {\n        return this.timeElapsed >= this.attackTime\n    }\n\n    public onInitialize(engine: Engine) {\n        this.sprites = Resources.Customer1;\n        super.onInitialize(engine);\n\n        this.initialPosition = this.pos.clone();\n        this.wantsBalloon = AnimationHelper.getScaledSprite(BalloonIconSprites.EmptyBalloon, 0.8);\n        this.wantsSprite = AnimationHelper.getScaledSprite(this.wantsMeal.resultSprite.clone(), 0.70)\n\n        this.grumpyBubble = AnimationHelper.getScaledSprite(BalloonIconSprites.AngryBalloon, 0.8)\n    }\n\n    public onPreDraw(ctx: CanvasRenderingContext2D, _delta: number) {\n        if (!this.isAttacking && !this.isHappy) {\n            let drawGrumpy = false;\n\n            if (this.timeElapsed >= this.frustratedTime) {\n                drawGrumpy = this.timeElapsed % 1000 > 500;\n            }\n\n            if (drawGrumpy) {\n                this.grumpyBubble.draw(ctx, 0, -50);\n            } else {\n                this.wantsBalloon.draw(ctx, 0, -50);\n                this.wantsSprite.draw(ctx, 0, -50);\n            }\n        }\n\n    }\n\n    public walkToSeat() {\n        let p = this.actions.moveTo(this.seat.pos.x, this.seat.pos.y, this.speed).asPromise();\n        this.timeElapsed = 0;\n\n        p.then(() => {\n            console.log(\"customer arrived at seat\")\n            this.facing = this.seat.facing;\n            \n            let coreMealPos =this.getFacingTargetPos(0.5);\n\n            this.mealCheckPos = [coreMealPos, \n                                 vec(coreMealPos.x - LevelBuildingHelper.tileWidth * 0.3, coreMealPos.y), \n                                 vec(coreMealPos.x + LevelBuildingHelper.tileWidth * 0.3, coreMealPos.y), \n                                 vec(coreMealPos.x, LevelBuildingHelper.tileHeight * coreMealPos.y - 0.3), \n                                 vec(coreMealPos.x, LevelBuildingHelper.tileHeight * coreMealPos.y + 0.3)];\n\n            this.actionTimer = new CustomerTimer({\n                interval: this.tickSpeed,\n                fcn: this.routine,\n                repeats: true\n            });\n\n            this.actionTimer.customer = this;\n            this.scene.add(this.actionTimer);\n        });\n    }\n\n    public leaveHappy() {\n        this.isHappy = true;\n        (this.scene as LevelBase).customersToServe--;\n\n        let p = this.actions.moveTo(this.initialPosition.x, this.initialPosition.y, this.speed).asPromise();\n\n        p.then(() => {\n            this.kill();\n        });\n    }\n\n    private routine() {\n        let a = this as unknown as CustomerTimer;\n\n        if (a) {\n            if (a.customer.isKilled()) {\n                a.cancel();\n                return;\n            }\n\n            if (!a.customer.isAttacking) {\n                let m: Actor[] = [];\n                \n                a.customer.mealCheckPos.forEach(pos => {\n                    if (m.length > 0) {\n                        return;\n                    }\n\n                    m = a.customer.scene.actors.filter(x => x instanceof Meal &&\n                        x.name === a.customer.wantsMeal.resultName &&\n                        !x.isHeld &&\n                        x.contains(pos.x, pos.y))\n                });\n\n                if (m.length > 0) {\n                    // TODO eat animation or something\n                    m[0].kill();\n                    (a.scene as LevelBase).removeCustomer(a.customer);\n                    a.customer.leaveHappy();\n                } else {\n                    a.customer.timeElapsed += a.customer.tickSpeed;\n                }\n            } else {\n                let player = (a.customer.scene as LevelBase).player;\n \n                if (a.customer.actionQueue.getActions().filter(x=>!x.isComplete).length === 0) {\n                    a.customer.actions.moveTo (player.pos.x, player.pos.y, a.customer.speed);\n                }\n\n                if (a.customer.pos.distance(player.pos) <= 50 && a.customer.isAttacking) {\n                    player.hurt();\n                }\n            }\n        }\n    }\n}\n\nexport class CustomerTimer extends Timer {\n    public customer: Customer;\n}","import { Engine } from \"excalibur\";\nimport { Item } from \"./item\";\n\nexport class Ingredient extends Item {\n    public name:string;\n    \n    public onInitialize(engine:Engine) {\n        this.canBeTrashed = true;\n        super.onInitialize(engine);\n    }\n}","import { Actor, Color, Engine, Sprite, Timer } from \"excalibur\";\nimport { Ingredient } from \"./ingredient\";\nimport { Item } from \"./item\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport class IngredientSpawner extends Actor {\n    private newItemTimer:IngredientTimer;\n\n    private _ingredientName:string;\n    private _ingredientSprite:Sprite;\n\n    public setupSpawner(ingredientName:string, ingredientSprite:Sprite) {\n        this._ingredientName = ingredientName;\n        this._ingredientSprite = ingredientSprite;\n        \n        this.spawnIngredient();\n        \n        this.body.collider.on(\"collisionend\", (e) => {\n            let otherActor = e.other.body.actor;\n\n            if (otherActor instanceof Item) {\n                if (! this.newItemTimer) {\n                    this.newItemTimer = new IngredientTimer({\n                        interval: 5000, // ms\n                        repeats: false,\n                        fcn: this.spawnIngredient\n                    });\n                    this.newItemTimer.spawner = this;\n\n                    this.scene.add(this.newItemTimer);\n                }\n\n                this.newItemTimer.reset();\n            }\n        });\n    }\n\n    public spawnIngredient () {\n        \n        if (this instanceof IngredientTimer) {\n            let spawner = this.spawner;\n            let obstructions = spawner.scene.actors.filter(x => x.contains(spawner.pos.x, spawner.pos.y) && x instanceof Item);\n\n            if (obstructions.length === 0) {\n                LevelBuildingHelper.createIngredientAtPosition(this.spawner.scene, \n                                                           this.spawner._ingredientSprite.clone(), \n                                                           this.spawner._ingredientName, \n                                                           this.spawner.pos.x, \n                                                           this.spawner.pos.y)\n            }\n        } else {\n            LevelBuildingHelper.createIngredientAtPosition(this.scene, \n                                                           this._ingredientSprite.clone(), \n                                                           this._ingredientName, \n                                                           this.pos.x, \n                                                           this.pos.y)\n        }\n    }\n}\n\nexport class IngredientTimer extends Timer {\n    public spawner:IngredientSpawner;\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class InsideTileSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.InsideTilesB,\n        rows: 16,\n        columns: 16,\n        spWidth: 16,\n        spHeight: 16\n    });\n\n    public static get CounterVerticalFull () {\n        return this.iconSheet.getSprite(16);\n    }\n\n    public static get CounterCornerBottomLeft () {\n        return this.iconSheet.getSprite(17);\n    }\n\n    public static get CounterBottomCentral () {\n        return this.iconSheet.getSprite(18);\n    }\n    \n    public static get CounterBottomCornerRight () {\n        return this.iconSheet.getSprite(19);\n    }\n \n    public static get CounterStandalone () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get CounterFaceStandalone () {\n        return this.iconSheet.getSprite(48);\n    }\n    public static get CounterFaceLeft () {\n        return this.iconSheet.getSprite(49);\n    }\n\n    public static get CounterFaceCenter () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get CounterFaceRight () {\n        return this.iconSheet.getSprite(51);\n    }\n\n    public static get Table_V_TopSmall () {\n        return this.iconSheet.getSprite(88);\n    }\n\n    public static get Table_H_TopLeft () {\n        return this.iconSheet.getSprite(89);\n    }\n    \n    public static get Table_H_TopMid () {\n        return this.iconSheet.getSprite(90);\n    }\n\n    public static get Table_H_TopRight () {\n        return this.iconSheet.getSprite(91);\n    }\n\n    public static get Table_V_TopLarge () {\n        return this.iconSheet.getSprite(104);\n    }\n\n    public static get Table_H_BottomLeftLeg () {\n        return this.iconSheet.getSprite(105);\n    }\n\n    public static get Table_H_BottomMidNoLeg () {\n        return this.iconSheet.getSprite(106);\n    }\n\n    public static get Table_H_BottomRightLeg () {\n        return this.iconSheet.getSprite(107);\n    }\n\n    public static get Table_V_Mid () {\n        return this.iconSheet.getSprite(120);\n    }\n\n    public static get StoolTopRed () {\n        return this.iconSheet.getSprite(121);\n    }\n\n    public static get Table_V_BottomLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get Table_H_MidLeg () {\n        return this.iconSheet.getSprite(136);\n    }\n\n    public static get StoolBottomRed() {\n        return this.iconSheet.getSprite(137);\n    }\n    public static get StoolTopGrey() {\n        return this.iconSheet.getSprite(153);\n    }\n    public static get StoolBottomGrey() {\n        return this.iconSheet.getSprite(169);\n    }\n\n    public static get RedStool () {\n        return this.iconSheet.getSprite(152);\n    }\n\n    public static get GreyStool () {\n        return this.iconSheet.getSprite(168);\n    }\n\n    public static get TrashCanTopLid () {\n        return this.iconSheet.getSprite(172);\n    }\n\n    public static get TrashCanTopEmpty () {\n        return this.iconSheet.getSprite(173);\n    }\n\n    public static get TrashCanTopTrash () {\n        return this.iconSheet.getSprite(174);\n    }\n\n    public static get TrashCanTopBag () {\n        return this.iconSheet.getSprite(175);\n    }\n\n    public static get TrashCanBottom () {\n        return this.iconSheet.getSprite(188);\n    }\n\n    public static get Tray () {\n        return this.iconSheet.getSprite(110);\n    }\n}","import { Sprite, SpriteSheet } from \"excalibur\";\nimport { Resources } from \"../../resources\";\n\nexport abstract class ItemIconSprites {\n    private static iconSheet = new SpriteSheet({\n        image: Resources.ItemIconSheet,\n        rows: 11,\n        columns: 16,\n        spWidth: 12,\n        spHeight: 12\n    });\n    \n    public static get Heart () {\n        return this.iconSheet.getSprite(1);\n    }\n\n    public static get BlackHeart () {\n        return this.iconSheet.getSprite(2);\n    }\n\n    public static get Skull () {\n        return this.iconSheet.getSprite(6);\n    }\n\n    public static get FlourBag () {\n        return this.iconSheet.getSprite(9);\n    }\n\n    public static get StormCloud () {\n        return this.iconSheet.getSprite(11);\n    }\n\n    public static get SnowFlake () {\n        return this.iconSheet.getSprite(13);\n    }\n\n    public static get RedGem () {\n        return this.iconSheet.getSprite(25);\n    }\n\n    public static get BlueGem () {\n        return this.iconSheet.getSprite(26);\n    }\n\n    public static get YellowGem () {\n        return this.iconSheet.getSprite(27);\n    }\n\n    public static get PurpleGem () {\n        return this.iconSheet.getSprite(28);\n    }\n\n    public static get GreenGem () {\n        return this.iconSheet.getSprite(29);\n    }\n\n    public static get WhiteGem () {\n        return this.iconSheet.getSprite(30);\n    }\n\n    public static get BlackGem () {\n        return this.iconSheet.getSprite(31);\n    }\n\n    public static get GreenLeaf () {\n        return this.iconSheet.getSprite(32);\n    }\n\n    public static get RedLeaf () {\n        return this.iconSheet.getSprite(33);\n    }\n\n    public static get RedPot () {\n        return this.iconSheet.getSprite(34);\n    }\n\n    public static get BluePot () {\n        return this.iconSheet.getSprite(35);\n    }\n\n    public static get YellowPot () {\n        return this.iconSheet.getSprite(36);\n    }\n    \n    public static get GreenPot () {\n        return this.iconSheet.getSprite(37);\n    }\n    \n    public static get Poison () {\n        return this.iconSheet.getSprite(39);\n    }\n    \n    public static get Apple () {\n        return this.iconSheet.getSprite(40);\n    }\n    \n    public static get Banana () {\n        return this.iconSheet.getSprite(42);\n    }\n\n    public static get BananaPeel () {\n        return this.iconSheet.getSprite(43);\n    }\n\n    public static get Bread () {\n        return this.iconSheet.getSprite(44);\n    }\n    \n    public static get Cheese () {\n        return this.iconSheet.getSprite(45);\n    }\n    \n    public static get Drumstick () {\n        return this.iconSheet.getSprite(46);\n    }\n    \n    public static get Cookie () {\n        return this.iconSheet.getSprite(47);\n    }\n    \n    public static get Burger () {\n        return this.iconSheet.getSprite(48);\n    }\n    \n    public static get Fries () {\n        return this.iconSheet.getSprite(49);\n    }\n    \n    public static get Hotdog () {\n        return this.iconSheet.getSprite(50);\n    }\n    \n    public static get PizzaPlain () {\n        return this.iconSheet.getSprite(52);\n    }\n    \n    public static get PizzaToppings () {\n        return this.iconSheet.getSprite(53);\n    }\n    \n    public static get Meat () {\n        return this.iconSheet.getSprite(54);\n    }\n    \n    public static get EggRaw () {\n        return this.iconSheet.getSprite(55);\n    }\n    \n    public static get EggCooked () {\n        return this.iconSheet.getSprite(56);\n    }\n\n    public static get Taco () {\n        return this.iconSheet.getSprite(57);\n    }\n    \n    public static get Burrito () {\n        return this.iconSheet.getSprite(58);\n    }\n\n    public static get Ketchup () {\n        return this.iconSheet.getSprite(61);\n    }\n\n    public static get Mayo () {\n        return this.iconSheet.getSprite(62);\n    }\n\n    public static get Relish () {\n        return this.iconSheet.getSprite(63);\n    }\n\n    public static get PieYellow () {\n        return this.iconSheet.getSprite(71);\n    }\n\n    public static get PieRed () {\n        return this.iconSheet.getSprite(72);\n    }\n    \n    public static get PiePurple () {\n        return this.iconSheet.getSprite(73);\n    }\n    \n    public static get Cake () {\n        return this.iconSheet.getSprite(74);\n    }\n\n    public static get IceCreamCone () {\n        return this.iconSheet.getSprite(75);\n    }\n\n    public static get FreezePopPink () {\n        return this.iconSheet.getSprite(76);\n    }\n\n    public static get FreezePopBlue () {\n        return this.iconSheet.getSprite(77);\n    }\n\n    public static get CandyRed () {\n        return this.iconSheet.getSprite(78);\n    }\n\n    public static get CandyYellow () {\n        return this.iconSheet.getSprite(79);\n    }\n\n    public static get SyringeRed () {\n        return this.iconSheet.getSprite(80);\n    }\n\n    public static get SyringeGreen () {\n        return this.iconSheet.getSprite(81);\n    }\n\n    public static get SyringeBlue () {\n        return this.iconSheet.getSprite(82);\n    }\n\n    public static get SyringePurple () {\n        return this.iconSheet.getSprite(83);\n    }\n\n    public static get SyringeYellow () {\n        return this.iconSheet.getSprite(84);\n    }\n\n    public static get PinkBottle () {\n        return this.iconSheet.getSprite(85);\n    }\n\n    public static get BrownBottle () {\n        return this.iconSheet.getSprite(86);\n    }\n\n    public static get Champagne () {\n        return this.iconSheet.getSprite(87);\n    }\n\n    public static get FlipPhone () {\n        return this.iconSheet.getSprite(88);\n    }\n\n    public static get ToiletPaper () {\n        return this.iconSheet.getSprite(89);\n    }\n\n    public static get FloppyDisk () {\n        return this.iconSheet.getSprite(107);\n    }\n\n    public static get FloppyDiskTilt () {\n        return this.iconSheet.getSprite(108);\n    }\n\n    public static get Trash () {\n        return this.iconSheet.getSprite(109);\n    }\n\n    public static get Salt () {\n        return this.iconSheet.getSprite(110);\n    }\n\n    public static get Sword () {\n        return this.iconSheet.getSprite(112);\n    }\n\n    public static get Branch () {\n        return this.iconSheet.getSprite(113);\n    }\n\n    public static get Bat () {\n        return this.iconSheet.getSprite(114);\n    }\n\n    public static get Axe () {\n        return this.iconSheet.getSprite(115);\n    }\n\n    public static get Snake () {\n        return this.iconSheet.getSprite(116);\n    }\n\n    public static get Staff () {\n        return this.iconSheet.getSprite(117);\n    }\n\n    public static get TennisRacket () {\n        return this.iconSheet.getSprite(118);\n    }\n\n    public static get Bone () {\n        return this.iconSheet.getSprite(126);\n    }\n\n    public static get ChocolateBar () {\n        return this.iconSheet.getSprite(137);\n    }\n\n    public static get Potato () {\n        return this.iconSheet.getSprite(144);\n    }\n\n    public static get CowboyBoots () {\n        return this.iconSheet.getSprite(0);\n    }\n}","import { Actor, Engine, ScreenElement, Sprite, SpriteSheet, UIActor, vec } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { AnimationHelper } from \"./animationHelper\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport class Recipe {\n    public ingredients:string[];\n    public resultName:string;\n    public resultSprite:Sprite;\n\n    constructor (ingredients:string[], resultName:string, resultSprite:Sprite) {\n        this.ingredients = ingredients;\n        this.resultSprite = resultSprite;\n        this.resultName = resultName;\n    }\n\n    public ingredientsEqual(ingredientCheck:string[]) {\n        console.log(\"looking for: \" + JSON.stringify(ingredientCheck));\n        \n        if (\n          !Array.isArray(this.ingredients)\n          || !Array.isArray(ingredientCheck)\n          || this.ingredients.length !== ingredientCheck.length\n          ) {\n            return false;\n          }\n        \n        // .concat() to not mutate arguments\n        const arr1 = this.ingredients.concat().sort();\n        const arr2 = ingredientCheck.concat().sort();\n        \n        for (let i = 0; i < arr1.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n             }\n        }\n        \n        return true;\n    }\n}\n\nconst Recipes = {\n    MonsterPie: new Recipe ([\"Poison\", \"FlourBag\", \"Apple\"],\"Monster Pie\",ItemIconSprites.PieRed),\n    Taco: new Recipe ([\"Meat\", \"Cheese\", \"GreenLeaf\"],\"Taco\",ItemIconSprites.Taco),\n    Cookie: new Recipe ([\"FlourBag\", \"EggRaw\"],\"Cookie\",ItemIconSprites.Cookie),\n    FriedEgg: new Recipe ([\"EggRaw\"],\"Fried Egg\",ItemIconSprites.EggCooked),\n    Pizza: new Recipe ([\"FlourBag\", \"RedPot\", \"Cheese\"],\"Pizza\",ItemIconSprites.PizzaPlain),\n    PepperoniPizza: new Recipe ([\"FlourBag\", \"RedPot\", \"Meat\",\"Cheese\"],\"Pepperoni Pizza\",ItemIconSprites.PizzaToppings),\n    BananaPie: new Recipe ([\"EggRaw\", \"FlourBag\", \"Banana\"],\"Banana Pie\",ItemIconSprites.PieYellow),\n    SpecialCrunchPie: new Recipe ([\"EggRaw\", \"FlourBag\", \"PurpleGem\"],\"Special Crunch Pie\",ItemIconSprites.PiePurple),\n    Burger: new Recipe ([\"Meat\", \"Bread\", \"GreenLeaf\", \"Cheese\"],\"Burger\",ItemIconSprites.Burger),\n    CrunchyCake: new Recipe ([\"EggRaw\", \"FlourBag\", \"YellowPot\", \"WhiteGem\"],\"Crunchy Cake\",ItemIconSprites.Cake),\n    IceCream: new Recipe ([\"YellowPot\",\"EggRaw\", \"WhiteGem\"],\"Ice Cream\",ItemIconSprites.IceCreamCone),\n    Bone: new Recipe ([\"Poison\",\"Skull\",\"Drumstick\"],\"Bone\",ItemIconSprites.Bone),\n    CowboyBoots: new Recipe ([\"Poison\",\"SyringeGreen\",\"Meat\"],\"Cowboy Boots\",ItemIconSprites.CowboyBoots),\n    FlipPhone: new Recipe ([\"StormCloud\",\"FloppyDisk\",\"Skull\"],\"Flip Phone\",ItemIconSprites.FlipPhone),\n    Hotdog: new Recipe ([\"ToiletPaper\",\"Meat\",\"Bread\"],\"Hot Dog\",ItemIconSprites.Hotdog),\n    Fries: new Recipe ([\"Potato\",\"TennisRacket\",\"Salt\"],\"Fries\",ItemIconSprites.Fries),\n    BananaCandy: new Recipe ([\"Banana\",\"SyringeYellow\",\"WhiteGem\"],\"Banana Candy\",ItemIconSprites.CandyYellow),\n    BluePopsicle: new Recipe ([\"BlueGem\",\"BluePot\",\"SyringeBlue\"],\"Blue Popsicle\",ItemIconSprites.FreezePopBlue),\n    PinkPopsicle: new Recipe ([\"RedGem\",\"SyringeRed\",\"Snowflake\"],\"Banana Candy\",ItemIconSprites.CandyYellow),\n    BananaPeel: new Recipe ([\"Banana\",\"Axe\",\"SyringeYellow\"],\"Banana Peel\",ItemIconSprites.CandyYellow),\n\n\n\n}\n\nexport {Recipes}\n\nexport class RecipeCard extends ScreenElement {\n    private cardTargetWidth = 75;\n    private cardTargetHeight = 120;\n    \n    private cardFrame:Sprite;\n    private resultSprite:Sprite;\n    private ingredientSprites:Sprite[] = [];\n\n    public setRecipe(recipe:Recipe) {\n        this.cardFrame = Resources.CardFrame.asSprite();\n        this.cardFrame.scale = vec(this.cardTargetWidth / this.cardFrame.width, this.cardTargetHeight / this.cardFrame.height );\n\n        this.resultSprite =AnimationHelper.getScaledSprite(recipe.resultSprite, 0.6);\n        \n        recipe.ingredients.forEach(i => {\n            console.log(\"Adding sprite for ingredient: \" + i)\n            this.ingredientSprites.push(AnimationHelper.getScaledSprite(ItemIconSprites[i], 0.6));\n        });\n    }\n\n    public onPreDraw (ctx: CanvasRenderingContext2D, _delta: number) {\n        this.cardFrame.draw(ctx, 0,0);\n        this.resultSprite.draw(ctx, this.cardTargetWidth / 2 - this.resultSprite.width,5);\n\n        this.ingredientSprites[0].draw(ctx, 5,50)\n        \n        if (this.ingredientSprites.length >= 2) {\n            this.ingredientSprites[1].draw(ctx, 40,50)\n        }\n\n        if (this.ingredientSprites.length >= 3) {\n            this.ingredientSprites[2].draw(ctx, 5, 85)\n        }\n\n        if (this.ingredientSprites.length >= 4) {\n            this.ingredientSprites[3].draw(ctx, 40, 85)\n        }\n    }\n}","import { Collider, CollisionStartEvent, CollisionType, Engine, Shape, Vector, Animation, isCollider, resetObsoleteCounter } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { Customer } from \"../characters/customer\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Ingredient } from \"./ingredient\";\nimport { Item } from \"./item\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\nimport { Recipe, Recipes } from \"./recipes\";\n\nexport class Pan extends Item {\n    private cookTimeMultiplier: number = 3000; // ms per ingredient\n\n    public ingredients: string[] = [];\n    public attackAnimation: Animation;\n    public isAttacking: boolean = false;\n\n    public cookTime: number = 0;\n    public isDone: boolean = false;\n    public isBurned: boolean = false;\n\n    public onInitialize(engine: Engine) {\n        super.onInitialize(engine);\n\n        this.body.collider.type = CollisionType.Passive;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight, LevelBuildingHelper.tileHeight);\n\n        // TODO refactor this to use onPreUpdate or something with a delta\n        // Currently it takes longer to cook stuff on slower machines\n        this.body.collider.on(\"precollision\", (e: CollisionStartEvent<Collider>) => {\n            let otherActor = e.other.body.actor;\n\n            if (this.isAttacking) {\n                /////////////////////////////////\n                ////////// Plate Meal ///////////\n                /////////////////////////////////\n                if ( this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.ServingPlate &&\n                        this.isDone ) {\n                    let product:Recipe;\n\n                    for (let r in Recipes) {\n                        if (Recipes[r].ingredientsEqual(this.ingredients)) {\n                            product = Recipes[r];\n                        }\n                    }\n\n                    if (product && !this.isBurned) {\n                        LevelBuildingHelper.createMeal(this.scene, product.resultSprite, product.resultName, otherActor.pos);\n                    } else {\n                        LevelBuildingHelper.createMeal(this.scene, ItemIconSprites.Trash, \"inedible mush\", otherActor.pos);\n                    }\n\n                    this.reset();\n                }\n\n                if (this.ingredients.length > 0 && \n                        otherActor instanceof Appliance && \n                        otherActor.applianceType === ApplianceType.Trashcan) {\n                    this.reset();\n                }\n            }\n            /////////////////////////////////\n            ///////// Hit Customer //////////\n            /////////////////////////////////\n            if (otherActor instanceof Customer && this.isAttacking && otherActor.isAttacking) {\n                (this.scene as LevelBase).removeCustomer(otherActor);\n                Resources.Bonk1.play(0.6);\n                otherActor.kill();\n                this.reset();\n            }\n        });\n    }\n\n    private tickCook(delta: number) {\n        let stoves = this.scene.actors.filter(x => x instanceof Appliance &&\n                                                   x.applianceType === ApplianceType.Stove &&\n                                                   this.body.collider.collide(x.body.collider) &&\n                                                   this.ingredients.length > 0 &&\n                                                   this.isHeld === false);\n\n        if (stoves.length > 0) {\n            this.cookTime += delta;\n\n            if (!this.isDone &&\n                this.cookTime > this.ingredients.length * this.cookTimeMultiplier) {\n                this.isDone = true;\n            }\n\n            if (this.isDone && !this.isBurned &&\n                this.cookTime > this.ingredients.length * this.cookTimeMultiplier * 3) {\n                this.isBurned = true;\n            }\n        }\n    }\n    \n    private reset() {\n        this.ingredients = [];\n        this.isBurned = false;\n        this.isDone = false;\n        this.cookTime = 0;\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        this.tickCook(delta);\n\n        // Render\n        if (!this.isAttacking) {\n            if (this.isBurned) {\n                this.setDrawing(\"burned\");\n            } else if (this.isDone) {\n                this.setDrawing(\"done\");\n            } else if (this.cookTime > 0) {\n                this.setDrawing(\"cooking\");\n            } else if (this.ingredients.length > 0) {\n                this.setDrawing(\"filled\");\n            } else {\n                this.setDrawing(\"empty\");\n            }\n        } else {\n            if (this.attackAnimation.isDone()) {\n                this.isAttacking = false;\n            }\n        }\n    }\n\n    public attack(pos: Vector, facing: string) {\n        this.isAttacking = true;\n        this.pos = pos;\n        this.setDrawing(\"attack\");\n\n        switch (facing) {\n            case \"r\":\n                this.attackAnimation.flipHorizontal = true;\n                break;\n            default:\n                this.attackAnimation.flipHorizontal = false;\n        }\n    }\n}\n","import { Actor, Body, Collider, CollisionType, Color, Engine, FontStyle, Label, Scene, ScreenElement, Shape, Sprite, SpriteSheet, TextAlign, Texture, vec, Vector } from \"excalibur\";\nimport { Resources } from \"../../resources\";\nimport { AnimationHelper } from \"./animationHelper\";\nimport { Appliance, ApplianceType } from \"./appliance\";\nimport { Customer } from \"../characters/customer\";\nimport { Ingredient } from \"./ingredient\";\nimport { IngredientSpawner } from \"./ingredientSpawner\";\nimport { InsideTileSprites } from \"./insideTileSprites\";\nimport { Item } from \"./item\";\nimport { Meal } from \"./meal\";\nimport { Pan } from \"./pan\";\nimport { Seat } from \"./seat\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\n\nexport abstract class LevelBuildingHelper {\n    static tileWidth = 50;\n    static tileHeight = 50;\n\n    public static createLabelAcrossTiles (scene:Scene, text:string, xPos:number, yPos:number, width:number, color:Color):Label {\n        let label = new Label(text, xPos * this.tileWidth, yPos * this.tileHeight);\n        label.maxWidth = width * this.tileWidth;\n        label.textAlign = TextAlign.Center;\n        label.color = color;\n        label.fontSize = 20;     \n        //label.useTextShadow(true);\n        \n        scene.add(label);\n        \n        return label;\n    }\n\n    public static createWallTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number): Actor {\n        return this.createTile(scene, display, xPos, yPos, true, 1);\n    }\n\n    public static createBackgroundTile(scene: Scene, display: Color|Sprite, xPos: number, yPos: number): Actor {\n        return this.createTile(scene, display, xPos, yPos, false, -1);\n    }\n\n    public static createSeat(scene: Scene, sprite: Sprite, facing:string, xPos: number, yPos: number): Seat {\n        let s = this.createTile(scene, sprite, xPos, yPos, false, -1) as Seat;\n        s.facing = facing;\n        return s;\n    }\n\n    private static createTile(scene: Scene, \n                              display: Color|Sprite, \n                              xPos: number, yPos: number, \n                              hasCollision: boolean, \n                              z: number): Actor {\n        let a = new Actor({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (display instanceof Color) {\n            a.color = display;\n        } else {\n            let scaleX = this.tileWidth / display.width;\n            let scaleY = this.tileHeight / display.height;\n            display.scale = vec(scaleX, scaleY);\n            a.addDrawing(display);\n        }\n\n        scene.add(a);\n        a.setZIndex(z);\n\n        if (hasCollision) {\n            a.body.collider.type = CollisionType.Fixed;\n        }\n\n        return a;\n    }\n\n    public static createIngrediantSpawnerOnTile(scene: Scene, \n                                                xPos: number, \n                                                yPos: number, \n                                                ingredientName:string, \n                                                spawnerSprite?: Sprite): IngredientSpawner {\n        \n        console.log(\"adding spawner for: \" + ingredientName);\n\n        let a = new IngredientSpawner({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        if (spawnerSprite) {\n            let scaleX = this.tileWidth / spawnerSprite.width;\n            let scaleY = this.tileHeight / spawnerSprite.height;\n            spawnerSprite.scale = vec(scaleX, scaleY);\n            a.addDrawing(spawnerSprite);\n        }\n\n        a.setupSpawner(ingredientName, ItemIconSprites[ingredientName]);\n\n        scene.add(a);\n        return a;\n    }\n\n    public static createIngredientAtPosition (scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        const itemScale = 0.75;\n        \n        let a = new Ingredient({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos, yPos)\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let spr = AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(spr);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createIngredientOnTile(scene: Scene, sprite:Sprite, name:string, xPos: number, yPos: number): Ingredient {\n        let xPosTile = xPos * this.tileWidth, yPosTile = yPos * this.tileHeight;\n        return this.createIngredientAtPosition (scene, sprite, name, xPosTile, yPosTile);\n    }\n\n    public static createMeal(scene: Scene, sprite:Sprite, name:string, position:Vector): Meal {\n        const itemScale = 0.8;\n        \n        let a = new Meal({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let spr = AnimationHelper.getScaledSprite(sprite, itemScale);\n\n        a.addDrawing(spr);\n        a.name = name;\n        a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n        a.body.collider.type = CollisionType.Fixed;\n\n        return a;\n    }\n\n    public static createApplianceOnTile(scene: Scene, type:ApplianceType, xPos: number, yPos: number): Appliance {\n        const itemScale = 0.75;\n\n        let sprite:Sprite;\n        let a = new Appliance({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        switch (type) {\n            case ApplianceType.Stove:\n                sprite = Resources.Stove.asSprite();\n                break;\n            case ApplianceType.ServingPlate:\n                sprite = InsideTileSprites.Tray;\n                break;\n            case ApplianceType.Trashcan:\n                sprite = Resources.Trashcan.asSprite();\n                a.body.collider.shape = Shape.Box(a.width * itemScale, a.height * itemScale);\n                a.body.collider.type = CollisionType.Fixed;\n                break;\n            default:\n                throw new Error(\"unsupported appliance type: \" + type);\n        }\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        let spr = AnimationHelper.getScaledSprite(sprite, itemScale);\n        \n        a.addDrawing(spr);\n        a.applianceType = type;\n\n        return a;\n    }\n\n    public static createPanOnTile(scene: Scene, engine:Engine, xPos: number, yPos: number): Pan {\n        const itemScale = 0.75;\n        \n        let a = new Pan({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: vec(xPos * this.tileWidth, yPos * this.tileHeight)\n        });\n\n        scene.add(a);\n        a.setZIndex(35);\n\n        let panAttackSprites = new SpriteSheet({\n            image: Resources.PanAttack,\n            rows: 1,\n            columns: 3,\n            spWidth: 18,\n            spHeight: 18\n        });\n\n        let attackAnimation = AnimationHelper.getScaledAnimation(engine, panAttackSprites, 0,3, itemScale, 150);\n        attackAnimation.loop = false;\n        a.attackAnimation = attackAnimation;\n\n        let eSpr = AnimationHelper.getScaledSprite(Resources.PanEmpty.asSprite(), itemScale);\n        let fSpr = AnimationHelper.getScaledSprite(Resources.PanFilled.asSprite(), itemScale);\n        let dSpr = AnimationHelper.getScaledSprite(Resources.PanDone.asSprite(), itemScale);\n        let bSpr = AnimationHelper.getScaledSprite(Resources.PanBurned.asSprite(), itemScale);\n        \n        let cookingSheet = new SpriteSheet({\n            image: Resources.PanCooking ,\n            rows:1,\n            columns:3,\n            spWidth:18,\n            spHeight:9\n        });\n\n        let cAnim = AnimationHelper.getScaledAnimation(engine, cookingSheet, 0,3,itemScale,50);\n\n        a.addDrawing(\"empty\", eSpr);\n        a.addDrawing(\"filled\", fSpr);\n        a.addDrawing(\"attack\", attackAnimation);\n        a.addDrawing(\"cooking\", cAnim);\n        a.addDrawing(\"burned\", bSpr);\n        a.addDrawing(\"done\", dSpr);\n        \n        return a;\n    }\n\n    public static createCustomer(scene: Scene, position:Vector): Customer {\n        let a = new Customer({\n            scene: scene,\n            width: this.tileWidth,\n            height: this.tileHeight,\n            pos: position\n        });\n\n        scene.add(a);\n        a.setZIndex(40);\n\n        return a;\n    }\n}","import { Engine, Sprite, SpriteSheet, vec, Animation } from \"excalibur\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\n\nexport abstract class AnimationHelper {\n    public static getScaledAnimation (engine:Engine, spritesheet:SpriteSheet, startIndex:number, endIndex:number, scaleFactor:number = 1, speed:number = 100): Animation {\n        let a:Animation = spritesheet.getAnimationBetween(engine, startIndex, endIndex, speed);\n        \n        let scaleX = LevelBuildingHelper.tileHeight / a.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / a.height * scaleFactor;\n        a.scale = vec(scaleX, scaleY);\n\n        return a;\n    }\n\n    public static getScaledSprite (sprite:Sprite, scaleFactor:number = 1): Sprite {\n        let scaleX = LevelBuildingHelper.tileHeight / sprite.width * scaleFactor;\n        let scaleY = LevelBuildingHelper.tileHeight / sprite.height * scaleFactor;\n        let nSpr = sprite.clone();\n        nSpr.scale = vec(scaleX, scaleY);\n\n        return nSpr;\n    }\n}","import { Scene, ScreenElement, Texture, vec, Sprite, Timer, Engine, Label } from \"excalibur\";\nimport { Game } from \"../..\";\nimport { Resources } from \"../../resources\";\nimport { DeathScreen } from \"../../scenes/levels/death\";\nimport { LevelBase } from \"../../scenes/levels/levelBase\";\nimport { AnimationHelper } from \"./animationHelper\";\nimport { BalloonIconSprites } from \"./balloonIconSprites\";\nimport { ItemIconSprites } from \"./itemIconSprites\";\nimport { LevelBuildingHelper } from \"./levelBuildingHelper\";\nimport { Recipe } from \"./recipes\";\n\nexport abstract class UIHelper {\n    private static iconWidth:number = 50;\n    private static iconHeight:number = 50;\n\n    private static createUIIcon(texture: Sprite, xPos: number, yPos: number): ViewportLockedUIElement {\n        let se = new ViewportLockedUIElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"default\", AnimationHelper.getScaledSprite(texture, 0.65));\n\n        return se;\n    }\n\n    private static createUILabel(text: string, xPos: number, yPos: number, maxWidth:number): ViewportLockedUIElement {\n        let se = new ViewportLockedUIElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        let label = new Label(text, 0, 0);\n        label.fontSize = 30;\n        label.maxWidth = maxWidth;\n        se.add(label);\n        \n        return se;\n    }\n\n    private static createUIToggleButton (spriteOn:Sprite, spriteOff:Sprite, xPos:number, yPos:number): ViewportLockedUIElement {\n        let se = new ViewportLockedUIElement({\n            width:this.iconWidth,\n            height: this.iconHeight,\n            pos: vec(xPos,yPos)\n        });\n        \n        se.addDrawing(\"on\", AnimationHelper.getScaledSprite(spriteOn, 0.7));\n        se.addDrawing(\"off\", AnimationHelper.getScaledSprite(spriteOff, 0.7));\n\n        return se;\n    }\n\n    public static addLevelUI (scene:LevelBase) {\n        let musicToggle = this.createUIToggleButton(BalloonIconSprites.MusicBalloon, BalloonIconSprites.MusicBalloonOff, window.innerWidth - 220, 50);\n        musicToggle.xRelativeTo = \"right\";\n        musicToggle.x = -220;\n        musicToggle.y = 50;\n        \n        musicToggle.on ('pointerup', (event) =>{\n            scene.toggleMusic();\n            console.log(\"music button clicked\");\n            if (Game.muteMusic) {\n                musicToggle.setDrawing(\"off\");\n            } else {\n                musicToggle.setDrawing(\"on\");\n            }\n        });\n\n        scene.add(musicToggle);\n\n        if (Game.muteMusic) {\n            musicToggle.setDrawing(\"off\");\n        }\n\n        let hp1 = this.createUIIcon(ItemIconSprites.Heart, window.innerWidth - 120, 50);\n        hp1.xRelativeTo = \"right\";\n        hp1.x = -120;\n        hp1.y = 50;\n        hp1.name = \"hp1\";\n        hp1.addDrawing(\"hurt\", AnimationHelper.getScaledSprite(ItemIconSprites.BlackHeart, 0.65))\n\n        let hp2 = this.createUIIcon(ItemIconSprites.Heart, window.innerWidth - 90, 50);\n        hp2.xRelativeTo = \"right\";\n        hp2.x = -90;\n        hp2.y = 50;\n        hp2.name = \"hp2\";\n        hp2.addDrawing(\"hurt\", AnimationHelper.getScaledSprite(ItemIconSprites.BlackHeart, 0.65))\n\n        let hp3 = this.createUIIcon(ItemIconSprites.Heart, window.innerWidth - 60, 50);\n        hp3.xRelativeTo = \"right\";\n        hp3.x = -60;\n        hp3.y = 50;\n        hp3.name = \"hp3\";\n        hp3.addDrawing(\"hurt\", AnimationHelper.getScaledSprite(ItemIconSprites.BlackHeart, 0.65))\n\n        scene.add (hp1);\n        scene.add (hp2);\n        scene.add (hp3);\n\n        let feedLabel = this.createUILabel(\"Customers Left: \", 0, 0, 120);\n        feedLabel.xRelativeTo = \"right\";\n        feedLabel.x = -150;\n        feedLabel.y = 130;\n        feedLabel.name = \"feedlabel\";\n        scene.add(feedLabel);\n\n        let timer = new UITimer(50);\n        timer.uiElements.push(musicToggle);\n        timer.uiElements.push(hp1);\n        timer.uiElements.push(hp2);\n        timer.uiElements.push(hp3);\n        timer.uiElements.push(feedLabel);\n\n        scene.add(timer);\n        timer.reset();\n    }\n\n    public static addTutorialButton (scene:LevelBase, nextLevel:string) {\n        let tutorialButton = this.createUIIcon(Resources.TutorialButton.asSprite(), window.innerWidth / 2, window.innerHeight / 2);\n        tutorialButton.xRelativeTo = \"right\";\n        tutorialButton.yRelativeTo = \"bottom\";\n        tutorialButton.y = -150;\n        tutorialButton.x = -200;\n\n        tutorialButton.scale = vec(3,2);\n\n        scene.add(tutorialButton);\n        \n        let timer = new UITimer(50);\n        timer.uiElements.push(tutorialButton);\n        scene.add(timer);\n        timer.reset();\n\n        tutorialButton.on(\"pointerup\", (e) => {\n            if (tutorialButton.scene === Game.CurrentGame.currentScene) {\n                Game.CurrentGame.goToScene(nextLevel);\n                console.log(\"tutorial button clicked\");\n            }\n        });\n    }\n\n    public static addDeathUI (scene:DeathScreen, engine:Engine) {\n        let restartButton = this.createUIIcon(Resources.RestartButton.asSprite(), window.innerWidth / 2, window.innerHeight / 2);\n        restartButton.xRelativeTo = \"center\";\n        restartButton.yRelativeTo = \"center\";\n        restartButton.y = 70;\n\n        restartButton.scale = vec(5,5);\n\n        scene.add(restartButton);\n        let timer = new UITimer(50);\n        timer.uiElements.push(restartButton);\n        scene.add(timer);\n        timer.reset();\n\n        restartButton.on(\"pointerup\", (e) => {\n            if (Game.CurrentGame.currentScene instanceof DeathScreen) {\n                scene.lastLevel.onInitialize(engine);\n                engine.goToScene(scene.lastLevel.levelName)\n                console.log(\"restart button clicked\");\n            }\n        });\n    }\n}\n\nexport class ViewportLockedUIElement extends ScreenElement {\n    public x:number = 0;\n    public y:number = 0;\n    public xRelativeTo:string;\n    public yRelativeTo:string;\n    public name:string\n}\nexport class UITimer extends Timer {\n    public uiElements:ViewportLockedUIElement[] = [];\n\n    constructor (interval:number) {\n        super({\n            interval:interval,\n            repeats: true\n        })\n\n        this.on(this.updateUI);\n    }\n\n    private updateUI () {\n        this.uiElements.forEach(element => {\n            let xPos:number, yPos:number;\n\n            if (element.xRelativeTo) {\n                switch(element.xRelativeTo) {\n                    case \"right\":\n                        xPos = window.innerWidth + element.x;\n                        break;\n                    case \"left\":\n                        xPos = element.x;\n                        break;\n                    case \"center\":\n                        xPos = (window.innerWidth / 2) - (element.width / 2) + element.x;\n                        break;\n                }\n            } else {\n                xPos = element.x;\n            }\n\n            if (element.yRelativeTo) {\n                switch(element.yRelativeTo) {\n                    case \"bottom\":\n                        yPos = window.innerHeight + element.y;\n                        break;\n                    case \"top\":\n                        yPos = element.y;\n                        break;\n                    case \"center\":\n                        yPos = (window.innerHeight / 2) - (element.height / 2) + element.y;\n                        break;\n                }\n            } else {\n                yPos = element.y\n            }\n\n            element.pos = vec(xPos, yPos);\n\n            if (element.name && element.name.startsWith(\"hp\")) {\n                let pHP = (element.scene as LevelBase).player.hp;\n\n                if (element.name === \"hp2\" && pHP < 2) {\n                    element.setDrawing(\"hurt\");\n                }  else if (element.name === \"hp3\" && pHP < 3) {\n                    element.setDrawing(\"hurt\");\n                } else {\n                    element.setDrawing(\"default\");\n                }\n            }\n\n            if (element.name === \"feedlabel\") {\n                let l = element.children[0];\n\n                if (l && l instanceof Label)\n                { \n                    l.text = \"Customers Left: \" + (element.scene as LevelBase).customersToServe;\n                }\n            }\n        });\n    }\n}","import { Color, Engine, Scene, ScreenElement } from \"excalibur\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class DeathScreen extends Scene {\n    public lastLevel:LevelBase;\n\n    onInitialize(engine:Engine){\n        engine.backgroundColor = Color.Black;\n\n        UIHelper.addDeathUI(this, engine);\n    }\n    \n    public onPreUpdate (engine:Engine) {\n        engine.backgroundColor = Color.Black;\n    }\n}","import { Actor, CollisionType, Color, Engine, Input, vec, Shape, SpriteSheet, Animation, Vector, Resource } from 'excalibur';\nimport { Game } from '../..';\nimport { Resources } from '../../resources';\nimport { DeathScreen } from '../../scenes/levels/death';\nimport { LevelBase } from '../../scenes/levels/levelBase';\nimport { AnimationHelper } from '../objects/animationHelper';\nimport { Appliance, ApplianceType } from '../objects/appliance';\nimport { Ingredient } from '../objects/ingredient';\nimport { Item } from '../objects/item';\nimport { LevelBuildingHelper } from '../objects/levelBuildingHelper';\nimport { Meal } from '../objects/meal';\nimport { Pan } from '../objects/pan';\nimport { Humanoid } from './humanoid';\n\nexport class Player extends Humanoid {\n    constructor() {\n        super({\n            pos: vec(150, 150),\n            width: 25,\n            height: 25,\n            color: new Color(100, 255, 100)\n        });\n    }\n\n    protected spriteScale: number = 0.9;\n\n    private hitboxScale: number = 0.8;\n    private heldItem: Item;\n    private immunityTime = 0;\n\n    public hp:number = 3;\n\n    onInitialize(engine: Engine) {\n        this.sprites = Resources.PlayerSprites;\n\n        this.body.collider.type = CollisionType.Active;\n        this.body.collider.shape = Shape.Box(LevelBuildingHelper.tileHeight * this.hitboxScale, LevelBuildingHelper.tileHeight * this.hitboxScale);\n        \n        super.onInitialize(engine);\n    }\n\n    public hurt() {\n        if (this.immunityTime <= 0) {\n\n            this.immunityTime = 1000;\n            this.hp -= 1\n            this.actions.blink(40,10,this.immunityTime/50);\n\n            if (this.hp <= 0) {\n                let deathScene = Game.CurrentGame.scenes[\"death\"];\n                \n                if (deathScene instanceof DeathScreen) {\n                    deathScene.lastLevel = this.scene as LevelBase;\n                    Game.CurrentGame.goToScene(\"death\");\n                }\n            }\n        }\n    }\n\n    public onPreUpdate(engine: Engine, delta: number) {\n        super.onPreUpdate(engine, delta);\n\n        if (this.immunityTime > 0) {\n            this.immunityTime -= delta;\n        }\n\n        let attacking = false;\n\n        if (this.heldItem instanceof Pan) {\n            attacking = this.heldItem.isAttacking;\n        }\n\n        if (!attacking) {\n            this.doMovement(engine);\n            // force facing here, otherwise it can get janky when a solid object blocks\n            // movement (and therefor facing).\n            this.doFacing();\n        } else {\n            this.vel = vec(0, 0);\n        }\n\n        /////////////////////////////////\n        /////// Object Interaction //////\n        /////////////////////////////////\n        if (!attacking) {\n            if (this.heldItem) {\n                this.heldItem.pos = vec(this.pos.x, this.pos.y - 40);\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Space)) {\n                if (!this.heldItem) {\n                    this.tryPickupItem();\n                } else {\n                    this.trySetDownItem();\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.E)) {\n                if (this.heldItem instanceof Pan) {\n                    this.heldItem.attack(this.getFacingTargetPos(0.7), this.facing);\n                }\n            }\n\n            if (engine.input.keyboard.wasPressed(Input.Keys.Q)) {\n                this.examine();\n            }\n        }\n\n        /////////////////////////////////\n        ////////////// DEBUG ////////////\n        /////////////////////////////////\n        if (engine.input.keyboard.wasPressed(Input.Keys.Semicolon)) {\n            let val = prompt(\"goto level\", \"level_test\");\n            if (val) {\n                engine.goToScene(val);\n            }\n        }\n    }\n    \n\n    private doMovement(engine: Engine) {\n        let velX: number = 0, velY: number = 0;\n\n        if (engine.input.keyboard.isHeld(Input.Keys.W)) {\n            velY -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.S)) {\n            velY += 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.A)) {\n            velX -= 1;\n        }\n\n        if (engine.input.keyboard.isHeld(Input.Keys.D)) {\n            velX += 1;\n        }\n\n        let vecMag = Math.sqrt(Math.abs(velX) + Math.abs(velY));\n\n        let adjustedVelY = velY / vecMag * this.baseSpeed;\n        let adjustedVelX = velX / vecMag * this.baseSpeed;\n\n        if (vecMag > 0) {\n            this.vel = vec(adjustedVelX, adjustedVelY);\n        } else {\n            this.vel = vec(0, 0);\n        }\n    }\n\n    private trySetDownItem() {\n        let tPos = this.getFacingTargetPos(1.0);\n\n        // check for trashcan first\n        let tc = this.scene.actors.filter(x => x instanceof Appliance &&\n                                               x.applianceType === ApplianceType.Trashcan &&\n                                               x.contains(tPos.x, tPos.y));\n\n        if (tc.length > 0 && this.heldItem.canBeTrashed) {\n            this.heldItem.kill();\n            this.heldItem = null;\n            return;\n        }\n\n        // Now check for pans\n        let pans = this.scene.actors.filter(x => x instanceof Pan &&\n                                                 x.cookTime === 0 &&\n                                                 x.contains(tPos.x, tPos.y));   \n        \n        if (this.heldItem instanceof Ingredient && pans.length > 0) {\n            let p = pans[0] as Pan;\n            p.ingredients.push(this.heldItem.name);\n            this.heldItem.kill();\n            this.heldItem = null;\n\n            return;\n        }\n\n        var targets = this.scene.actors.filter(x => x instanceof Item &&\n            !(x instanceof Pan) &&\n            !(x === this.heldItem) &&\n            x.contains(tPos.x, tPos.y));\n\n        if (targets.length === 0) {\n            this.heldItem.pos = tPos\n            this.heldItem.isHeld = false;\n            this.heldItem = null;\n        }\n    }\n\n    private tryPickupItem() {\n        let tPos = [this.getFacingTargetPos(0.55), this.getFacingTargetPos(0.25), this.getFacingTargetPos(0.75)]\n\n        tPos.forEach(pos => {\n            var targets = this.scene.actors.filter(x => x instanceof Item &&\n                x.contains(pos.x, pos.y));\n    \n            if (targets.length > 0) {\n                this.heldItem = targets[0] as Item;\n                this.heldItem.isHeld = true;\n                return\n            } \n        });\n    }\n\n    private examine() {\n        let tPos = this.getFacingTargetPos(0.55);\n        var targets = this.scene.actors.filter(x => (x instanceof Item || x instanceof Appliance) &&\n            x.contains(tPos.x, tPos.y));\n\n        let item = targets[0];\n\n        if (item) {\n            if (item instanceof Pan) {\n                alert(\"Pan with contents: \" + JSON.stringify(item.ingredients));\n            }\n\n            if (item instanceof Ingredient) {\n                alert(\"Ingredient: \" + item.name);\n            }\n\n            if (item instanceof Appliance) {\n                alert(\"Appliance: \" + item.applianceType);\n            }\n\n            if (item instanceof Meal) {\n                alert(\"Meal: \" + item.name);\n            }\n        }\n    }\n}\n","import { Actor, Color, Engine, Scene, Sound, Sprite, TileMap, Timer, vec } from \"excalibur\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { Player } from \"../../actors/characters/player\";\nimport { Resources } from \"../../resources\";\nimport { Customer } from \"../../actors/characters/customer\";\nimport { Seat } from \"../../actors/objects/seat\";\nimport { Recipe, RecipeCard } from \"../../actors/objects/recipes\";\nimport { Game } from \"../..\";\n\nexport abstract class LevelBase extends Scene {\n    protected musicTrack: Sound;\n    protected customerSeats:Seat[] = [];\n    protected doors:Actor[] = [];\n    public customers:Customer[] = [];\n    protected customerSpawnSpeed:number = 8000; // average number of seconds before a new customer spawns\n    protected customerFrustratedTime = 10000; // ms\n    protected customerAttackTime = 25000; // ms\n\n    protected abstract borderWidth:number;\n    protected abstract borderHeight:number;\n    \n    protected abstract availableMeals:Recipe[];\n    protected abstract nextLevel:string;\n\n    public player: Player;\n    public abstract levelName:string;\n    public isTutorial:boolean = false;\n    public customersToServe:number = 10;\n\n    removeCustomer(customer: Customer) {\n        this.customers = this.customers.filter( x => x != customer);\n    }\n\n    public onDeactivate (oldScene:Scene, newScene:Scene) {\n        super.onDeactivate(oldScene, newScene);\n        this.musicTrack.stop();\n    }\n\n    public onInitialize(engine: Engine) {\n        this.actors.forEach(a => {\n            a.kill();\n        });\n\n        UIHelper.addLevelUI(this);\n\n        this.player = new Player;\n        this.add(this.player);\n\n        this.camera.strategy.lockToActor(this.player);\n        this.musicTrack = Resources.LevelLoop1;\n        this.musicTrack.loop = true;\n        \n        if (!Game.muteMusic) {\n            this.musicTrack.play();\n        }\n\n        this.createLevelBorder();\n        this.addBackgroundTiles();\n        this.addForegroundTiles();\n        this.addAppliances();\n        this.addPans(engine);\n        this.addItems();\n        this.addSeatsAndDoors();\n\n        for (let i = 0; i < this.availableMeals.length; i++) {\n            console.log(\"adding card for \" + this.availableMeals[i].resultName);\n\n            let a = new RecipeCard ({\n                pos: vec(25 + i * 100, 50)\n            });\n\n            a.setRecipe(this.availableMeals[i]);\n            this.add(a);\n        }\n\n        engine.backgroundColor = new Color(245, 242, 254);\n    }\n\n    public onPreUpdate(engine:Engine, delta:number) {\n        if (this.customers.length < this.customerSeats.length) {\n            console.log(\"Found \" + (this.customerSeats.length - this.customers.length) + \" empty seats\")\n\n            let b = this.customerSpawnSpeed / 3;\n            let v = this.customerSpawnSpeed * (4/3);\n            let i = b + Math.random() * v;\n\n            let di = Math.floor(Math.random() * this.doors.length);\n            let door = this.doors[di];\n\n            let customer = LevelBuildingHelper.createCustomer(this, door.pos);\n            let nextFreeSeat = this.customerSeats.filter(x => !this.customers.some(c => c.seat === x))[0];\n            customer.seat = nextFreeSeat;\n            customer.visible = false;\n\n            let mi = Math.floor(Math.random() * this.availableMeals.length);\n            customer.wantsMeal = this.availableMeals[mi];\n            customer.frustratedTime = this.customerFrustratedTime;\n            customer.attackTime = this.customerAttackTime;\n\n            this.customers.push(customer);\n\n            let spawnTimer = new LevelTimer({\n                interval:i,\n                repeats:false,\n                fcn:this.spawnCustomer\n            });\n\n            spawnTimer.level = this;\n            spawnTimer.customer = customer;\n\n            this.add(spawnTimer);\n\n            if (this.customersToServe <= 0) {\n                this.musicTrack.stop();\n\n                Resources.LevelWin.play(1).then (() => {\n                    engine.goToScene(this.nextLevel);\n                });\n            }\n        }\n    }\n\n    protected abstract addBackgroundTiles();\n    protected abstract addForegroundTiles();\n    protected abstract addAppliances();\n    protected abstract addPans(engine:Engine);\n    protected abstract addItems();\n    protected abstract addSeatsAndDoors();\n\n    private createLevelBorder() {\n        let borderColor = Resources.WarningSquare.asSprite();\n\n        for (let i = 0; i <= this.borderWidth; i++) {\n            LevelBuildingHelper.createWallTile(this, borderColor, i, 0);\n            LevelBuildingHelper.createWallTile(this, borderColor, i, this.borderHeight);\n        }\n\n        for (let i = 0; i < this.borderHeight; i++) {\n            LevelBuildingHelper.createWallTile(this, borderColor, 0, i);\n            LevelBuildingHelper.createWallTile(this, borderColor, this.borderWidth, i);\n        }\n    }\n\n    public toggleMusic() {\n        Game.muteMusic = !Game.muteMusic;\n        \n        if (Game.muteMusic) {\n            this.musicTrack.stop();\n        } else {\n            this.musicTrack.play();\n        }\n    }\n\n    protected spawnCustomer () {\n        let timer = (this as unknown as LevelTimer);\n\n        if (timer) {\n            timer.level.add(timer.customer);\n            timer.customer.walkToSeat();\n            timer.customer.visible = true;\n        }\n    }\n}\n\nexport class LevelTimer extends Timer {\n    public level:LevelBase;\n    public customer:Customer;\n}","import { Actor, Color, Engine, Resource, vec } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideFloorWallSprites } from \"../../actors/objects/insideFloorWallSprites\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { Recipe, Recipes } from \"../../actors/objects/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTest extends LevelBase {\n    protected nextLevel: string = this.levelName;\n    \n    protected borderWidth: number = 15;\n    protected borderHeight: number = 20;\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg];\n\n    protected customerFrustratedTime = 1000; // ms\n    protected customerAttackTime = 20000; // ms\n    protected customerSpawnSpeed = 1;\n\n    public levelName = \"level_test\";\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n\n        // TODO something less shithouse\n        alert(\"Controls:\\nWASD - Movement\\nSpace - Pick up/put down\\nE - Swing pan\\nQ - Examine\\n\\nSwing a pan with cooked food (yellow) or burned food (red/grey) onto the brown serving tray to create a meal. Serve meals to customers.\");\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 6, 12);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 8, 12);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 10, 12);\n    }\n\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 6, 11);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 8, 11);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 10, 11);\n        \n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 7, 4);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"FlourBag\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"Banana\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"Poison\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"EggRaw\")\n    }\n\n    protected addSeatsAndDoors() {\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 10, 12));\n        //this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 8, 12));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"r\", 5, 11.5));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Bag.asSprite(), 3, 12));\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Bag.asSprite(), 14, 14));\n    }\n}\n","import { Actor, Color, Engine, Scene } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { Recipe } from \"../../actors/objects/recipes\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class LevelTestRay extends LevelBase {\n    protected nextLevel: string;\n    protected borderWidth: number;\n    protected borderHeight: number;\n    protected availableMeals: Recipe[];\n    public levelName = \"level_testray\";\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceLeft, 5, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 6, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 7, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 8, 9);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 9, 9);\n    }\n    \n    protected addForegroundTiles() {\n        let wallColor = new Color(200, 200, 200);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 1);\n        LevelBuildingHelper.createWallTile(this, wallColor, 1, 3);\n\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 2);\n        LevelBuildingHelper.createWallTile(this, wallColor, 2, 4);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopGrey, 2, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.StoolTopRed, 3, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopLeft, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopMid, 2, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_TopRight, 3, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomLeftLeg, 1, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomMidNoLeg, 2, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_H_BottomRightLeg, 3, 9);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 1, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.RedStool, 2, 10);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.GreyStool, 3, 10);\n        \n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopEmpty, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 4, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 5, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 5, 8);\n\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanTopLid, 10, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.TrashCanBottom, 10, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 9, 8);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 6, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 7, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 8, 8);\n    };\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n    };\n    protected addPans(engine:Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 7,8)\n        LevelBuildingHelper.createPanOnTile(this,engine, 2,4)\n    };\n\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 8, 8, \"apple\", ItemIconSprites.Apple )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 5, \"flour\", ItemIconSprites.FlourBag )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 6, \"mayo\", ItemIconSprites.Mayo )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 7, \"poison\", ItemIconSprites.Poison )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 9, 6, \"skull\", ItemIconSprites.Skull )\n    }\n\n    protected addSeatsAndDoors(): Actor[] {\n        throw new Error(\"not implimented\");\n    }\n}","import { Actor, Engine } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { Recipe, Recipes } from \"../../actors/objects/recipes\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Level1 extends LevelBase {\n    protected nextLevel: string = \"level_1a\";\n\n    protected borderWidth: number = 10;\n    protected borderHeight: number = 10;\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg, Recipes.Cookie, Recipes.MonsterPie];\n    public levelName = \"level_1\";\n    protected customerFrustratedTime = 25000;\n    protected customerAttackTime = 60000;\n    protected customerSpawnSpeed = 15000;\n    \n    public customersToServe = 5;\n\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 4, 8));\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"u\", 6, 8));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 10, 9));\n    }\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 4, 8);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 6, 8);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 1, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 2, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 3, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 4, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceCenter, 5, 5);\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceRight, 6, 5);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.CounterFaceStandalone, 9, 6);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 4, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 6, 7);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterCornerBottomLeft, 1, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 2, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 3, 4);        \n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 4, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCentral, 5, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterBottomCornerRight, 6, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterStandalone, 6, 3);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterStandalone, 9, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        \n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 2.5);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 3.3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 4.3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 5);\n        \n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 4, 1);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,1)\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,2)\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,3)\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"FlourBag\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 3, 4, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 4, 4, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 4, \"Poison\" )\n    }\n\n    public onInitialize(engine:Engine) { \n        super.onInitialize(engine);\n    }\n}","import { ItemIconSprites } from \"../../actors/objects/itemIconSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { Recipe, Recipes } from \"../../actors/objects/recipes\";\nimport { Level1 } from \"./level_1\";\n\nexport class Level1a extends Level1 {\n    public levelName = \"level_1a\";\n    protected availableMeals: Recipe[] = [Recipes.BananaPie, Recipes.BananaCandy, Recipes.Cookie ];\n    protected customerSpawnSpeed = 10000;\n\n    public customersToServe = 10;\n\n    protected addItems () {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 2, 4, \"FlourBag\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 3, 4, \"Banana\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 4, 4, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 5, 4, \"SyringeYellow\")\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 6, 3, \"WhiteGem\")\n    }\n}","import { Color, Engine, Label } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { Recipe, Recipes } from \"../../actors/objects/recipes\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Tutorial1 extends LevelBase {\n    protected nextLevel: string = \"tutorial_2\";\n    protected borderWidth: number = 10;\n    protected borderHeight: number = 10;\n\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg, Recipes.MonsterPie];\n    public levelName: string = \"tutorial_1\";\n    public isTutorial = true;\n\n    public override onInitialize(engine:Engine) {\n        super.onInitialize(engine);\n\n        UIHelper.addTutorialButton(this, this.nextLevel);\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Use the space bar to\", -3, 2, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"pick up or set down items.\", -3, 2.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Ingredients will respawn\", -3, 4, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"if there is enough space.\", -3, 4.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Ingredients can be set\", -3, 7, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"down into pans.\", -3, 7.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Pans placed on ranges\", 13, 2.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"start to cook if they\", 13, 3, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"have ingredients.\", 13, 3.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"This is a serving board.\", 13, 7.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Swing a pan over it with E\", 13, 8, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"when the pan turns golden\", 13, 8.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to create a cooked meal.\", 13, 9, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Set down an ingredient or swing\", 4, 5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"a pan over the trash can \", 4, 5.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to throw away the ingredient(s).\", 4, 6, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Click the continue button\", 5, 12, 13, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to continue the tutorial.\", 5, 12.5, 4.5, Color.Magenta);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 9);\n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 2);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 4, 4);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,8)\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 4, \"Poison\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 5, \"FlourBag\" )\n    }\n    protected addSeatsAndDoors() {\n        //throw new Error(\"Method not implemented.\");\n    }\n\n}","import { Color, Engine, Label } from \"excalibur\";\nimport { ApplianceType } from \"../../actors/objects/appliance\";\nimport { InsideTileSprites } from \"../../actors/objects/insideTileSprites\";\nimport { LevelBuildingHelper } from \"../../actors/objects/levelBuildingHelper\";\nimport { Recipe, Recipes } from \"../../actors/objects/recipes\";\nimport { UIHelper } from \"../../actors/objects/uiHelper\";\nimport { Resources } from \"../../resources\";\nimport { LevelBase } from \"./levelBase\";\n\nexport class Tutorial2 extends LevelBase {\n    protected nextLevel: string = \"level_1\";\n    protected borderWidth: number = 10;\n    protected borderHeight: number = 10;\n    \n    protected customerAttackTime:number = 120000;\n    protected customerFrustratedTime:number = 20000;\n\n    protected availableMeals: Recipe[] = [Recipes.FriedEgg, Recipes.MonsterPie];\n    public levelName: string = \"tutorial_2\";\n    public isTutorial = true;\n\n    public override onInitialize(engine:Engine) {\n        super.onInitialize(engine);\n\n        UIHelper.addTutorialButton(this, this.nextLevel);\n    }\n\n    protected addBackgroundTiles() {\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Customers will want a\", -3, 2, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"specific meal. Make that\", -3, 2.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"meal and place it on the\", -3, 3, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"table in front of the customer.\", -3, 3.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"Customers who have waited for\", -3, 4.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"a while will get frustrated,\", -3, 5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"indicated by their thought \", -3, 5.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"bubble starting to flash.\", -3, 6, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"If you wait too long to feed\", -3, 7, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"them, customers will try to eat\", -3, 7.5, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"you! Swing your pans at them (E)\", -3, 8, 4.5, Color.Magenta);\n        LevelBuildingHelper.createLabelAcrossTiles(this, \"to fend off angry customers!\", -3, 8.5, 4.5, Color.Magenta);\n\n        LevelBuildingHelper.createBackgroundTile(this, InsideTileSprites.Table_V_BottomLeg, 4, 8);\n    }\n    protected addForegroundTiles() {\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 9, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 1);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 2);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 3);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 4);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 5);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 6);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 7);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 8);\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.CounterVerticalFull, 1, 9);\n\n        LevelBuildingHelper.createWallTile(this, InsideTileSprites.Table_V_TopLarge, 4, 7);\n    }\n    protected addAppliances() {\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 2);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Stove, 9, 3);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.ServingPlate, 9, 7);\n        LevelBuildingHelper.createApplianceOnTile(this, ApplianceType.Trashcan, 4, 4);\n    }\n    protected addPans(engine: Engine) {\n        LevelBuildingHelper.createPanOnTile(this,engine, 1,8)\n    }\n    protected addItems() {\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 2, \"Apple\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 3, \"EggRaw\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 4, \"Poison\" )\n        LevelBuildingHelper.createIngrediantSpawnerOnTile(this, 1, 5, \"FlourBag\" )\n    }\n    protected addSeatsAndDoors() {\n        this.customerSeats.push(LevelBuildingHelper.createSeat(this, InsideTileSprites.RedStool, \"r\", 3, 7.5));\n\n        this.doors.push(LevelBuildingHelper.createWallTile (this, Resources.Door.asSprite(), 8, 10));\n    }\n\n}\n","import { Engine, Loader, DisplayMode, Color, Timer } from 'excalibur';\nimport { Player } from './actors/characters/player';\nimport { Resources } from './resources';\nimport { DeathScreen } from './scenes/levels/death';\nimport { LevelBase } from './scenes/levels/levelBase';\nimport { LevelTest } from './scenes/levels/levelTest';\nimport { LevelTestRay } from './scenes/levels/levelTestRay';\nimport { Level1 } from './scenes/levels/level_1';\nimport { Level1a } from './scenes/levels/level_1a';\nimport { Tutorial1 } from './scenes/levels/tutorial_1';\nimport { Tutorial2 } from './scenes/levels/tutorial_2';\n\n/**\n * Managed game class\n */\nexport class Game extends Engine {\n    public static CurrentGame:Game;\n    public static muteMusic:boolean = false;\n\n    constructor() {\n        super({ displayMode: DisplayMode.FullScreen });\n        Game.CurrentGame = this;\n    }\n\n    public start() {\n        this.addLevel(new LevelTest(this));\n        this.addLevel(new Level1(this));\n        this.addLevel(new LevelTestRay(this));\n        this.addLevel(new Tutorial1(this));\n        this.addLevel(new Tutorial2(this));\n        this.addLevel(new Level1a(this));\n        \n        game.add('death', new DeathScreen(this));\n\n        // Automatically load all default resources\n        const loader = new Loader(Object.values(Resources));\n\n        // TODO add custom loader screen \n        loader.suppressPlayButton = false;\n\n        return super.start(loader);\n    }\n\n    private addLevel(level: LevelBase) {\n        game.add(level.levelName, level);\n    }\n}\n\nconst game = new Game();\n\ngame.start().then(() => {\n    game.goToScene('tutorial_1');\n});\n\ndocument.oncontextmenu = () => {\n    return false;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [325], () => (__webpack_require__(602)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}